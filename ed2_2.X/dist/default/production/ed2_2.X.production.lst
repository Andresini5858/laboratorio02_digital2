

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 08:31:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389                           
   390                           	psect	strings
   391     0800                     __pstrings:
   392     0800                     stringtab:
   393     0800                     __stringtab:
   394                           
   395                           ;	String table - string pointers are 1 byte each
   396     0800  1BFF               	btfsc	btemp+1,7
   397     0801  280A               	ljmp	stringcode
   398     0802  1383               	bcf	3,7
   399     0803  187F               	btfsc	btemp+1,0
   400     0804  1783               	bsf	3,7
   401     0805  0800               	movf	0,w
   402     0806  0A84               	incf	4,f
   403     0807  1903               	skipnz
   404     0808  0AFF               	incf	btemp+1,f
   405     0809  0008               	return
   406     080A                     stringcode:
   407     080A                     stringdir:
   408     080A  3008               	movlw	high stringdir
   409     080B  008A               	movwf	10
   410     080C  0804               	movf	4,w
   411     080D  0A84               	incf	4,f
   412     080E  0782               	addwf	2,f
   413     080F                     __stringbase:
   414     080F  3400               	retlw	0
   415     0810                     __end_of__stringtab:
   416     0810                     _dpowers:
   417     0810  3401               	retlw	1
   418     0811  3400               	retlw	0
   419     0812  340A               	retlw	10
   420     0813  3400               	retlw	0
   421     0814  3464               	retlw	100
   422     0815  3400               	retlw	0
   423     0816  34E8               	retlw	232
   424     0817  3403               	retlw	3
   425     0818  3410               	retlw	16
   426     0819  3427               	retlw	39
   427     081A                     __end_of_dpowers:
   428     001E                     _ADRESH	set	30
   429     0006                     _PORTBbits	set	6
   430     000B                     _INTCONbits	set	11
   431     0008                     _PORTD	set	8
   432     0007                     _PORTC	set	7
   433     0006                     _PORTB	set	6
   434     0005                     _PORTA	set	5
   435     000C                     _PIR1bits	set	12
   436     001F                     _ADCON0bits	set	31
   437     009F                     _ADCON1bits	set	159
   438     0086                     _TRISBbits	set	134
   439     008F                     _OSCCONbits	set	143
   440     008C                     _PIE1bits	set	140
   441     0088                     _TRISD	set	136
   442     0087                     _TRISC	set	135
   443     0086                     _TRISB	set	134
   444     0189                     _ANSELHbits	set	393
   445     0188                     _ANSELbits	set	392
   446     0189                     _ANSELH	set	393
   447     081A                     STR_3:
   448     081A  3425               	retlw	37	;'%'
   449     081B  3464               	retlw	100	;'d'
   450     081C  342E               	retlw	46	;'.'
   451     081D  3425               	retlw	37	;'%'
   452     081E  3464               	retlw	100	;'d'
   453     081F  3425               	retlw	37	;'%'
   454     0820  3464               	retlw	100	;'d'
   455     0821  3456               	retlw	86	;'V'
   456     0822  3400               	retlw	0
   457     0823                     STR_2:
   458     0823  3453               	retlw	83	;'S'
   459     0824  3431               	retlw	49	;'1'
   460     0825  343A               	retlw	58	;':'
   461     0826  3400               	retlw	0
   462     0827                     STR_1:
   463     0827  3453               	retlw	83	;'S'
   464     0828  3432               	retlw	50	;'2'
   465     0829  343A               	retlw	58	;':'
   466     082A  3400               	retlw	0
   467     081A                     
   468                           	psect	cinit
   469     0015                     start_initialization:	
   470                           ; #config settings
   471                           
   472     0015                     __initialization:
   473                           
   474                           ; Clear objects allocated to BANK0
   475     0015  1383               	bcf	3,7	;select IRP bank0
   476     0016  303E               	movlw	low __pbssBANK0
   477     0017  0084               	movwf	4
   478     0018  3053               	movlw	low (__pbssBANK0+21)
   479     0019  120A  158A  26AD  120A  118A  	fcall	clear_ram0
   480                           
   481                           ; Clear objects allocated to BANK1
   482     001E  30A0               	movlw	low __pbssBANK1
   483     001F  0084               	movwf	4
   484     0020  30B4               	movlw	low (__pbssBANK1+20)
   485     0021  120A  158A  26AD  120A  118A  	fcall	clear_ram0
   486     0026                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489     0026                     __end_of__initialization:
   490     0026  0183               	clrf	3
   491     0027  120A  118A  2EBB   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssBANK0
   494     003E                     __pbssBANK0:
   495     003E                     _centesima2:
   496     003E                     	ds	2
   497     0040                     _decima2:
   498     0040                     	ds	2
   499     0042                     _unidad2:
   500     0042                     	ds	2
   501     0044                     _centesima1:
   502     0044                     	ds	2
   503     0046                     _decima1:
   504     0046                     	ds	2
   505     0048                     _unidad1:
   506     0048                     	ds	2
   507     004A                     _vol2:
   508     004A                     	ds	2
   509     004C                     _voltaje2:
   510     004C                     	ds	2
   511     004E                     _voltaje1:
   512     004E                     	ds	2
   513     0050                     _valor:
   514     0050                     	ds	2
   515     0052                     _vol1:
   516     0052                     	ds	1
   517                           
   518                           	psect	bssBANK1
   519     00A0                     __pbssBANK1:
   520     00A0                     _buffer:
   521     00A0                     	ds	20
   522                           
   523                           	psect	clrtext
   524     0EAD                     clear_ram0:	
   525                           ;	Called with FSR containing the base address, and
   526                           ;	W with the last address+1
   527                           
   528     0EAD  0064               	clrwdt	;clear the watchdog before getting into this loop
   529     0EAE                     clrloop0:
   530     0EAE  0180               	clrf	0	;clear RAM location pointed to by FSR
   531     0EAF  0A84               	incf	4,f	;increment pointer
   532     0EB0  0604               	xorwf	4,w	;XOR with final address
   533     0EB1  1903               	btfsc	3,2	;have we reached the end yet?
   534     0EB2  3400               	retlw	0	;all done for this memory range, return
   535     0EB3  0604               	xorwf	4,w	;XOR again to restore value
   536     0EB4  2EAE               	goto	clrloop0	;do the next byte
   537                           
   538                           	psect	cstackBANK1
   539     00B4                     __pcstackBANK1:
   540     00B4                     ??_Lcd_Cmd:
   541     00B4                     ??_Lcd_Write_Char:	
   542                           ; 1 bytes @ 0x0
   543                           
   544                           
   545                           ; 1 bytes @ 0x0
   546     00B4                     	ds	1
   547     00B5                     Lcd_Write_Char@temp:
   548                           
   549                           ; 1 bytes @ 0x1
   550     00B5                     	ds	1
   551     00B6                     Lcd_Cmd@a:
   552     00B6                     Lcd_Write_Char@y:	
   553                           ; 1 bytes @ 0x2
   554                           
   555                           
   556                           ; 1 bytes @ 0x2
   557     00B6                     	ds	1
   558     00B7                     ??_Lcd_Init:
   559     00B7                     ?_Lcd_Set_Cursor:	
   560                           ; 1 bytes @ 0x3
   561                           
   562     00B7                     Lcd_Set_Cursor@b:	
   563                           ; 1 bytes @ 0x3
   564                           
   565     00B7                     Lcd_Write_Char@a:	
   566                           ; 1 bytes @ 0x3
   567                           
   568                           
   569                           ; 1 bytes @ 0x3
   570     00B7                     	ds	1
   571     00B8                     ??_Lcd_Set_Cursor:
   572     00B8                     ?_Lcd_Write_String:	
   573                           ; 1 bytes @ 0x4
   574                           
   575     00B8                     Lcd_Write_String@a:	
   576                           ; 1 bytes @ 0x4
   577                           
   578                           
   579                           ; 2 bytes @ 0x4
   580     00B8                     	ds	1
   581     00B9                     Lcd_Set_Cursor@a:
   582                           
   583                           ; 1 bytes @ 0x5
   584     00B9                     	ds	1
   585     00BA                     ??_Lcd_Write_String:
   586     00BA                     Lcd_Set_Cursor@z:	
   587                           ; 1 bytes @ 0x6
   588                           
   589                           
   590                           ; 1 bytes @ 0x6
   591     00BA                     	ds	1
   592     00BB                     Lcd_Set_Cursor@y:
   593                           
   594                           ; 1 bytes @ 0x7
   595     00BB                     	ds	1
   596     00BC                     Lcd_Set_Cursor@temp:
   597                           
   598                           ; 1 bytes @ 0x8
   599     00BC                     	ds	1
   600     00BD                     Lcd_Write_String@i:
   601                           
   602                           ; 2 bytes @ 0x9
   603     00BD                     	ds	2
   604                           
   605                           	psect	cstackCOMMON
   606     0070                     __pcstackCOMMON:
   607     0070                     ?_setup:
   608     0070                     ?_ADC_setup:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_ADC_config:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_Lcd_Init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ?_main:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_isr:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_Lcd_Port:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_Lcd_Cmd:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_Lcd_Clear:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_Lcd_Write_Char:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?i1_Lcd_Port:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ??i1_Lcd_Port:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?i1_Lcd_Cmd:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?i1_Lcd_Write_Char:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_ADC_read:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?___wmul:	
   651                           ; 2 bytes @ 0x0
   652                           
   653     0070                     i1Lcd_Port@a:	
   654                           ; 2 bytes @ 0x0
   655                           
   656     0070                     ___wmul@multiplier:	
   657                           ; 1 bytes @ 0x0
   658                           
   659                           
   660                           ; 2 bytes @ 0x0
   661     0070                     	ds	1
   662     0071                     ??i1_Lcd_Cmd:
   663     0071                     ??i1_Lcd_Write_Char:	
   664                           ; 1 bytes @ 0x1
   665                           
   666                           
   667                           ; 1 bytes @ 0x1
   668     0071                     	ds	1
   669     0072                     ??_ADC_read:
   670     0072                     i1Lcd_Write_Char@temp:	
   671                           ; 1 bytes @ 0x2
   672                           
   673     0072                     ___wmul@multiplicand:	
   674                           ; 1 bytes @ 0x2
   675                           
   676                           
   677                           ; 2 bytes @ 0x2
   678     0072                     	ds	1
   679     0073                     i1Lcd_Cmd@a:
   680     0073                     i1Lcd_Write_Char@y:	
   681                           ; 1 bytes @ 0x3
   682                           
   683                           
   684                           ; 1 bytes @ 0x3
   685     0073                     	ds	1
   686     0074                     ??___wmul:
   687     0074                     ?i1_Lcd_Set_Cursor:	
   688                           ; 1 bytes @ 0x4
   689                           
   690     0074                     ADC_read@can:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0074                     i1Lcd_Set_Cursor@b:	
   694                           ; 1 bytes @ 0x4
   695                           
   696     0074                     i1Lcd_Write_Char@a:	
   697                           ; 1 bytes @ 0x4
   698                           
   699     0074                     ___wmul@product:	
   700                           ; 1 bytes @ 0x4
   701                           
   702                           
   703                           ; 2 bytes @ 0x4
   704     0074                     	ds	1
   705     0075                     ??i1_Lcd_Set_Cursor:
   706     0075                     ?i1_Lcd_Write_String:	
   707                           ; 1 bytes @ 0x5
   708                           
   709     0075                     i1Lcd_Write_String@a:	
   710                           ; 1 bytes @ 0x5
   711                           
   712                           
   713                           ; 2 bytes @ 0x5
   714     0075                     	ds	1
   715     0076                     ?___awdiv:
   716     0076                     ?___lwdiv:	
   717                           ; 2 bytes @ 0x6
   718                           
   719     0076                     i1Lcd_Set_Cursor@a:	
   720                           ; 2 bytes @ 0x6
   721                           
   722     0076                     ___awdiv@divisor:	
   723                           ; 1 bytes @ 0x6
   724                           
   725     0076                     ___lwdiv@divisor:	
   726                           ; 2 bytes @ 0x6
   727                           
   728                           
   729                           ; 2 bytes @ 0x6
   730     0076                     	ds	1
   731     0077                     ??i1_Lcd_Write_String:
   732     0077                     i1Lcd_Set_Cursor@z:	
   733                           ; 1 bytes @ 0x7
   734                           
   735                           
   736                           ; 1 bytes @ 0x7
   737     0077                     	ds	1
   738     0078                     i1Lcd_Set_Cursor@y:
   739     0078                     ___awdiv@dividend:	
   740                           ; 1 bytes @ 0x8
   741                           
   742     0078                     ___lwdiv@dividend:	
   743                           ; 2 bytes @ 0x8
   744                           
   745                           
   746                           ; 2 bytes @ 0x8
   747     0078                     	ds	1
   748     0079                     i1Lcd_Set_Cursor@temp:
   749                           
   750                           ; 1 bytes @ 0x9
   751     0079                     	ds	1
   752     007A                     ??___awdiv:
   753     007A                     ??___lwdiv:	
   754                           ; 1 bytes @ 0xA
   755                           
   756     007A                     i1Lcd_Write_String@i:	
   757                           ; 1 bytes @ 0xA
   758                           
   759                           
   760                           ; 2 bytes @ 0xA
   761     007A                     	ds	1
   762     007B                     ??_map:
   763     007B                     ??___awmod:	
   764                           ; 1 bytes @ 0xB
   765                           
   766     007B                     ___lwdiv@quotient:	
   767                           ; 1 bytes @ 0xB
   768                           
   769                           
   770                           ; 2 bytes @ 0xB
   771     007B                     	ds	1
   772     007C                     ___awmod@counter:
   773                           
   774                           ; 1 bytes @ 0xC
   775     007C                     	ds	1
   776     007D                     ___awmod@sign:
   777     007D                     ___lwdiv@counter:	
   778                           ; 1 bytes @ 0xD
   779                           
   780                           
   781                           ; 1 bytes @ 0xD
   782     007D                     	ds	1
   783                           
   784                           	psect	cstackBANK0
   785     0020                     __pcstackBANK0:
   786     0020                     ?___lwmod:
   787     0020                     ___awdiv@counter:	
   788                           ; 2 bytes @ 0x0
   789                           
   790     0020                     ___lwmod@divisor:	
   791                           ; 1 bytes @ 0x0
   792                           
   793                           
   794                           ; 2 bytes @ 0x0
   795     0020                     	ds	1
   796     0021                     ___awdiv@sign:
   797                           
   798                           ; 1 bytes @ 0x1
   799     0021                     	ds	1
   800     0022                     ___awdiv@quotient:
   801     0022                     ___lwmod@dividend:	
   802                           ; 2 bytes @ 0x2
   803                           
   804                           
   805                           ; 2 bytes @ 0x2
   806     0022                     	ds	2
   807     0024                     ?_map:
   808     0024                     ??___lwmod:	
   809                           ; 1 bytes @ 0x4
   810                           
   811     0024                     ?___awmod:	
   812                           ; 1 bytes @ 0x4
   813                           
   814     0024                     map@value:	
   815                           ; 2 bytes @ 0x4
   816                           
   817     0024                     ___awmod@divisor:	
   818                           ; 2 bytes @ 0x4
   819                           
   820                           
   821                           ; 2 bytes @ 0x4
   822     0024                     	ds	1
   823     0025                     ___lwmod@counter:
   824                           
   825                           ; 1 bytes @ 0x5
   826     0025                     	ds	1
   827     0026                     ?_sprintf:
   828     0026                     sprintf@f:	
   829                           ; 2 bytes @ 0x6
   830                           
   831     0026                     map@inputmin:	
   832                           ; 1 bytes @ 0x6
   833                           
   834     0026                     ___awmod@dividend:	
   835                           ; 2 bytes @ 0x6
   836                           
   837                           
   838                           ; 2 bytes @ 0x6
   839     0026                     	ds	2
   840     0028                     map@inputmax:
   841                           
   842                           ; 2 bytes @ 0x8
   843     0028                     	ds	2
   844     002A                     map@outmin:
   845                           
   846                           ; 2 bytes @ 0xA
   847     002A                     	ds	2
   848     002C                     map@outmax:
   849                           
   850                           ; 2 bytes @ 0xC
   851     002C                     	ds	1
   852     002D                     ??_sprintf:
   853                           
   854                           ; 1 bytes @ 0xD
   855     002D                     	ds	3
   856     0030                     sprintf@ap:
   857                           
   858                           ; 1 bytes @ 0x10
   859     0030                     	ds	1
   860     0031                     sprintf@flag:
   861                           
   862                           ; 1 bytes @ 0x11
   863     0031                     	ds	1
   864     0032                     sprintf@prec:
   865                           
   866                           ; 1 bytes @ 0x12
   867     0032                     	ds	1
   868     0033                     sprintf@val:
   869                           
   870                           ; 2 bytes @ 0x13
   871     0033                     	ds	2
   872     0035                     sprintf@sp:
   873                           
   874                           ; 1 bytes @ 0x15
   875     0035                     	ds	1
   876     0036                     sprintf@c:
   877                           
   878                           ; 1 bytes @ 0x16
   879     0036                     	ds	1
   880     0037                     ??_isr:
   881                           
   882                           ; 1 bytes @ 0x17
   883     0037                     	ds	6
   884     003D                     ??_setup:
   885     003D                     ??_ADC_setup:	
   886                           ; 1 bytes @ 0x1D
   887                           
   888     003D                     ??_ADC_config:	
   889                           ; 1 bytes @ 0x1D
   890                           
   891     003D                     ??_Lcd_Port:	
   892                           ; 1 bytes @ 0x1D
   893                           
   894     003D                     Lcd_Port@a:	
   895                           ; 1 bytes @ 0x1D
   896                           
   897     003D                     ADC_config@channel:	
   898                           ; 1 bytes @ 0x1D
   899                           
   900                           
   901                           ; 1 bytes @ 0x1D
   902     003D                     	ds	1
   903     003E                     ??_main:
   904     003E                     ??_Lcd_Clear:	
   905                           ; 1 bytes @ 0x1E
   906                           
   907                           
   908                           	psect	maintext
   909     06BB                     __pmaintext:	
   910                           ; 1 bytes @ 0x1E
   911 ;;
   912 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   913 ;;
   914 ;; *************** function _main *****************
   915 ;; Defined at:
   916 ;;		line 49 in file "main.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : B00/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels required when called: 8
   936 ;; This function calls:
   937 ;;		_ADC_config
   938 ;;		_ADC_setup
   939 ;;		_Lcd_Init
   940 ;;		_Lcd_Set_Cursor
   941 ;;		_Lcd_Write_String
   942 ;;		_setup
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948     06BB                     _main:	
   949                           ;psect for function _main
   950                           
   951     06BB                     l2453:	
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954                           
   955                           
   956                           ;main.c: 50:     setup();
   957     06BB  120A  158A  26DA  120A  118A  	fcall	_setup
   958     06C0                     l2455:
   959                           
   960                           ;main.c: 51:     ADC_setup();
   961     06C0  120A  158A  26C2  120A  118A  	fcall	_ADC_setup
   962     06C5                     l2457:
   963                           
   964                           ;main.c: 52:     ADC_config(0);
   965     06C5  3000               	movlw	0
   966     06C6  120A  118A  2415  120A  118A  	fcall	_ADC_config
   967     06CB                     l2459:
   968                           
   969                           ;main.c: 53:     ADC_config(1);
   970     06CB  3001               	movlw	1
   971     06CC  120A  118A  2415  120A  118A  	fcall	_ADC_config
   972     06D1                     l2461:
   973                           
   974                           ;main.c: 54:     Lcd_Init();
   975     06D1  120A  118A  2533  120A  118A  	fcall	_Lcd_Init
   976     06D6                     l2463:
   977                           
   978                           ;main.c: 56:         Lcd_Set_Cursor(1,8);
   979     06D6  3008               	movlw	8
   980     06D7  1683               	bsf	3,5	;RP0=1, select bank1
   981     06D8  1303               	bcf	3,6	;RP1=0, select bank1
   982     06D9  00B7               	movwf	Lcd_Set_Cursor@b^(0+128)
   983     06DA  3001               	movlw	1
   984     06DB  120A  118A  237E  120A  118A  	fcall	_Lcd_Set_Cursor
   985     06E0                     l2465:
   986                           
   987                           ;main.c: 57:         Lcd_Write_String("S2:");
   988     06E0  3018               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   989     06E1  1683               	bsf	3,5	;RP0=1, select bank1
   990     06E2  1303               	bcf	3,6	;RP1=0, select bank1
   991     06E3  00B8               	movwf	Lcd_Write_String@a^(0+128)
   992     06E4  3080               	movlw	128
   993     06E5  00B9               	movwf	(Lcd_Write_String@a+1)^(0+128)
   994     06E6  120A  118A  2667  120A  118A  	fcall	_Lcd_Write_String
   995     06EB                     l2467:
   996                           
   997                           ;main.c: 58:         ADCON0bits.GO = 1;
   998     06EB  1283               	bcf	3,5	;RP0=0, select bank0
   999     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1000     06ED  149F               	bsf	31,1	;volatile
  1001     06EE                     l2469:
  1002                           
  1003                           ;main.c: 59:         Lcd_Set_Cursor(1,1);
  1004     06EE  1683               	bsf	3,5	;RP0=1, select bank1
  1005     06EF  1303               	bcf	3,6	;RP1=0, select bank1
  1006     06F0  01B7               	clrf	Lcd_Set_Cursor@b^(0+128)
  1007     06F1  0AB7               	incf	Lcd_Set_Cursor@b^(0+128),f
  1008     06F2  3001               	movlw	1
  1009     06F3  120A  118A  237E  120A  118A  	fcall	_Lcd_Set_Cursor
  1010     06F8                     l2471:
  1011                           
  1012                           ;main.c: 60:         Lcd_Write_String("S1:");
  1013     06F8  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1014     06F9  1683               	bsf	3,5	;RP0=1, select bank1
  1015     06FA  1303               	bcf	3,6	;RP1=0, select bank1
  1016     06FB  00B8               	movwf	Lcd_Write_String@a^(0+128)
  1017     06FC  3080               	movlw	128
  1018     06FD  00B9               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1019     06FE  120A  118A  2667  120A  118A  	fcall	_Lcd_Write_String
  1020     0703  2ED6               	goto	l2463
  1021     0704  120A  118A  2812   	ljmp	start
  1022     0707                     __end_of_main:
  1023                           
  1024                           	psect	text1
  1025     0EDA                     __ptext1:	
  1026 ;; *************** function _setup *****************
  1027 ;; Defined at:
  1028 ;;		line 90 in file "main.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		status,2
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 4
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056     0EDA                     _setup:	
  1057                           ;psect for function _setup
  1058                           
  1059     0EDA                     l1811:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _setup: [status,2]
  1062                           
  1063                           
  1064                           ;main.c: 91:     ANSELH = 0;
  1065     0EDA  1683               	bsf	3,5	;RP0=1, select bank3
  1066     0EDB  1703               	bsf	3,6	;RP1=1, select bank3
  1067     0EDC  0189               	clrf	9	;volatile
  1068                           
  1069                           ;main.c: 93:     TRISB = 0;
  1070     0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  1071     0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  1072     0EDF  0186               	clrf	6	;volatile
  1073                           
  1074                           ;main.c: 94:     TRISC = 0;
  1075     0EE0  0187               	clrf	7	;volatile
  1076                           
  1077                           ;main.c: 95:     TRISD = 0;
  1078     0EE1  0188               	clrf	8	;volatile
  1079                           
  1080                           ;main.c: 97:     PORTA = 0;
  1081     0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1082     0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1083     0EE4  0185               	clrf	5	;volatile
  1084                           
  1085                           ;main.c: 98:     PORTB = 0;
  1086     0EE5  0186               	clrf	6	;volatile
  1087                           
  1088                           ;main.c: 99:     PORTC = 0;
  1089     0EE6  0187               	clrf	7	;volatile
  1090                           
  1091                           ;main.c: 100:     PORTD = 0;
  1092     0EE7  0188               	clrf	8	;volatile
  1093     0EE8                     l1813:
  1094                           
  1095                           ;main.c: 102:     INTCONbits.GIE = 1;
  1096     0EE8  178B               	bsf	11,7	;volatile
  1097     0EE9                     l1815:
  1098                           
  1099                           ;main.c: 103:     INTCONbits.PEIE = 1;
  1100     0EE9  170B               	bsf	11,6	;volatile
  1101     0EEA                     l1817:
  1102                           
  1103                           ;main.c: 104:     PIE1bits.ADIE = 1;
  1104     0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  1105     0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  1106     0EEC  170C               	bsf	12,6	;volatile
  1107     0EED                     l1819:
  1108                           
  1109                           ;main.c: 106:     OSCCONbits.IRCF2 = 1;
  1110     0EED  170F               	bsf	15,6	;volatile
  1111     0EEE                     l1821:
  1112                           
  1113                           ;main.c: 107:     OSCCONbits.IRCF1 = 1;
  1114     0EEE  168F               	bsf	15,5	;volatile
  1115     0EEF                     l1823:
  1116                           
  1117                           ;main.c: 108:     OSCCONbits.IRCF0 = 0;
  1118     0EEF  120F               	bcf	15,4	;volatile
  1119     0EF0                     l1825:
  1120                           
  1121                           ;main.c: 109:     OSCCONbits.SCS = 1;
  1122     0EF0  140F               	bsf	15,0	;volatile
  1123     0EF1                     l89:
  1124     0EF1  0008               	return
  1125     0EF2                     __end_of_setup:
  1126                           
  1127                           	psect	text2
  1128     0667                     __ptext2:	
  1129 ;; *************** function _Lcd_Write_String *****************
  1130 ;; Defined at:
  1131 ;;		line 104 in file "lcd.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  a               2    4[BANK1 ] PTR const unsigned char 
  1134 ;;		 -> buffer(20), STR_2(4), STR_1(4), 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  i               2    9[BANK1 ] int 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       2       0       0
  1147 ;;      Locals:         0       0       2       0       0
  1148 ;;      Temps:          0       0       3       0       0
  1149 ;;      Totals:         0       0       7       0       0
  1150 ;;Total ram usage:        7 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 6
  1153 ;; This function calls:
  1154 ;;		_Lcd_Write_Char
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160     0667                     _Lcd_Write_String:	
  1161                           ;psect for function _Lcd_Write_String
  1162                           
  1163     0667                     l2445:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1166                           
  1167                           
  1168                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  1169     0667  1683               	bsf	3,5	;RP0=1, select bank1
  1170     0668  1303               	bcf	3,6	;RP1=0, select bank1
  1171     0669  01BD               	clrf	Lcd_Write_String@i^(0+128)
  1172     066A  01BE               	clrf	(Lcd_Write_String@i+1)^(0+128)
  1173     066B  2E98               	goto	l2451
  1174     066C                     l2447:
  1175                           
  1176                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  1177     066C  1683               	bsf	3,5	;RP0=1, select bank1
  1178     066D  1303               	bcf	3,6	;RP1=0, select bank1
  1179     066E  083D               	movf	Lcd_Write_String@i^(0+128),w
  1180     066F  0738               	addwf	Lcd_Write_String@a^(0+128),w
  1181     0670  00BB               	movwf	(??_Lcd_Write_String+1)^(0+128)
  1182     0671  0839               	movf	(Lcd_Write_String@a+1)^(0+128),w
  1183     0672  00BA               	movwf	??_Lcd_Write_String^(0+128)
  1184     0673  1803               	skipnc
  1185     0674  0ABA               	incf	??_Lcd_Write_String^(0+128),f
  1186     0675  1FBD               	btfss	Lcd_Write_String@i^(0+128),7
  1187     0676  2E78               	goto	u2420
  1188     0677  03BA               	decf	??_Lcd_Write_String^(0+128),f
  1189     0678                     u2420:
  1190     0678  1683               	bsf	3,5	;RP0=1, select bank1
  1191     0679  1303               	bcf	3,6	;RP1=0, select bank1
  1192     067A  083A               	movf	??_Lcd_Write_String^(0+128),w
  1193     067B  00BC               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  1194     067C  083C               	movf	(??_Lcd_Write_String+2)^(0+128),w
  1195     067D  1283               	bcf	3,5	;RP0=0, select bank0
  1196     067E  1303               	bcf	3,6	;RP1=0, select bank0
  1197     067F  00FF               	movwf	btemp+1
  1198     0680  1683               	bsf	3,5	;RP0=1, select bank1
  1199     0681  1303               	bcf	3,6	;RP1=0, select bank1
  1200     0682  083B               	movf	(??_Lcd_Write_String+1)^(0+128),w
  1201     0683  0084               	movwf	4
  1202     0684  1283               	bcf	3,5	;RP0=0, select bank0
  1203     0685  1303               	bcf	3,6	;RP1=0, select bank0
  1204     0686  120A  158A  2000  120A  118A  	fcall	stringtab
  1205     068B  120A  118A  278D  120A  118A  	fcall	_Lcd_Write_Char
  1206     0690                     l2449:
  1207     0690  3001               	movlw	1
  1208     0691  1683               	bsf	3,5	;RP0=1, select bank1
  1209     0692  1303               	bcf	3,6	;RP1=0, select bank1
  1210     0693  07BD               	addwf	Lcd_Write_String@i^(0+128),f
  1211     0694  1803               	skipnc
  1212     0695  0ABE               	incf	(Lcd_Write_String@i+1)^(0+128),f
  1213     0696  3000               	movlw	0
  1214     0697  07BE               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  1215     0698                     l2451:
  1216     0698  083D               	movf	Lcd_Write_String@i^(0+128),w
  1217     0699  0738               	addwf	Lcd_Write_String@a^(0+128),w
  1218     069A  00BB               	movwf	(??_Lcd_Write_String+1)^(0+128)
  1219     069B  0839               	movf	(Lcd_Write_String@a+1)^(0+128),w
  1220     069C  00BA               	movwf	??_Lcd_Write_String^(0+128)
  1221     069D  1803               	skipnc
  1222     069E  0ABA               	incf	??_Lcd_Write_String^(0+128),f
  1223     069F  1FBD               	btfss	Lcd_Write_String@i^(0+128),7
  1224     06A0  2EA2               	goto	u2430
  1225     06A1  03BA               	decf	??_Lcd_Write_String^(0+128),f
  1226     06A2                     u2430:
  1227     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1228     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1229     06A4  083A               	movf	??_Lcd_Write_String^(0+128),w
  1230     06A5  00BC               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  1231     06A6  083C               	movf	(??_Lcd_Write_String+2)^(0+128),w
  1232     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1233     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1234     06A9  00FF               	movwf	btemp+1
  1235     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  1236     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  1237     06AC  083B               	movf	(??_Lcd_Write_String+1)^(0+128),w
  1238     06AD  0084               	movwf	4
  1239     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1240     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1241     06B0  120A  158A  2000  120A  118A  	fcall	stringtab
  1242     06B5  3A00               	xorlw	0
  1243     06B6  1D03               	skipz
  1244     06B7  2EB9               	goto	u2441
  1245     06B8  2EBA               	goto	u2440
  1246     06B9                     u2441:
  1247     06B9  2E6C               	goto	l2447
  1248     06BA                     u2440:
  1249     06BA                     l142:
  1250     06BA  0008               	return
  1251     06BB                     __end_of_Lcd_Write_String:
  1252                           
  1253                           	psect	text3
  1254     078D                     __ptext3:	
  1255 ;; *************** function _Lcd_Write_Char *****************
  1256 ;; Defined at:
  1257 ;;		line 88 in file "lcd.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  a               1    wreg     unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  a               1    3[BANK1 ] unsigned char 
  1262 ;;  y               1    2[BANK1 ] unsigned char 
  1263 ;;  temp            1    1[BANK1 ] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       0       3       0       0
  1275 ;;      Temps:          0       0       1       0       0
  1276 ;;      Totals:         0       0       4       0       0
  1277 ;;Total ram usage:        4 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 5
  1280 ;; This function calls:
  1281 ;;		_Lcd_Port
  1282 ;; This function is called by:
  1283 ;;		_Lcd_Write_String
  1284 ;;		_Lcd_CGRAM_CreateChar
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288     078D                     _Lcd_Write_Char:	
  1289                           ;psect for function _Lcd_Write_Char
  1290                           
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1294                           ;Lcd_Write_Char@a stored from wreg
  1295     078D  1683               	bsf	3,5	;RP0=1, select bank1
  1296     078E  1303               	bcf	3,6	;RP1=0, select bank1
  1297     078F  00B7               	movwf	Lcd_Write_Char@a^(0+128)
  1298     0790                     l2373:
  1299                           
  1300                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  1301     0790  0837               	movf	Lcd_Write_Char@a^(0+128),w
  1302     0791  390F               	andlw	15
  1303     0792  00B5               	movwf	Lcd_Write_Char@temp^(0+128)
  1304                           
  1305                           ;lcd.c: 92:     y = a&0xF0;
  1306     0793  0837               	movf	Lcd_Write_Char@a^(0+128),w
  1307     0794  39F0               	andlw	240
  1308     0795  00B6               	movwf	Lcd_Write_Char@y^(0+128)
  1309     0796                     l2375:
  1310                           
  1311                           ;lcd.c: 93:     PORTBbits.RB2 = 1;
  1312     0796  1283               	bcf	3,5	;RP0=0, select bank0
  1313     0797  1303               	bcf	3,6	;RP1=0, select bank0
  1314     0798  1506               	bsf	6,2	;volatile
  1315     0799                     l2377:
  1316                           
  1317                           ;lcd.c: 94:     Lcd_Port(y>>4);
  1318     0799  1683               	bsf	3,5	;RP0=1, select bank1
  1319     079A  1303               	bcf	3,6	;RP1=0, select bank1
  1320     079B  0836               	movf	Lcd_Write_Char@y^(0+128),w
  1321     079C  00B4               	movwf	??_Lcd_Write_Char^(0+128)
  1322     079D  3004               	movlw	4
  1323     079E                     u2335:
  1324     079E  1003               	clrc
  1325     079F  0CB4               	rrf	??_Lcd_Write_Char^(0+128),f
  1326     07A0  3EFF               	addlw	-1
  1327     07A1  1D03               	skipz
  1328     07A2  2F9E               	goto	u2335
  1329     07A3  0834               	movf	??_Lcd_Write_Char^(0+128),w
  1330     07A4  120A  158A  270C  120A  118A  	fcall	_Lcd_Port
  1331     07A9                     l2379:
  1332                           
  1333                           ;lcd.c: 95:     PORTBbits.RB3 = 1;
  1334     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1335     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1336     07AB  1586               	bsf	6,3	;volatile
  1337     07AC                     l2381:
  1338                           
  1339                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1340     07AC  300C               	movlw	12
  1341     07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1342     07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1343     07AF  00B4               	movwf	??_Lcd_Write_Char^(0+128)
  1344     07B0                     u2537:
  1345     07B0  0BB4               	decfsz	??_Lcd_Write_Char^(0+128),f
  1346     07B1  2FB0               	goto	u2537
  1347     07B2  0000               	nop
  1348     07B3                     l2383:
  1349                           
  1350                           ;lcd.c: 97:     PORTBbits.RB3 = 0;
  1351     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1352     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1353     07B5  1186               	bcf	6,3	;volatile
  1354     07B6                     l2385:
  1355                           
  1356                           ;lcd.c: 98:     Lcd_Port(temp);
  1357     07B6  1683               	bsf	3,5	;RP0=1, select bank1
  1358     07B7  1303               	bcf	3,6	;RP1=0, select bank1
  1359     07B8  0835               	movf	Lcd_Write_Char@temp^(0+128),w
  1360     07B9  120A  158A  270C  120A  118A  	fcall	_Lcd_Port
  1361     07BE                     l2387:
  1362                           
  1363                           ;lcd.c: 99:     PORTBbits.RB3 = 1;
  1364     07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1365     07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1366     07C0  1586               	bsf	6,3	;volatile
  1367     07C1                     l2389:
  1368                           
  1369                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1370     07C1  300C               	movlw	12
  1371     07C2  1683               	bsf	3,5	;RP0=1, select bank1
  1372     07C3  1303               	bcf	3,6	;RP1=0, select bank1
  1373     07C4  00B4               	movwf	??_Lcd_Write_Char^(0+128)
  1374     07C5                     u2547:
  1375     07C5  0BB4               	decfsz	??_Lcd_Write_Char^(0+128),f
  1376     07C6  2FC5               	goto	u2547
  1377     07C7  0000               	nop
  1378     07C8                     l2391:
  1379                           
  1380                           ;lcd.c: 101:     PORTBbits.RB3 = 0;
  1381     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1382     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1383     07CA  1186               	bcf	6,3	;volatile
  1384     07CB                     l136:
  1385     07CB  0008               	return
  1386     07CC                     __end_of_Lcd_Write_Char:
  1387                           
  1388                           	psect	text4
  1389     037E                     __ptext4:	
  1390 ;; *************** function _Lcd_Set_Cursor *****************
  1391 ;; Defined at:
  1392 ;;		line 26 in file "lcd.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  a               1    wreg     unsigned char 
  1395 ;;  b               1    3[BANK1 ] unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  a               1    5[BANK1 ] unsigned char 
  1398 ;;  temp            1    8[BANK1 ] unsigned char 
  1399 ;;  y               1    7[BANK1 ] unsigned char 
  1400 ;;  z               1    6[BANK1 ] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       1       0       0
  1411 ;;      Locals:         0       0       4       0       0
  1412 ;;      Temps:          0       0       1       0       0
  1413 ;;      Totals:         0       0       6       0       0
  1414 ;;Total ram usage:        6 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 6
  1417 ;; This function calls:
  1418 ;;		_Lcd_Cmd
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424     037E                     _Lcd_Set_Cursor:	
  1425                           ;psect for function _Lcd_Set_Cursor
  1426                           
  1427                           
  1428                           ;incstack = 0
  1429                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1430                           ;Lcd_Set_Cursor@a stored from wreg
  1431     037E  1683               	bsf	3,5	;RP0=1, select bank1
  1432     037F  1303               	bcf	3,6	;RP1=0, select bank1
  1433     0380  00B9               	movwf	Lcd_Set_Cursor@a^(0+128)
  1434     0381                     l2405:
  1435                           
  1436                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  1437     0381  0339               	decf	Lcd_Set_Cursor@a^(0+128),w
  1438     0382  1D03               	btfss	3,2
  1439     0383  2B85               	goto	u2341
  1440     0384  2B86               	goto	u2340
  1441     0385                     u2341:
  1442     0385  2BA5               	goto	l2415
  1443     0386                     u2340:
  1444     0386                     l2407:
  1445                           
  1446                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  1447     0386  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1448     0387  3E7F               	addlw	127
  1449     0388  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1450                           
  1451                           ;lcd.c: 32:         z = temp>>4;
  1452     0389  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1453     038A  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1454     038B  3004               	movlw	4
  1455     038C                     u2355:
  1456     038C  1003               	clrc
  1457     038D  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1458     038E  3EFF               	addlw	-1
  1459     038F  1D03               	skipz
  1460     0390  2B8C               	goto	u2355
  1461     0391  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1462     0392  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1463     0393                     l2409:
  1464                           
  1465                           ;lcd.c: 33:         y = temp & 0x0F;
  1466     0393  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1467     0394  390F               	andlw	15
  1468     0395  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1469     0396                     l2411:
  1470                           
  1471                           ;lcd.c: 34:         Lcd_Cmd(z);
  1472     0396  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1473     0397  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1474     039C                     l2413:
  1475                           
  1476                           ;lcd.c: 35:         Lcd_Cmd(y);
  1477     039C  1683               	bsf	3,5	;RP0=1, select bank1
  1478     039D  1303               	bcf	3,6	;RP1=0, select bank1
  1479     039E  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1480     039F  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1481                           
  1482                           ;lcd.c: 36:     }
  1483     03A4  2C14               	goto	l130
  1484     03A5                     l2415:
  1485     03A5  3002               	movlw	2
  1486     03A6  0639               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  1487     03A7  1D03               	btfss	3,2
  1488     03A8  2BAA               	goto	u2361
  1489     03A9  2BAB               	goto	u2360
  1490     03AA                     u2361:
  1491     03AA  2BCA               	goto	l2425
  1492     03AB                     u2360:
  1493     03AB                     l2417:
  1494                           
  1495                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  1496     03AB  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1497     03AC  3EBF               	addlw	191
  1498     03AD  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1499                           
  1500                           ;lcd.c: 40:         z = temp>>4;
  1501     03AE  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1502     03AF  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1503     03B0  3004               	movlw	4
  1504     03B1                     u2375:
  1505     03B1  1003               	clrc
  1506     03B2  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1507     03B3  3EFF               	addlw	-1
  1508     03B4  1D03               	skipz
  1509     03B5  2BB1               	goto	u2375
  1510     03B6  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1511     03B7  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1512     03B8                     l2419:
  1513                           
  1514                           ;lcd.c: 41:         y = temp & 0x0F;
  1515     03B8  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1516     03B9  390F               	andlw	15
  1517     03BA  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1518     03BB                     l2421:
  1519                           
  1520                           ;lcd.c: 42:         Lcd_Cmd(z);
  1521     03BB  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1522     03BC  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1523     03C1                     l2423:
  1524                           
  1525                           ;lcd.c: 43:         Lcd_Cmd(y);
  1526     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1527     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1528     03C3  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1529     03C4  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1530                           
  1531                           ;lcd.c: 44:     }
  1532     03C9  2C14               	goto	l130
  1533     03CA                     l2425:
  1534     03CA  3003               	movlw	3
  1535     03CB  0639               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  1536     03CC  1D03               	btfss	3,2
  1537     03CD  2BCF               	goto	u2381
  1538     03CE  2BD0               	goto	u2380
  1539     03CF                     u2381:
  1540     03CF  2BEF               	goto	l2435
  1541     03D0                     u2380:
  1542     03D0                     l2427:
  1543                           
  1544                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  1545     03D0  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1546     03D1  3E93               	addlw	147
  1547     03D2  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1548                           
  1549                           ;lcd.c: 48:         z = temp>>4;
  1550     03D3  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1551     03D4  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1552     03D5  3004               	movlw	4
  1553     03D6                     u2395:
  1554     03D6  1003               	clrc
  1555     03D7  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1556     03D8  3EFF               	addlw	-1
  1557     03D9  1D03               	skipz
  1558     03DA  2BD6               	goto	u2395
  1559     03DB  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1560     03DC  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1561     03DD                     l2429:
  1562                           
  1563                           ;lcd.c: 49:         y = temp & 0x0F;
  1564     03DD  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1565     03DE  390F               	andlw	15
  1566     03DF  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1567     03E0                     l2431:
  1568                           
  1569                           ;lcd.c: 50:         Lcd_Cmd(z);
  1570     03E0  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1571     03E1  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1572     03E6                     l2433:
  1573                           
  1574                           ;lcd.c: 51:         Lcd_Cmd(y);
  1575     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1576     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1577     03E8  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1578     03E9  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1579                           
  1580                           ;lcd.c: 52:     }
  1581     03EE  2C14               	goto	l130
  1582     03EF                     l2435:
  1583     03EF  3004               	movlw	4
  1584     03F0  0639               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  1585     03F1  1D03               	btfss	3,2
  1586     03F2  2BF4               	goto	u2401
  1587     03F3  2BF5               	goto	u2400
  1588     03F4                     u2401:
  1589     03F4  2C14               	goto	l126
  1590     03F5                     u2400:
  1591     03F5                     l2437:
  1592                           
  1593                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  1594     03F5  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1595     03F6  3ED3               	addlw	211
  1596     03F7  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1597                           
  1598                           ;lcd.c: 56:         z = temp>>4;
  1599     03F8  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1600     03F9  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1601     03FA  3004               	movlw	4
  1602     03FB                     u2415:
  1603     03FB  1003               	clrc
  1604     03FC  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1605     03FD  3EFF               	addlw	-1
  1606     03FE  1D03               	skipz
  1607     03FF  2BFB               	goto	u2415
  1608     0400  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1609     0401  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1610     0402                     l2439:
  1611                           
  1612                           ;lcd.c: 57:         y = temp & 0x0F;
  1613     0402  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1614     0403  390F               	andlw	15
  1615     0404  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1616     0405                     l2441:
  1617                           
  1618                           ;lcd.c: 58:         Lcd_Cmd(z);
  1619     0405  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1620     0406  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1621     040B                     l2443:
  1622                           
  1623                           ;lcd.c: 59:         Lcd_Cmd(y);
  1624     040B  1683               	bsf	3,5	;RP0=1, select bank1
  1625     040C  1303               	bcf	3,6	;RP1=0, select bank1
  1626     040D  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1627     040E  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1628     0413  2C14               	goto	l130
  1629     0414                     l126:
  1630     0414                     l130:
  1631     0414  0008               	return
  1632     0415                     __end_of_Lcd_Set_Cursor:
  1633                           
  1634                           	psect	text5
  1635     0533                     __ptext5:	
  1636 ;; *************** function _Lcd_Init *****************
  1637 ;; Defined at:
  1638 ;;		line 63 in file "lcd.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       0       2       0       0
  1655 ;;      Totals:         0       0       2       0       0
  1656 ;;Total ram usage:        2 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 7
  1659 ;; This function calls:
  1660 ;;		_Lcd_Clear
  1661 ;;		_Lcd_Cmd
  1662 ;;		_Lcd_Port
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668     0533                     _Lcd_Init:	
  1669                           ;psect for function _Lcd_Init
  1670                           
  1671     0533                     l2393:	
  1672                           ;incstack = 0
  1673                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1674                           
  1675                           
  1676                           ;lcd.c: 65:  TRISBbits.TRISB2 = 0;
  1677     0533  1683               	bsf	3,5	;RP0=1, select bank1
  1678     0534  1303               	bcf	3,6	;RP1=0, select bank1
  1679     0535  1106               	bcf	6,2	;volatile
  1680                           
  1681                           ;lcd.c: 66:  TRISBbits.TRISB3 = 0;
  1682     0536  1186               	bcf	6,3	;volatile
  1683                           
  1684                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  1685     0537  1206               	bcf	6,4	;volatile
  1686                           
  1687                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  1688     0538  1286               	bcf	6,5	;volatile
  1689                           
  1690                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  1691     0539  1306               	bcf	6,6	;volatile
  1692                           
  1693                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  1694     053A  1386               	bcf	6,7	;volatile
  1695     053B                     l2395:
  1696                           
  1697                           ;lcd.c: 71:     Lcd_Port(0x00);
  1698     053B  3000               	movlw	0
  1699     053C  120A  158A  270C  120A  118A  	fcall	_Lcd_Port
  1700     0541                     l2397:
  1701                           
  1702                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1703     0541  301A               	movlw	26
  1704     0542  1683               	bsf	3,5	;RP0=1, select bank1
  1705     0543  1303               	bcf	3,6	;RP1=0, select bank1
  1706     0544  00B8               	movwf	(??_Lcd_Init^(0+128)+1)
  1707     0545  30F7               	movlw	247
  1708     0546  00B7               	movwf	??_Lcd_Init^(0+128)
  1709     0547                     u2557:
  1710     0547  0BB7               	decfsz	??_Lcd_Init^(0+128),f
  1711     0548  2D47               	goto	u2557
  1712     0549  0BB8               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1713     054A  2D47               	goto	u2557
  1714     054B  2D4C               	nop2
  1715     054C                     l2399:
  1716                           
  1717                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  1718     054C  3003               	movlw	3
  1719     054D  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1720                           
  1721                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1722     0552  3007               	movlw	7
  1723     0553  1683               	bsf	3,5	;RP0=1, select bank1
  1724     0554  1303               	bcf	3,6	;RP1=0, select bank1
  1725     0555  00B8               	movwf	(??_Lcd_Init^(0+128)+1)
  1726     0556  307C               	movlw	124
  1727     0557  00B7               	movwf	??_Lcd_Init^(0+128)
  1728     0558                     u2567:
  1729     0558  0BB7               	decfsz	??_Lcd_Init^(0+128),f
  1730     0559  2D58               	goto	u2567
  1731     055A  0BB8               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1732     055B  2D58               	goto	u2567
  1733     055C  0000               	nop
  1734     055D                     l2401:
  1735                           
  1736                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  1737     055D  3003               	movlw	3
  1738     055E  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1739     0563                     l2403:
  1740                           
  1741                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1742     0563  300F               	movlw	15
  1743     0564  1683               	bsf	3,5	;RP0=1, select bank1
  1744     0565  1303               	bcf	3,6	;RP1=0, select bank1
  1745     0566  00B8               	movwf	(??_Lcd_Init^(0+128)+1)
  1746     0567  3047               	movlw	71
  1747     0568  00B7               	movwf	??_Lcd_Init^(0+128)
  1748     0569                     u2577:
  1749     0569  0BB7               	decfsz	??_Lcd_Init^(0+128),f
  1750     056A  2D69               	goto	u2577
  1751     056B  0BB8               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1752     056C  2D69               	goto	u2577
  1753                           
  1754                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  1755     056D  3003               	movlw	3
  1756     056E  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1757                           
  1758                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  1759     0573  3002               	movlw	2
  1760     0574  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1761                           
  1762                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  1763     0579  3002               	movlw	2
  1764     057A  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1765                           
  1766                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  1767     057F  3008               	movlw	8
  1768     0580  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1769                           
  1770                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  1771     0585  3000               	movlw	0
  1772     0586  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1773                           
  1774                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  1775     058B  300C               	movlw	12
  1776     058C  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1777                           
  1778                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  1779     0591  3000               	movlw	0
  1780     0592  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1781                           
  1782                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  1783     0597  3006               	movlw	6
  1784     0598  120A  158A  272C  120A  118A  	fcall	_Lcd_Cmd
  1785                           
  1786                           ;lcd.c: 85:     Lcd_Clear();
  1787     059D  120A  158A  26B5  120A  118A  	fcall	_Lcd_Clear
  1788     05A2                     l133:
  1789     05A2  0008               	return
  1790     05A3                     __end_of_Lcd_Init:
  1791                           
  1792                           	psect	text6
  1793     0EB5                     __ptext6:	
  1794 ;; *************** function _Lcd_Clear *****************
  1795 ;; Defined at:
  1796 ;;		line 20 in file "lcd.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0
  1813 ;;      Totals:         0       0       0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; Hardware stack levels required when called: 6
  1817 ;; This function calls:
  1818 ;;		_Lcd_Cmd
  1819 ;; This function is called by:
  1820 ;;		_Lcd_Init
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824     0EB5                     _Lcd_Clear:	
  1825                           ;psect for function _Lcd_Clear
  1826                           
  1827     0EB5                     l2371:	
  1828                           ;incstack = 0
  1829                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1830                           
  1831                           
  1832                           ;lcd.c: 22:     Lcd_Cmd(0);
  1833     0EB5  3000               	movlw	0
  1834     0EB6  120A  158A  272C  120A  158A  	fcall	_Lcd_Cmd
  1835                           
  1836                           ;lcd.c: 23:     Lcd_Cmd(1);
  1837     0EBB  3001               	movlw	1
  1838     0EBC  120A  158A  272C  120A  158A  	fcall	_Lcd_Cmd
  1839     0EC1                     l120:
  1840     0EC1  0008               	return
  1841     0EC2                     __end_of_Lcd_Clear:
  1842                           
  1843                           	psect	text7
  1844     0F2C                     __ptext7:	
  1845 ;; *************** function _Lcd_Cmd *****************
  1846 ;; Defined at:
  1847 ;;		line 11 in file "lcd.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  a               1    wreg     unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  a               1    2[BANK1 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         0       0       1       0       0
  1863 ;;      Temps:          0       0       2       0       0
  1864 ;;      Totals:         0       0       3       0       0
  1865 ;;Total ram usage:        3 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 5
  1868 ;; This function calls:
  1869 ;;		_Lcd_Port
  1870 ;; This function is called by:
  1871 ;;		_Lcd_Clear
  1872 ;;		_Lcd_Set_Cursor
  1873 ;;		_Lcd_Init
  1874 ;;		_Lcd_Shift_Right
  1875 ;;		_Lcd_Shift_Left
  1876 ;;		_Lcd_Blink
  1877 ;;		_Lcd_NoBlink
  1878 ;;		_Lcd_CGRAM_Init
  1879 ;;		_Lcd_CGRAM_Close
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883     0F2C                     _Lcd_Cmd:	
  1884                           ;psect for function _Lcd_Cmd
  1885                           
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1889                           ;Lcd_Cmd@a stored from wreg
  1890     0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  1891     0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  1892     0F2E  00B6               	movwf	Lcd_Cmd@a^(0+128)
  1893     0F2F                     l2361:
  1894                           
  1895                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTBbits.RB2 = 0;
  1896     0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  1897     0F30  1303               	bcf	3,6	;RP1=0, select bank0
  1898     0F31  1106               	bcf	6,2	;volatile
  1899     0F32                     l2363:
  1900                           
  1901                           ;lcd.c: 14:     Lcd_Port(a);
  1902     0F32  1683               	bsf	3,5	;RP0=1, select bank1
  1903     0F33  1303               	bcf	3,6	;RP1=0, select bank1
  1904     0F34  0836               	movf	Lcd_Cmd@a^(0+128),w
  1905     0F35  120A  158A  270C  120A  158A  	fcall	_Lcd_Port
  1906     0F3A                     l2365:
  1907                           
  1908                           ;lcd.c: 15:     PORTBbits.RB3 = 1;
  1909     0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1910     0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1911     0F3C  1586               	bsf	6,3	;volatile
  1912     0F3D                     l2367:
  1913                           
  1914                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1915     0F3D  3006               	movlw	6
  1916     0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  1917     0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  1918     0F40  00B5               	movwf	(??_Lcd_Cmd^(0+128)+1)
  1919     0F41  302F               	movlw	47
  1920     0F42  00B4               	movwf	??_Lcd_Cmd^(0+128)
  1921     0F43                     u2587:
  1922     0F43  0BB4               	decfsz	??_Lcd_Cmd^(0+128),f
  1923     0F44  2F43               	goto	u2587
  1924     0F45  0BB5               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  1925     0F46  2F43               	goto	u2587
  1926     0F47  2F48               	nop2
  1927     0F48                     l2369:
  1928                           
  1929                           ;lcd.c: 17:     PORTBbits.RB3 = 0;
  1930     0F48  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0F49  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0F4A  1186               	bcf	6,3	;volatile
  1933     0F4B                     l117:
  1934     0F4B  0008               	return
  1935     0F4C                     __end_of_Lcd_Cmd:
  1936                           
  1937                           	psect	text8
  1938     0F0C                     __ptext8:	
  1939 ;; *************** function _Lcd_Port *****************
  1940 ;; Defined at:
  1941 ;;		line 3 in file "lcd.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  a               1    wreg     unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  a               1   29[BANK0 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       1       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       1       0       0       0
  1959 ;;Total ram usage:        1 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 4
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_Lcd_Cmd
  1966 ;;		_Lcd_Init
  1967 ;;		_Lcd_Write_Char
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971     0F0C                     _Lcd_Port:	
  1972                           ;psect for function _Lcd_Port
  1973                           
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _Lcd_Port: [wreg]
  1977                           ;Lcd_Port@a stored from wreg
  1978     0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  1979     0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  1980     0F0E  00BD               	movwf	Lcd_Port@a
  1981     0F0F                     l2351:
  1982                           
  1983                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  1984     0F0F  1C3D               	btfss	Lcd_Port@a,0
  1985     0F10  2F12               	goto	u2291
  1986     0F11  2F13               	goto	u2290
  1987     0F12                     u2291:
  1988     0F12  2F15               	goto	l99
  1989     0F13                     u2290:
  1990     0F13                     l2353:
  1991     0F13  1606               	bsf	6,4	;volatile
  1992     0F14  2F16               	goto	l101
  1993     0F15                     l99:
  1994     0F15  1206               	bcf	6,4	;volatile
  1995     0F16                     l101:
  1996                           
  1997                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  1998     0F16  1CBD               	btfss	Lcd_Port@a,1
  1999     0F17  2F19               	goto	u2301
  2000     0F18  2F1A               	goto	u2300
  2001     0F19                     u2301:
  2002     0F19  2F1C               	goto	l103
  2003     0F1A                     u2300:
  2004     0F1A                     l2355:
  2005     0F1A  1686               	bsf	6,5	;volatile
  2006     0F1B  2F1D               	goto	l105
  2007     0F1C                     l103:
  2008     0F1C  1286               	bcf	6,5	;volatile
  2009     0F1D                     l105:
  2010                           
  2011                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  2012     0F1D  1D3D               	btfss	Lcd_Port@a,2
  2013     0F1E  2F20               	goto	u2311
  2014     0F1F  2F21               	goto	u2310
  2015     0F20                     u2311:
  2016     0F20  2F23               	goto	l107
  2017     0F21                     u2310:
  2018     0F21                     l2357:
  2019     0F21  1706               	bsf	6,6	;volatile
  2020     0F22  2F24               	goto	l109
  2021     0F23                     l107:
  2022     0F23  1306               	bcf	6,6	;volatile
  2023     0F24                     l109:
  2024                           
  2025                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  2026     0F24  1DBD               	btfss	Lcd_Port@a,3
  2027     0F25  2F27               	goto	u2321
  2028     0F26  2F28               	goto	u2320
  2029     0F27                     u2321:
  2030     0F27  2F2A               	goto	l111
  2031     0F28                     u2320:
  2032     0F28                     l2359:
  2033     0F28  1786               	bsf	6,7	;volatile
  2034     0F29  2F2B               	goto	l114
  2035     0F2A                     l111:
  2036     0F2A  1386               	bcf	6,7	;volatile
  2037     0F2B                     l114:
  2038     0F2B  0008               	return
  2039     0F2C                     __end_of_Lcd_Port:
  2040                           
  2041                           	psect	text9
  2042     0EC2                     __ptext9:	
  2043 ;; *************** function _ADC_setup *****************
  2044 ;; Defined at:
  2045 ;;		line 7 in file "ADC.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0
  2061 ;;      Temps:          0       1       0       0       0
  2062 ;;      Totals:         0       1       0       0       0
  2063 ;;Total ram usage:        1 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 4
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073     0EC2                     _ADC_setup:	
  2074                           ;psect for function _ADC_setup
  2075                           
  2076     0EC2                     l1827:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _ADC_setup: [wreg]
  2079                           
  2080                           
  2081                           ;ADC.c: 8:     ADCON0bits.ADCS1 = 0;
  2082     0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  2083     0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  2084     0EC4  139F               	bcf	31,7	;volatile
  2085                           
  2086                           ;ADC.c: 9:     ADCON0bits.ADCS0 = 1;
  2087     0EC5  171F               	bsf	31,6	;volatile
  2088                           
  2089                           ;ADC.c: 11:     ADCON1bits.VCFG1 = 0;
  2090     0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  2091     0EC7  1303               	bcf	3,6	;RP1=0, select bank1
  2092     0EC8  129F               	bcf	31,5	;volatile
  2093                           
  2094                           ;ADC.c: 12:     ADCON1bits.VCFG0 = 0;
  2095     0EC9  121F               	bcf	31,4	;volatile
  2096                           
  2097                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  2098     0ECA  139F               	bcf	31,7	;volatile
  2099                           
  2100                           ;ADC.c: 16:     ADCON0bits.CHS3 = 0;
  2101     0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  2102     0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  2103     0ECD  129F               	bcf	31,5	;volatile
  2104                           
  2105                           ;ADC.c: 17:     ADCON0bits.CHS2 = 0;
  2106     0ECE  121F               	bcf	31,4	;volatile
  2107                           
  2108                           ;ADC.c: 18:     ADCON0bits.CHS1 = 0;
  2109     0ECF  119F               	bcf	31,3	;volatile
  2110                           
  2111                           ;ADC.c: 19:     ADCON0bits.CHS0 = 0;
  2112     0ED0  111F               	bcf	31,2	;volatile
  2113                           
  2114                           ;ADC.c: 21:     ADCON0bits.ADON = 1;
  2115     0ED1  141F               	bsf	31,0	;volatile
  2116     0ED2                     l1829:
  2117                           
  2118                           ;ADC.c: 22:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2119     0ED2  3020               	movlw	32
  2120     0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2121     0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2122     0ED5  00BD               	movwf	??_ADC_setup
  2123     0ED6                     u2597:
  2124     0ED6  0BBD               	decfsz	??_ADC_setup,f
  2125     0ED7  2ED6               	goto	u2597
  2126     0ED8  0000               	nop
  2127     0ED9                     l206:
  2128     0ED9  0008               	return
  2129     0EDA                     __end_of_ADC_setup:
  2130                           
  2131                           	psect	text10
  2132     0415                     __ptext10:	
  2133 ;; *************** function _ADC_config *****************
  2134 ;; Defined at:
  2135 ;;		line 25 in file "ADC.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  channel         1    wreg     unsigned char 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  channel         1   29[BANK0 ] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149 ;;      Params:         0       0       0       0       0
  2150 ;;      Locals:         0       1       0       0       0
  2151 ;;      Temps:          0       0       0       0       0
  2152 ;;      Totals:         0       1       0       0       0
  2153 ;;Total ram usage:        1 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 4
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163     0415                     _ADC_config:	
  2164                           ;psect for function _ADC_config
  2165                           
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _ADC_config: [wreg+status,2+status,0]
  2169                           ;ADC_config@channel stored from wreg
  2170     0415  1283               	bcf	3,5	;RP0=0, select bank0
  2171     0416  1303               	bcf	3,6	;RP1=0, select bank0
  2172     0417  00BD               	movwf	ADC_config@channel
  2173     0418                     l1831:
  2174                           
  2175                           ;ADC.c: 26:     if (channel == 0){
  2176     0418  083D               	movf	ADC_config@channel,w
  2177     0419  1D03               	btfss	3,2
  2178     041A  2C1C               	goto	u1521
  2179     041B  2C1D               	goto	u1520
  2180     041C                     u1521:
  2181     041C  2C21               	goto	l1835
  2182     041D                     u1520:
  2183     041D                     l1833:
  2184                           
  2185                           ;ADC.c: 27:         ANSELbits.ANS0 = 1;
  2186     041D  1683               	bsf	3,5	;RP0=1, select bank3
  2187     041E  1703               	bsf	3,6	;RP1=1, select bank3
  2188     041F  1408               	bsf	8,0	;volatile
  2189                           
  2190                           ;ADC.c: 28:     }
  2191     0420  2CA5               	goto	l237
  2192     0421                     l1835:
  2193     0421  033D               	decf	ADC_config@channel,w
  2194     0422  1D03               	btfss	3,2
  2195     0423  2C25               	goto	u1531
  2196     0424  2C26               	goto	u1530
  2197     0425                     u1531:
  2198     0425  2C2A               	goto	l1839
  2199     0426                     u1530:
  2200     0426                     l1837:
  2201                           
  2202                           ;ADC.c: 30:         ANSELbits.ANS1 = 1;
  2203     0426  1683               	bsf	3,5	;RP0=1, select bank3
  2204     0427  1703               	bsf	3,6	;RP1=1, select bank3
  2205     0428  1488               	bsf	8,1	;volatile
  2206                           
  2207                           ;ADC.c: 31:     }
  2208     0429  2CA5               	goto	l237
  2209     042A                     l1839:
  2210     042A  3002               	movlw	2
  2211     042B  063D               	xorwf	ADC_config@channel,w
  2212     042C  1D03               	btfss	3,2
  2213     042D  2C2F               	goto	u1541
  2214     042E  2C30               	goto	u1540
  2215     042F                     u1541:
  2216     042F  2C34               	goto	l1843
  2217     0430                     u1540:
  2218     0430                     l1841:
  2219                           
  2220                           ;ADC.c: 33:         ANSELbits.ANS2 = 1;
  2221     0430  1683               	bsf	3,5	;RP0=1, select bank3
  2222     0431  1703               	bsf	3,6	;RP1=1, select bank3
  2223     0432  1508               	bsf	8,2	;volatile
  2224                           
  2225                           ;ADC.c: 34:     }
  2226     0433  2CA5               	goto	l237
  2227     0434                     l1843:
  2228     0434  3003               	movlw	3
  2229     0435  063D               	xorwf	ADC_config@channel,w
  2230     0436  1D03               	btfss	3,2
  2231     0437  2C39               	goto	u1551
  2232     0438  2C3A               	goto	u1550
  2233     0439                     u1551:
  2234     0439  2C3E               	goto	l1847
  2235     043A                     u1550:
  2236     043A                     l1845:
  2237                           
  2238                           ;ADC.c: 36:         ANSELbits.ANS3 = 1;
  2239     043A  1683               	bsf	3,5	;RP0=1, select bank3
  2240     043B  1703               	bsf	3,6	;RP1=1, select bank3
  2241     043C  1588               	bsf	8,3	;volatile
  2242                           
  2243                           ;ADC.c: 37:     }
  2244     043D  2CA5               	goto	l237
  2245     043E                     l1847:
  2246     043E  3004               	movlw	4
  2247     043F  063D               	xorwf	ADC_config@channel,w
  2248     0440  1D03               	btfss	3,2
  2249     0441  2C43               	goto	u1561
  2250     0442  2C44               	goto	u1560
  2251     0443                     u1561:
  2252     0443  2C48               	goto	l1851
  2253     0444                     u1560:
  2254     0444                     l1849:
  2255                           
  2256                           ;ADC.c: 39:         ANSELbits.ANS4 = 1;
  2257     0444  1683               	bsf	3,5	;RP0=1, select bank3
  2258     0445  1703               	bsf	3,6	;RP1=1, select bank3
  2259     0446  1608               	bsf	8,4	;volatile
  2260                           
  2261                           ;ADC.c: 40:     }
  2262     0447  2CA5               	goto	l237
  2263     0448                     l1851:
  2264     0448  3005               	movlw	5
  2265     0449  063D               	xorwf	ADC_config@channel,w
  2266     044A  1D03               	btfss	3,2
  2267     044B  2C4D               	goto	u1571
  2268     044C  2C4E               	goto	u1570
  2269     044D                     u1571:
  2270     044D  2C52               	goto	l1855
  2271     044E                     u1570:
  2272     044E                     l1853:
  2273                           
  2274                           ;ADC.c: 42:         ANSELbits.ANS5 = 1;
  2275     044E  1683               	bsf	3,5	;RP0=1, select bank3
  2276     044F  1703               	bsf	3,6	;RP1=1, select bank3
  2277     0450  1688               	bsf	8,5	;volatile
  2278                           
  2279                           ;ADC.c: 43:     }
  2280     0451  2CA5               	goto	l237
  2281     0452                     l1855:
  2282     0452  3006               	movlw	6
  2283     0453  063D               	xorwf	ADC_config@channel,w
  2284     0454  1D03               	btfss	3,2
  2285     0455  2C57               	goto	u1581
  2286     0456  2C58               	goto	u1580
  2287     0457                     u1581:
  2288     0457  2C5C               	goto	l1859
  2289     0458                     u1580:
  2290     0458                     l1857:
  2291                           
  2292                           ;ADC.c: 45:         ANSELbits.ANS6 = 1;
  2293     0458  1683               	bsf	3,5	;RP0=1, select bank3
  2294     0459  1703               	bsf	3,6	;RP1=1, select bank3
  2295     045A  1708               	bsf	8,6	;volatile
  2296                           
  2297                           ;ADC.c: 46:     }
  2298     045B  2CA5               	goto	l237
  2299     045C                     l1859:
  2300     045C  3007               	movlw	7
  2301     045D  063D               	xorwf	ADC_config@channel,w
  2302     045E  1D03               	btfss	3,2
  2303     045F  2C61               	goto	u1591
  2304     0460  2C62               	goto	u1590
  2305     0461                     u1591:
  2306     0461  2C66               	goto	l1863
  2307     0462                     u1590:
  2308     0462                     l1861:
  2309                           
  2310                           ;ADC.c: 48:         ANSELbits.ANS7 = 1;
  2311     0462  1683               	bsf	3,5	;RP0=1, select bank3
  2312     0463  1703               	bsf	3,6	;RP1=1, select bank3
  2313     0464  1788               	bsf	8,7	;volatile
  2314                           
  2315                           ;ADC.c: 49:     }
  2316     0465  2CA5               	goto	l237
  2317     0466                     l1863:
  2318     0466  3008               	movlw	8
  2319     0467  063D               	xorwf	ADC_config@channel,w
  2320     0468  1D03               	btfss	3,2
  2321     0469  2C6B               	goto	u1601
  2322     046A  2C6C               	goto	u1600
  2323     046B                     u1601:
  2324     046B  2C70               	goto	l1867
  2325     046C                     u1600:
  2326     046C                     l1865:
  2327                           
  2328                           ;ADC.c: 51:         ANSELHbits.ANS8 = 1;
  2329     046C  1683               	bsf	3,5	;RP0=1, select bank3
  2330     046D  1703               	bsf	3,6	;RP1=1, select bank3
  2331     046E  1409               	bsf	9,0	;volatile
  2332                           
  2333                           ;ADC.c: 52:     }
  2334     046F  2CA5               	goto	l237
  2335     0470                     l1867:
  2336     0470  3009               	movlw	9
  2337     0471  063D               	xorwf	ADC_config@channel,w
  2338     0472  1D03               	btfss	3,2
  2339     0473  2C75               	goto	u1611
  2340     0474  2C76               	goto	u1610
  2341     0475                     u1611:
  2342     0475  2C7A               	goto	l1871
  2343     0476                     u1610:
  2344     0476                     l1869:
  2345                           
  2346                           ;ADC.c: 54:         ANSELHbits.ANS9 = 1;
  2347     0476  1683               	bsf	3,5	;RP0=1, select bank3
  2348     0477  1703               	bsf	3,6	;RP1=1, select bank3
  2349     0478  1489               	bsf	9,1	;volatile
  2350                           
  2351                           ;ADC.c: 55:     }
  2352     0479  2CA5               	goto	l237
  2353     047A                     l1871:
  2354     047A  300A               	movlw	10
  2355     047B  063D               	xorwf	ADC_config@channel,w
  2356     047C  1D03               	btfss	3,2
  2357     047D  2C7F               	goto	u1621
  2358     047E  2C80               	goto	u1620
  2359     047F                     u1621:
  2360     047F  2C84               	goto	l1875
  2361     0480                     u1620:
  2362     0480                     l1873:
  2363                           
  2364                           ;ADC.c: 57:         ANSELHbits.ANS10 = 1;
  2365     0480  1683               	bsf	3,5	;RP0=1, select bank3
  2366     0481  1703               	bsf	3,6	;RP1=1, select bank3
  2367     0482  1509               	bsf	9,2	;volatile
  2368                           
  2369                           ;ADC.c: 58:     }
  2370     0483  2CA5               	goto	l237
  2371     0484                     l1875:
  2372     0484  300B               	movlw	11
  2373     0485  063D               	xorwf	ADC_config@channel,w
  2374     0486  1D03               	btfss	3,2
  2375     0487  2C89               	goto	u1631
  2376     0488  2C8A               	goto	u1630
  2377     0489                     u1631:
  2378     0489  2C8E               	goto	l1879
  2379     048A                     u1630:
  2380     048A                     l1877:
  2381                           
  2382                           ;ADC.c: 60:         ANSELHbits.ANS11 = 1;
  2383     048A  1683               	bsf	3,5	;RP0=1, select bank3
  2384     048B  1703               	bsf	3,6	;RP1=1, select bank3
  2385     048C  1589               	bsf	9,3	;volatile
  2386                           
  2387                           ;ADC.c: 61:     }
  2388     048D  2CA5               	goto	l237
  2389     048E                     l1879:
  2390     048E  300C               	movlw	12
  2391     048F  063D               	xorwf	ADC_config@channel,w
  2392     0490  1D03               	btfss	3,2
  2393     0491  2C93               	goto	u1641
  2394     0492  2C94               	goto	u1640
  2395     0493                     u1641:
  2396     0493  2C98               	goto	l1883
  2397     0494                     u1640:
  2398     0494                     l1881:
  2399                           
  2400                           ;ADC.c: 63:         ANSELHbits.ANS12 = 1;
  2401     0494  1683               	bsf	3,5	;RP0=1, select bank3
  2402     0495  1703               	bsf	3,6	;RP1=1, select bank3
  2403     0496  1609               	bsf	9,4	;volatile
  2404                           
  2405                           ;ADC.c: 64:     }
  2406     0497  2CA5               	goto	l237
  2407     0498                     l1883:
  2408     0498  300D               	movlw	13
  2409     0499  063D               	xorwf	ADC_config@channel,w
  2410     049A  1D03               	btfss	3,2
  2411     049B  2C9D               	goto	u1651
  2412     049C  2C9E               	goto	u1650
  2413     049D                     u1651:
  2414     049D  2CA2               	goto	l235
  2415     049E                     u1650:
  2416     049E                     l1885:
  2417                           
  2418                           ;ADC.c: 66:         ANSELHbits.ANS13 = 1;
  2419     049E  1683               	bsf	3,5	;RP0=1, select bank3
  2420     049F  1703               	bsf	3,6	;RP1=1, select bank3
  2421     04A0  1689               	bsf	9,5	;volatile
  2422                           
  2423                           ;ADC.c: 67:     }
  2424     04A1  2CA5               	goto	l237
  2425     04A2                     l235:	
  2426                           ;ADC.c: 68:     else {
  2427                           
  2428                           
  2429                           ;ADC.c: 69:         ANSELbits.ANS0 = 1;
  2430     04A2  1683               	bsf	3,5	;RP0=1, select bank3
  2431     04A3  1703               	bsf	3,6	;RP1=1, select bank3
  2432     04A4  1408               	bsf	8,0	;volatile
  2433     04A5                     l237:
  2434     04A5  0008               	return
  2435     04A6                     __end_of_ADC_config:
  2436                           
  2437                           	psect	text11
  2438     002A                     __ptext11:	
  2439 ;; *************** function _isr *****************
  2440 ;; Defined at:
  2441 ;;		line 64 in file "main.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          0       6       0       0       0
  2458 ;;      Totals:         0       6       0       0       0
  2459 ;;Total ram usage:        6 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 3
  2462 ;; This function calls:
  2463 ;;		_ADC_read
  2464 ;;		___awdiv
  2465 ;;		___awmod
  2466 ;;		___lwdiv
  2467 ;;		___lwmod
  2468 ;;		___wmul
  2469 ;;		_map
  2470 ;;		_sprintf
  2471 ;;		i1_Lcd_Set_Cursor
  2472 ;;		i1_Lcd_Write_String
  2473 ;; This function is called by:
  2474 ;;		Interrupt level 1
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478     002A                     _isr:	
  2479                           ;psect for function _isr
  2480                           
  2481     002A                     i1l2203:
  2482                           
  2483                           ;main.c: 65:     if (PIR1bits.ADIF == 1){
  2484     002A  1F0C               	btfss	12,6	;volatile
  2485     002B  282D               	goto	u218_21
  2486     002C  282E               	goto	u218_20
  2487     002D                     u218_21:
  2488     002D  29D6               	goto	i1l86
  2489     002E                     u218_20:
  2490     002E                     i1l2205:
  2491                           
  2492                           ;main.c: 66:         if (ADCON0bits.CHS == 0b0000){
  2493     002E  0C1F               	rrf	31,w	;volatile
  2494     002F  00B7               	movwf	??_isr
  2495     0030  0C37               	rrf	??_isr,w
  2496     0031  390F               	andlw	15
  2497     0032  3A00               	xorlw	0
  2498     0033  1D03               	skipz
  2499     0034  2836               	goto	u219_21
  2500     0035  2837               	goto	u219_20
  2501     0036                     u219_21:
  2502     0036  2905               	goto	i1l2215
  2503     0037                     u219_20:
  2504     0037                     i1l2207:
  2505                           
  2506                           ;main.c: 67:         voltaje1 = ADC_read(0);
  2507     0037  3000               	movlw	0
  2508     0038  120A  118A  22BD  120A  118A  	fcall	_ADC_read
  2509     003D  0871               	movf	?_ADC_read+1,w
  2510     003E  1283               	bcf	3,5	;RP0=0, select bank0
  2511     003F  1303               	bcf	3,6	;RP1=0, select bank0
  2512     0040  00CF               	movwf	_voltaje1+1
  2513     0041  0870               	movf	?_ADC_read,w
  2514     0042  00CE               	movwf	_voltaje1
  2515                           
  2516                           ;main.c: 68:         vol1 = map(voltaje1, 0, 255, 0, 100);
  2517     0043  084F               	movf	_voltaje1+1,w
  2518     0044  00A5               	movwf	map@value+1
  2519     0045  084E               	movf	_voltaje1,w
  2520     0046  00A4               	movwf	map@value
  2521     0047  3000               	movlw	0
  2522     0048  00A6               	movwf	map@inputmin
  2523     0049  00A7               	movwf	map@inputmin+1
  2524     004A  30FF               	movlw	255
  2525     004B  00A8               	movwf	map@inputmax
  2526     004C  3000               	movlw	0
  2527     004D  00A9               	movwf	map@inputmax+1
  2528     004E  3000               	movlw	0
  2529     004F  00AA               	movwf	map@outmin
  2530     0050  00AB               	movwf	map@outmin+1
  2531     0051  3064               	movlw	100
  2532     0052  00AC               	movwf	map@outmax
  2533     0053  3000               	movlw	0
  2534     0054  00AD               	movwf	map@outmax+1
  2535     0055  120A  158A  2793  120A  118A  	fcall	_map
  2536     005A  1283               	bcf	3,5	;RP0=0, select bank0
  2537     005B  1303               	bcf	3,6	;RP1=0, select bank0
  2538     005C  00D2               	movwf	_vol1
  2539                           
  2540                           ;main.c: 69:         unidad1 = (vol1*5)/100;
  2541     005D  3064               	movlw	100
  2542     005E  00F6               	movwf	___awdiv@divisor
  2543     005F  3000               	movlw	0
  2544     0060  00F7               	movwf	___awdiv@divisor+1
  2545     0061  0852               	movf	_vol1,w
  2546     0062  00B7               	movwf	??_isr
  2547     0063  01B8               	clrf	??_isr+1
  2548     0064  0837               	movf	??_isr,w
  2549     0065  00F0               	movwf	___wmul@multiplier
  2550     0066  0838               	movf	??_isr+1,w
  2551     0067  00F1               	movwf	___wmul@multiplier+1
  2552     0068  3005               	movlw	5
  2553     0069  00F2               	movwf	___wmul@multiplicand
  2554     006A  3000               	movlw	0
  2555     006B  00F3               	movwf	___wmul@multiplicand+1
  2556     006C  120A  158A  276E  120A  118A  	fcall	___wmul
  2557     0071  0871               	movf	?___wmul+1,w
  2558     0072  00F9               	movwf	___awdiv@dividend+1
  2559     0073  0870               	movf	?___wmul,w
  2560     0074  00F8               	movwf	___awdiv@dividend
  2561     0075  120A  118A  25A3  120A  118A  	fcall	___awdiv
  2562     007A  0877               	movf	?___awdiv+1,w
  2563     007B  1283               	bcf	3,5	;RP0=0, select bank0
  2564     007C  1303               	bcf	3,6	;RP1=0, select bank0
  2565     007D  00C9               	movwf	_unidad1+1
  2566     007E  0876               	movf	?___awdiv,w
  2567     007F  00C8               	movwf	_unidad1
  2568                           
  2569                           ;main.c: 70:         decima1 = ((vol1*5)/10)%10;
  2570     0080  300A               	movlw	10
  2571     0081  00A4               	movwf	___awmod@divisor
  2572     0082  3000               	movlw	0
  2573     0083  00A5               	movwf	___awmod@divisor+1
  2574     0084  300A               	movlw	10
  2575     0085  00F6               	movwf	___awdiv@divisor
  2576     0086  3000               	movlw	0
  2577     0087  00F7               	movwf	___awdiv@divisor+1
  2578     0088  0852               	movf	_vol1,w
  2579     0089  00B7               	movwf	??_isr
  2580     008A  01B8               	clrf	??_isr+1
  2581     008B  0837               	movf	??_isr,w
  2582     008C  00F0               	movwf	___wmul@multiplier
  2583     008D  0838               	movf	??_isr+1,w
  2584     008E  00F1               	movwf	___wmul@multiplier+1
  2585     008F  3005               	movlw	5
  2586     0090  00F2               	movwf	___wmul@multiplicand
  2587     0091  3000               	movlw	0
  2588     0092  00F3               	movwf	___wmul@multiplicand+1
  2589     0093  120A  158A  276E  120A  118A  	fcall	___wmul
  2590     0098  0871               	movf	?___wmul+1,w
  2591     0099  00F9               	movwf	___awdiv@dividend+1
  2592     009A  0870               	movf	?___wmul,w
  2593     009B  00F8               	movwf	___awdiv@dividend
  2594     009C  120A  118A  25A3  120A  118A  	fcall	___awdiv
  2595     00A1  0877               	movf	?___awdiv+1,w
  2596     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2597     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2598     00A4  00A7               	movwf	___awmod@dividend+1
  2599     00A5  0876               	movf	?___awdiv,w
  2600     00A6  00A6               	movwf	___awmod@dividend
  2601     00A7  120A  118A  260C  120A  118A  	fcall	___awmod
  2602     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2603     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2604     00AE  0825               	movf	?___awmod+1,w
  2605     00AF  00C7               	movwf	_decima1+1
  2606     00B0  0824               	movf	?___awmod,w
  2607     00B1  00C6               	movwf	_decima1
  2608                           
  2609                           ;main.c: 71:         centesima1 = (vol1*5)%10;
  2610     00B2  300A               	movlw	10
  2611     00B3  00A4               	movwf	___awmod@divisor
  2612     00B4  3000               	movlw	0
  2613     00B5  00A5               	movwf	___awmod@divisor+1
  2614     00B6  0852               	movf	_vol1,w
  2615     00B7  00B7               	movwf	??_isr
  2616     00B8  01B8               	clrf	??_isr+1
  2617     00B9  0837               	movf	??_isr,w
  2618     00BA  00F0               	movwf	___wmul@multiplier
  2619     00BB  0838               	movf	??_isr+1,w
  2620     00BC  00F1               	movwf	___wmul@multiplier+1
  2621     00BD  3005               	movlw	5
  2622     00BE  00F2               	movwf	___wmul@multiplicand
  2623     00BF  3000               	movlw	0
  2624     00C0  00F3               	movwf	___wmul@multiplicand+1
  2625     00C1  120A  158A  276E  120A  118A  	fcall	___wmul
  2626     00C6  0871               	movf	?___wmul+1,w
  2627     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2628     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2629     00C9  00A7               	movwf	___awmod@dividend+1
  2630     00CA  0870               	movf	?___wmul,w
  2631     00CB  00A6               	movwf	___awmod@dividend
  2632     00CC  120A  118A  260C  120A  118A  	fcall	___awmod
  2633     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2634     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2635     00D3  0825               	movf	?___awmod+1,w
  2636     00D4  00C5               	movwf	_centesima1+1
  2637     00D5  0824               	movf	?___awmod,w
  2638     00D6  00C4               	movwf	_centesima1
  2639                           
  2640                           ;main.c: 72:         Lcd_Set_Cursor(2,1);
  2641     00D7  01F4               	clrf	i1Lcd_Set_Cursor@b
  2642     00D8  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2643     00D9  3002               	movlw	2
  2644     00DA  120A  118A  24A6  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2645     00DF                     i1l2209:
  2646                           
  2647                           ;main.c: 73:         sprintf(buffer, "%d.%d%dV", unidad1, decima1, centesima1);
  2648     00DF  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2649     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2650     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2651     00E2  00A6               	movwf	sprintf@f
  2652     00E3  0849               	movf	_unidad1+1,w
  2653     00E4  00A8               	movwf	?_sprintf+2
  2654     00E5  0848               	movf	_unidad1,w
  2655     00E6  00A7               	movwf	?_sprintf+1
  2656     00E7  0847               	movf	_decima1+1,w
  2657     00E8  00AA               	movwf	?_sprintf+4
  2658     00E9  0846               	movf	_decima1,w
  2659     00EA  00A9               	movwf	?_sprintf+3
  2660     00EB  0845               	movf	_centesima1+1,w
  2661     00EC  00AC               	movwf	?_sprintf+6
  2662     00ED  0844               	movf	_centesima1,w
  2663     00EE  00AB               	movwf	?_sprintf+5
  2664     00EF  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2665     00F0  120A  118A  21E1  120A  118A  	fcall	_sprintf
  2666     00F5                     i1l2211:
  2667                           
  2668                           ;main.c: 74:         Lcd_Write_String(buffer);
  2669     00F5  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2670     00F6  00F5               	movwf	i1Lcd_Write_String@a
  2671     00F7  3000               	movlw	0
  2672     00F8  00F6               	movwf	i1Lcd_Write_String@a+1
  2673     00F9  120A  118A  274B  120A  118A  	fcall	i1_Lcd_Write_String
  2674     00FE                     i1l2213:
  2675                           
  2676                           ;main.c: 75:         ADCON0bits.CHS = 0b0001;}
  2677     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2678     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2679     0100  081F               	movf	31,w	;volatile
  2680     0101  39C3               	andlw	-61
  2681     0102  3804               	iorlw	4
  2682     0103  009F               	movwf	31	;volatile
  2683     0104  29D5               	goto	i1l2225
  2684     0105                     i1l2215:
  2685     0105  0C1F               	rrf	31,w	;volatile
  2686     0106  00B7               	movwf	??_isr
  2687     0107  0C37               	rrf	??_isr,w
  2688     0108  390F               	andlw	15
  2689     0109  3A01               	xorlw	1
  2690     010A  1D03               	skipz
  2691     010B  290D               	goto	u220_21
  2692     010C  290E               	goto	u220_20
  2693     010D                     u220_21:
  2694     010D  29D5               	goto	i1l2225
  2695     010E                     u220_20:
  2696     010E                     i1l2217:
  2697                           
  2698                           ;main.c: 77:         voltaje2 = ADC_read(1);
  2699     010E  3001               	movlw	1
  2700     010F  120A  118A  22BD  120A  118A  	fcall	_ADC_read
  2701     0114  0871               	movf	?_ADC_read+1,w
  2702     0115  1283               	bcf	3,5	;RP0=0, select bank0
  2703     0116  1303               	bcf	3,6	;RP1=0, select bank0
  2704     0117  00CD               	movwf	_voltaje2+1
  2705     0118  0870               	movf	?_ADC_read,w
  2706     0119  00CC               	movwf	_voltaje2
  2707                           
  2708                           ;main.c: 78:         vol2 = map(voltaje2, 0, 255, 0, 100);
  2709     011A  084D               	movf	_voltaje2+1,w
  2710     011B  00A5               	movwf	map@value+1
  2711     011C  084C               	movf	_voltaje2,w
  2712     011D  00A4               	movwf	map@value
  2713     011E  3000               	movlw	0
  2714     011F  00A6               	movwf	map@inputmin
  2715     0120  00A7               	movwf	map@inputmin+1
  2716     0121  30FF               	movlw	255
  2717     0122  00A8               	movwf	map@inputmax
  2718     0123  3000               	movlw	0
  2719     0124  00A9               	movwf	map@inputmax+1
  2720     0125  3000               	movlw	0
  2721     0126  00AA               	movwf	map@outmin
  2722     0127  00AB               	movwf	map@outmin+1
  2723     0128  3064               	movlw	100
  2724     0129  00AC               	movwf	map@outmax
  2725     012A  3000               	movlw	0
  2726     012B  00AD               	movwf	map@outmax+1
  2727     012C  120A  158A  2793  120A  118A  	fcall	_map
  2728     0131  1283               	bcf	3,5	;RP0=0, select bank0
  2729     0132  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0133  00B7               	movwf	??_isr
  2731     0134  01B8               	clrf	??_isr+1
  2732     0135  0837               	movf	??_isr,w
  2733     0136  00CA               	movwf	_vol2
  2734     0137  0838               	movf	??_isr+1,w
  2735     0138  00CB               	movwf	_vol2+1
  2736                           
  2737                           ;main.c: 79:         unidad2 = (vol2*5)/100;
  2738     0139  3064               	movlw	100
  2739     013A  00F6               	movwf	___lwdiv@divisor
  2740     013B  3000               	movlw	0
  2741     013C  00F7               	movwf	___lwdiv@divisor+1
  2742     013D  084B               	movf	_vol2+1,w
  2743     013E  00F1               	movwf	___wmul@multiplier+1
  2744     013F  084A               	movf	_vol2,w
  2745     0140  00F0               	movwf	___wmul@multiplier
  2746     0141  3005               	movlw	5
  2747     0142  00F2               	movwf	___wmul@multiplicand
  2748     0143  3000               	movlw	0
  2749     0144  00F3               	movwf	___wmul@multiplicand+1
  2750     0145  120A  158A  276E  120A  118A  	fcall	___wmul
  2751     014A  0871               	movf	?___wmul+1,w
  2752     014B  00F9               	movwf	___lwdiv@dividend+1
  2753     014C  0870               	movf	?___wmul,w
  2754     014D  00F8               	movwf	___lwdiv@dividend
  2755     014E  120A  118A  2707  120A  118A  	fcall	___lwdiv
  2756     0153  0877               	movf	?___lwdiv+1,w
  2757     0154  1283               	bcf	3,5	;RP0=0, select bank0
  2758     0155  1303               	bcf	3,6	;RP1=0, select bank0
  2759     0156  00C3               	movwf	_unidad2+1
  2760     0157  0876               	movf	?___lwdiv,w
  2761     0158  00C2               	movwf	_unidad2
  2762                           
  2763                           ;main.c: 80:         decima2 = ((vol2*5)/10)%10;
  2764     0159  300A               	movlw	10
  2765     015A  00A0               	movwf	___lwmod@divisor
  2766     015B  3000               	movlw	0
  2767     015C  00A1               	movwf	___lwmod@divisor+1
  2768     015D  300A               	movlw	10
  2769     015E  00F6               	movwf	___lwdiv@divisor
  2770     015F  3000               	movlw	0
  2771     0160  00F7               	movwf	___lwdiv@divisor+1
  2772     0161  084B               	movf	_vol2+1,w
  2773     0162  00F1               	movwf	___wmul@multiplier+1
  2774     0163  084A               	movf	_vol2,w
  2775     0164  00F0               	movwf	___wmul@multiplier
  2776     0165  3005               	movlw	5
  2777     0166  00F2               	movwf	___wmul@multiplicand
  2778     0167  3000               	movlw	0
  2779     0168  00F3               	movwf	___wmul@multiplicand+1
  2780     0169  120A  158A  276E  120A  118A  	fcall	___wmul
  2781     016E  0871               	movf	?___wmul+1,w
  2782     016F  00F9               	movwf	___lwdiv@dividend+1
  2783     0170  0870               	movf	?___wmul,w
  2784     0171  00F8               	movwf	___lwdiv@dividend
  2785     0172  120A  118A  2707  120A  118A  	fcall	___lwdiv
  2786     0177  0877               	movf	?___lwdiv+1,w
  2787     0178  1283               	bcf	3,5	;RP0=0, select bank0
  2788     0179  1303               	bcf	3,6	;RP1=0, select bank0
  2789     017A  00A3               	movwf	___lwmod@dividend+1
  2790     017B  0876               	movf	?___lwdiv,w
  2791     017C  00A2               	movwf	___lwmod@dividend
  2792     017D  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2793     0182  1283               	bcf	3,5	;RP0=0, select bank0
  2794     0183  1303               	bcf	3,6	;RP1=0, select bank0
  2795     0184  0821               	movf	?___lwmod+1,w
  2796     0185  00C1               	movwf	_decima2+1
  2797     0186  0820               	movf	?___lwmod,w
  2798     0187  00C0               	movwf	_decima2
  2799                           
  2800                           ;main.c: 81:         centesima2 = (vol2*5)%10;
  2801     0188  300A               	movlw	10
  2802     0189  00A0               	movwf	___lwmod@divisor
  2803     018A  3000               	movlw	0
  2804     018B  00A1               	movwf	___lwmod@divisor+1
  2805     018C  084B               	movf	_vol2+1,w
  2806     018D  00F1               	movwf	___wmul@multiplier+1
  2807     018E  084A               	movf	_vol2,w
  2808     018F  00F0               	movwf	___wmul@multiplier
  2809     0190  3005               	movlw	5
  2810     0191  00F2               	movwf	___wmul@multiplicand
  2811     0192  3000               	movlw	0
  2812     0193  00F3               	movwf	___wmul@multiplicand+1
  2813     0194  120A  158A  276E  120A  118A  	fcall	___wmul
  2814     0199  0871               	movf	?___wmul+1,w
  2815     019A  1283               	bcf	3,5	;RP0=0, select bank0
  2816     019B  1303               	bcf	3,6	;RP1=0, select bank0
  2817     019C  00A3               	movwf	___lwmod@dividend+1
  2818     019D  0870               	movf	?___wmul,w
  2819     019E  00A2               	movwf	___lwmod@dividend
  2820     019F  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2821     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2822     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2823     01A6  0821               	movf	?___lwmod+1,w
  2824     01A7  00BF               	movwf	_centesima2+1
  2825     01A8  0820               	movf	?___lwmod,w
  2826     01A9  00BE               	movwf	_centesima2
  2827                           
  2828                           ;main.c: 82:         Lcd_Set_Cursor(2,7);
  2829     01AA  3007               	movlw	7
  2830     01AB  00F4               	movwf	i1Lcd_Set_Cursor@b
  2831     01AC  3002               	movlw	2
  2832     01AD  120A  118A  24A6  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2833     01B2                     i1l2219:
  2834                           
  2835                           ;main.c: 83:         sprintf(buffer, "%d.%d%dV", unidad2, decima2, centesima2);
  2836     01B2  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2837     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2838     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2839     01B5  00A6               	movwf	sprintf@f
  2840     01B6  0843               	movf	_unidad2+1,w
  2841     01B7  00A8               	movwf	?_sprintf+2
  2842     01B8  0842               	movf	_unidad2,w
  2843     01B9  00A7               	movwf	?_sprintf+1
  2844     01BA  0841               	movf	_decima2+1,w
  2845     01BB  00AA               	movwf	?_sprintf+4
  2846     01BC  0840               	movf	_decima2,w
  2847     01BD  00A9               	movwf	?_sprintf+3
  2848     01BE  083F               	movf	_centesima2+1,w
  2849     01BF  00AC               	movwf	?_sprintf+6
  2850     01C0  083E               	movf	_centesima2,w
  2851     01C1  00AB               	movwf	?_sprintf+5
  2852     01C2  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2853     01C3  120A  118A  21E1  120A  118A  	fcall	_sprintf
  2854     01C8                     i1l2221:
  2855                           
  2856                           ;main.c: 84:         Lcd_Write_String(buffer);
  2857     01C8  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2858     01C9  00F5               	movwf	i1Lcd_Write_String@a
  2859     01CA  3000               	movlw	0
  2860     01CB  00F6               	movwf	i1Lcd_Write_String@a+1
  2861     01CC  120A  118A  274B  120A  118A  	fcall	i1_Lcd_Write_String
  2862     01D1                     i1l2223:
  2863                           
  2864                           ;main.c: 85:         ADCON0bits.CHS = 0b0000;}
  2865     01D1  30C3               	movlw	-61
  2866     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2867     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2868     01D4  059F               	andwf	31,f	;volatile
  2869     01D5                     i1l2225:
  2870                           
  2871                           ;main.c: 86:         PIR1bits.ADIF = 0;
  2872     01D5  130C               	bcf	12,6	;volatile
  2873     01D6                     i1l86:
  2874     01D6  083C               	movf	??_isr+5,w
  2875     01D7  00FF               	movwf	btemp+1
  2876     01D8  083B               	movf	??_isr+4,w
  2877     01D9  008A               	movwf	10
  2878     01DA  083A               	movf	??_isr+3,w
  2879     01DB  0084               	movwf	4
  2880     01DC  0E39               	swapf	??_isr+2,w
  2881     01DD  0083               	movwf	3
  2882     01DE  0EFE               	swapf	btemp,f
  2883     01DF  0E7E               	swapf	btemp,w
  2884     01E0  0009               	retfie
  2885     01E1                     __end_of_isr:
  2886                           
  2887                           	psect	intentry
  2888     0004                     __pintentry:	
  2889                           ;incstack = 0
  2890                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2891                           
  2892     0004                     interrupt_function:
  2893     007E                     saved_w	set	btemp
  2894     0004  00FE               	movwf	btemp
  2895     0005  0E03               	swapf	3,w
  2896     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2897     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2898     0008  00B9               	movwf	??_isr+2
  2899     0009  0804               	movf	4,w
  2900     000A  00BA               	movwf	??_isr+3
  2901     000B  080A               	movf	10,w
  2902     000C  00BB               	movwf	??_isr+4
  2903     000D  087F               	movf	btemp+1,w
  2904     000E  00BC               	movwf	??_isr+5
  2905     000F  120A  118A  282A   	ljmp	_isr
  2906                           
  2907                           	psect	text12
  2908     074B                     __ptext12:	
  2909 ;; *************** function i1_Lcd_Write_String *****************
  2910 ;; Defined at:
  2911 ;;		line 104 in file "lcd.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  a               2    5[COMMON] PTR const unsigned char 
  2914 ;;		 -> buffer(20), STR_2(4), STR_1(4), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  i               2   10[COMMON] int 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2926 ;;      Params:         2       0       0       0       0
  2927 ;;      Locals:         2       0       0       0       0
  2928 ;;      Temps:          3       0       0       0       0
  2929 ;;      Totals:         7       0       0       0       0
  2930 ;;Total ram usage:        7 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; Hardware stack levels required when called: 2
  2933 ;; This function calls:
  2934 ;;		i1_Lcd_Write_Char
  2935 ;; This function is called by:
  2936 ;;		_isr
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940     074B                     i1_Lcd_Write_String:	
  2941                           ;psect for function i1_Lcd_Write_String
  2942                           
  2943     074B                     i1l2175:	
  2944                           ;incstack = 0
  2945 ;; using string table level
  2946                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2947                           
  2948                           
  2949                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2950     074B  01FA               	clrf	i1Lcd_Write_String@i
  2951     074C  01FB               	clrf	i1Lcd_Write_String@i+1
  2952     074D  2F70               	goto	i1l2181
  2953     074E                     i1l2177:
  2954                           
  2955                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2956     074E  087A               	movf	i1Lcd_Write_String@i,w
  2957     074F  0775               	addwf	i1Lcd_Write_String@a,w
  2958     0750  00F8               	movwf	??i1_Lcd_Write_String+1
  2959     0751  0876               	movf	i1Lcd_Write_String@a+1,w
  2960     0752  00F7               	movwf	??i1_Lcd_Write_String
  2961     0753  1803               	skipnc
  2962     0754  0AF7               	incf	??i1_Lcd_Write_String,f
  2963     0755  1FFA               	btfss	i1Lcd_Write_String@i,7
  2964     0756  2F58               	goto	u215_20
  2965     0757  03F7               	decf	??i1_Lcd_Write_String,f
  2966     0758                     u215_20:
  2967     0758  0877               	movf	??i1_Lcd_Write_String,w
  2968     0759  00F9               	movwf	??i1_Lcd_Write_String+2
  2969     075A  0879               	movf	??i1_Lcd_Write_String+2,w
  2970     075B  1283               	bcf	3,5	;RP0=0, select bank0
  2971     075C  1303               	bcf	3,6	;RP1=0, select bank0
  2972     075D  00FF               	movwf	btemp+1
  2973     075E  0878               	movf	??i1_Lcd_Write_String+1,w
  2974     075F  0084               	movwf	4
  2975     0760  120A  158A  2000  120A  118A  	fcall	stringtab
  2976     0765  120A  118A  27CC  120A  118A  	fcall	i1_Lcd_Write_Char
  2977     076A                     i1l2179:
  2978     076A  3001               	movlw	1
  2979     076B  07FA               	addwf	i1Lcd_Write_String@i,f
  2980     076C  1803               	skipnc
  2981     076D  0AFB               	incf	i1Lcd_Write_String@i+1,f
  2982     076E  3000               	movlw	0
  2983     076F  07FB               	addwf	i1Lcd_Write_String@i+1,f
  2984     0770                     i1l2181:
  2985     0770  087A               	movf	i1Lcd_Write_String@i,w
  2986     0771  0775               	addwf	i1Lcd_Write_String@a,w
  2987     0772  00F8               	movwf	??i1_Lcd_Write_String+1
  2988     0773  0876               	movf	i1Lcd_Write_String@a+1,w
  2989     0774  00F7               	movwf	??i1_Lcd_Write_String
  2990     0775  1803               	skipnc
  2991     0776  0AF7               	incf	??i1_Lcd_Write_String,f
  2992     0777  1FFA               	btfss	i1Lcd_Write_String@i,7
  2993     0778  2F7A               	goto	u216_20
  2994     0779  03F7               	decf	??i1_Lcd_Write_String,f
  2995     077A                     u216_20:
  2996     077A  0877               	movf	??i1_Lcd_Write_String,w
  2997     077B  00F9               	movwf	??i1_Lcd_Write_String+2
  2998     077C  0879               	movf	??i1_Lcd_Write_String+2,w
  2999     077D  1283               	bcf	3,5	;RP0=0, select bank0
  3000     077E  1303               	bcf	3,6	;RP1=0, select bank0
  3001     077F  00FF               	movwf	btemp+1
  3002     0780  0878               	movf	??i1_Lcd_Write_String+1,w
  3003     0781  0084               	movwf	4
  3004     0782  120A  158A  2000  120A  118A  	fcall	stringtab
  3005     0787  3A00               	xorlw	0
  3006     0788  1D03               	skipz
  3007     0789  2F8B               	goto	u217_21
  3008     078A  2F8C               	goto	u217_20
  3009     078B                     u217_21:
  3010     078B  2F4E               	goto	i1l2177
  3011     078C                     u217_20:
  3012     078C                     i1l142:
  3013     078C  0008               	return
  3014     078D                     __end_ofi1_Lcd_Write_String:
  3015                           
  3016                           	psect	text13
  3017     07CC                     __ptext13:	
  3018 ;; *************** function i1_Lcd_Write_Char *****************
  3019 ;; Defined at:
  3020 ;;		line 88 in file "lcd.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  a               1    wreg     unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  a               1    4[COMMON] unsigned char 
  3025 ;;  y               1    3[COMMON] unsigned char 
  3026 ;;  temp            1    2[COMMON] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         3       0       0       0       0
  3038 ;;      Temps:          1       0       0       0       0
  3039 ;;      Totals:         4       0       0       0       0
  3040 ;;Total ram usage:        4 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 1
  3043 ;; This function calls:
  3044 ;;		i1_Lcd_Port
  3045 ;; This function is called by:
  3046 ;;		i1_Lcd_Write_String
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050     07CC                     i1_Lcd_Write_Char:	
  3051                           ;psect for function i1_Lcd_Write_Char
  3052                           
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3056                           ;i1Lcd_Write_Char@a stored from wreg
  3057     07CC  00F4               	movwf	i1Lcd_Write_Char@a
  3058     07CD                     i1l1787:
  3059                           
  3060                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  3061     07CD  0874               	movf	i1Lcd_Write_Char@a,w
  3062     07CE  390F               	andlw	15
  3063     07CF  00F2               	movwf	i1Lcd_Write_Char@temp
  3064                           
  3065                           ;lcd.c: 92:     y = a&0xF0;
  3066     07D0  0874               	movf	i1Lcd_Write_Char@a,w
  3067     07D1  39F0               	andlw	240
  3068     07D2  00F3               	movwf	i1Lcd_Write_Char@y
  3069     07D3                     i1l1789:
  3070                           
  3071                           ;lcd.c: 93:     PORTBbits.RB2 = 1;
  3072     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3073     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3074     07D5  1506               	bsf	6,2	;volatile
  3075     07D6                     i1l1791:
  3076                           
  3077                           ;lcd.c: 94:     Lcd_Port(y>>4);
  3078     07D6  0873               	movf	i1Lcd_Write_Char@y,w
  3079     07D7  00F1               	movwf	??i1_Lcd_Write_Char
  3080     07D8  3004               	movlw	4
  3081     07D9                     u151_25:
  3082     07D9  1003               	clrc
  3083     07DA  0CF1               	rrf	??i1_Lcd_Write_Char,f
  3084     07DB  3EFF               	addlw	-1
  3085     07DC  1D03               	skipz
  3086     07DD  2FD9               	goto	u151_25
  3087     07DE  0871               	movf	??i1_Lcd_Write_Char,w
  3088     07DF  120A  158A  274C  120A  118A  	fcall	i1_Lcd_Port
  3089     07E4                     i1l1793:
  3090                           
  3091                           ;lcd.c: 95:     PORTBbits.RB3 = 1;
  3092     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  3093     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  3094     07E6  1586               	bsf	6,3	;volatile
  3095     07E7                     i1l1795:
  3096                           
  3097                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3098     07E7  300D               	movlw	13
  3099     07E8  00F1               	movwf	??i1_Lcd_Write_Char
  3100     07E9                     u260_27:
  3101     07E9  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  3102     07EA  2FE9               	goto	u260_27
  3103     07EB                     i1l1797:
  3104                           
  3105                           ;lcd.c: 97:     PORTBbits.RB3 = 0;
  3106     07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3107     07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3108     07ED  1186               	bcf	6,3	;volatile
  3109     07EE                     i1l1799:
  3110                           
  3111                           ;lcd.c: 98:     Lcd_Port(temp);
  3112     07EE  0872               	movf	i1Lcd_Write_Char@temp,w
  3113     07EF  120A  158A  274C  120A  118A  	fcall	i1_Lcd_Port
  3114     07F4                     i1l1801:
  3115                           
  3116                           ;lcd.c: 99:     PORTBbits.RB3 = 1;
  3117     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3118     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3119     07F6  1586               	bsf	6,3	;volatile
  3120     07F7                     i1l1803:
  3121                           
  3122                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3123     07F7  300D               	movlw	13
  3124     07F8  00F1               	movwf	??i1_Lcd_Write_Char
  3125     07F9                     u261_27:
  3126     07F9  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  3127     07FA  2FF9               	goto	u261_27
  3128     07FB                     i1l1805:
  3129                           
  3130                           ;lcd.c: 101:     PORTBbits.RB3 = 0;
  3131     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  3132     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  3133     07FD  1186               	bcf	6,3	;volatile
  3134     07FE                     i1l136:
  3135     07FE  0008               	return
  3136     07FF                     __end_ofi1_Lcd_Write_Char:
  3137                           
  3138                           	psect	text14
  3139     04A6                     __ptext14:	
  3140 ;; *************** function i1_Lcd_Set_Cursor *****************
  3141 ;; Defined at:
  3142 ;;		line 26 in file "lcd.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  a               1    wreg     unsigned char 
  3145 ;;  b               1    4[COMMON] unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  a               1    6[COMMON] unsigned char 
  3148 ;;  temp            1    9[COMMON] unsigned char 
  3149 ;;  y               1    8[COMMON] unsigned char 
  3150 ;;  z               1    7[COMMON] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         1       0       0       0       0
  3161 ;;      Locals:         4       0       0       0       0
  3162 ;;      Temps:          1       0       0       0       0
  3163 ;;      Totals:         6       0       0       0       0
  3164 ;;Total ram usage:        6 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 2
  3167 ;; This function calls:
  3168 ;;		i1_Lcd_Cmd
  3169 ;; This function is called by:
  3170 ;;		_isr
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     04A6                     i1_Lcd_Set_Cursor:	
  3175                           ;psect for function i1_Lcd_Set_Cursor
  3176                           
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3180                           ;i1Lcd_Set_Cursor@a stored from wreg
  3181     04A6  00F6               	movwf	i1Lcd_Set_Cursor@a
  3182     04A7                     i1l2135:
  3183                           
  3184                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3185     04A7  0376               	decf	i1Lcd_Set_Cursor@a,w
  3186     04A8  1D03               	btfss	3,2
  3187     04A9  2CAB               	goto	u207_21
  3188     04AA  2CAC               	goto	u207_20
  3189     04AB                     u207_21:
  3190     04AB  2CC9               	goto	i1l2145
  3191     04AC                     u207_20:
  3192     04AC                     i1l2137:
  3193                           
  3194                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3195     04AC  0874               	movf	i1Lcd_Set_Cursor@b,w
  3196     04AD  3E7F               	addlw	127
  3197     04AE  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3198                           
  3199                           ;lcd.c: 32:         z = temp>>4;
  3200     04AF  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3201     04B0  00F5               	movwf	??i1_Lcd_Set_Cursor
  3202     04B1  3004               	movlw	4
  3203     04B2                     u208_25:
  3204     04B2  1003               	clrc
  3205     04B3  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3206     04B4  3EFF               	addlw	-1
  3207     04B5  1D03               	skipz
  3208     04B6  2CB2               	goto	u208_25
  3209     04B7  0875               	movf	??i1_Lcd_Set_Cursor,w
  3210     04B8  00F7               	movwf	i1Lcd_Set_Cursor@z
  3211     04B9                     i1l2139:
  3212                           
  3213                           ;lcd.c: 33:         y = temp & 0x0F;
  3214     04B9  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3215     04BA  390F               	andlw	15
  3216     04BB  00F8               	movwf	i1Lcd_Set_Cursor@y
  3217     04BC                     i1l2141:
  3218                           
  3219                           ;lcd.c: 34:         Lcd_Cmd(z);
  3220     04BC  0877               	movf	i1Lcd_Set_Cursor@z,w
  3221     04BD  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3222     04C2                     i1l2143:
  3223                           
  3224                           ;lcd.c: 35:         Lcd_Cmd(y);
  3225     04C2  0878               	movf	i1Lcd_Set_Cursor@y,w
  3226     04C3  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3227                           
  3228                           ;lcd.c: 36:     }
  3229     04C8  2D32               	goto	i1l130
  3230     04C9                     i1l2145:
  3231     04C9  3002               	movlw	2
  3232     04CA  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3233     04CB  1D03               	btfss	3,2
  3234     04CC  2CCE               	goto	u209_21
  3235     04CD  2CCF               	goto	u209_20
  3236     04CE                     u209_21:
  3237     04CE  2CEC               	goto	i1l2155
  3238     04CF                     u209_20:
  3239     04CF                     i1l2147:
  3240                           
  3241                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  3242     04CF  0874               	movf	i1Lcd_Set_Cursor@b,w
  3243     04D0  3EBF               	addlw	191
  3244     04D1  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3245                           
  3246                           ;lcd.c: 40:         z = temp>>4;
  3247     04D2  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3248     04D3  00F5               	movwf	??i1_Lcd_Set_Cursor
  3249     04D4  3004               	movlw	4
  3250     04D5                     u210_25:
  3251     04D5  1003               	clrc
  3252     04D6  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3253     04D7  3EFF               	addlw	-1
  3254     04D8  1D03               	skipz
  3255     04D9  2CD5               	goto	u210_25
  3256     04DA  0875               	movf	??i1_Lcd_Set_Cursor,w
  3257     04DB  00F7               	movwf	i1Lcd_Set_Cursor@z
  3258     04DC                     i1l2149:
  3259                           
  3260                           ;lcd.c: 41:         y = temp & 0x0F;
  3261     04DC  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3262     04DD  390F               	andlw	15
  3263     04DE  00F8               	movwf	i1Lcd_Set_Cursor@y
  3264     04DF                     i1l2151:
  3265                           
  3266                           ;lcd.c: 42:         Lcd_Cmd(z);
  3267     04DF  0877               	movf	i1Lcd_Set_Cursor@z,w
  3268     04E0  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3269     04E5                     i1l2153:
  3270                           
  3271                           ;lcd.c: 43:         Lcd_Cmd(y);
  3272     04E5  0878               	movf	i1Lcd_Set_Cursor@y,w
  3273     04E6  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3274                           
  3275                           ;lcd.c: 44:     }
  3276     04EB  2D32               	goto	i1l130
  3277     04EC                     i1l2155:
  3278     04EC  3003               	movlw	3
  3279     04ED  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3280     04EE  1D03               	btfss	3,2
  3281     04EF  2CF1               	goto	u211_21
  3282     04F0  2CF2               	goto	u211_20
  3283     04F1                     u211_21:
  3284     04F1  2D0F               	goto	i1l2165
  3285     04F2                     u211_20:
  3286     04F2                     i1l2157:
  3287                           
  3288                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  3289     04F2  0874               	movf	i1Lcd_Set_Cursor@b,w
  3290     04F3  3E93               	addlw	147
  3291     04F4  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3292                           
  3293                           ;lcd.c: 48:         z = temp>>4;
  3294     04F5  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3295     04F6  00F5               	movwf	??i1_Lcd_Set_Cursor
  3296     04F7  3004               	movlw	4
  3297     04F8                     u212_25:
  3298     04F8  1003               	clrc
  3299     04F9  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3300     04FA  3EFF               	addlw	-1
  3301     04FB  1D03               	skipz
  3302     04FC  2CF8               	goto	u212_25
  3303     04FD  0875               	movf	??i1_Lcd_Set_Cursor,w
  3304     04FE  00F7               	movwf	i1Lcd_Set_Cursor@z
  3305     04FF                     i1l2159:
  3306                           
  3307                           ;lcd.c: 49:         y = temp & 0x0F;
  3308     04FF  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3309     0500  390F               	andlw	15
  3310     0501  00F8               	movwf	i1Lcd_Set_Cursor@y
  3311     0502                     i1l2161:
  3312                           
  3313                           ;lcd.c: 50:         Lcd_Cmd(z);
  3314     0502  0877               	movf	i1Lcd_Set_Cursor@z,w
  3315     0503  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3316     0508                     i1l2163:
  3317                           
  3318                           ;lcd.c: 51:         Lcd_Cmd(y);
  3319     0508  0878               	movf	i1Lcd_Set_Cursor@y,w
  3320     0509  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3321                           
  3322                           ;lcd.c: 52:     }
  3323     050E  2D32               	goto	i1l130
  3324     050F                     i1l2165:
  3325     050F  3004               	movlw	4
  3326     0510  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3327     0511  1D03               	btfss	3,2
  3328     0512  2D14               	goto	u213_21
  3329     0513  2D15               	goto	u213_20
  3330     0514                     u213_21:
  3331     0514  2D32               	goto	i1l126
  3332     0515                     u213_20:
  3333     0515                     i1l2167:
  3334                           
  3335                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  3336     0515  0874               	movf	i1Lcd_Set_Cursor@b,w
  3337     0516  3ED3               	addlw	211
  3338     0517  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3339                           
  3340                           ;lcd.c: 56:         z = temp>>4;
  3341     0518  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3342     0519  00F5               	movwf	??i1_Lcd_Set_Cursor
  3343     051A  3004               	movlw	4
  3344     051B                     u214_25:
  3345     051B  1003               	clrc
  3346     051C  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3347     051D  3EFF               	addlw	-1
  3348     051E  1D03               	skipz
  3349     051F  2D1B               	goto	u214_25
  3350     0520  0875               	movf	??i1_Lcd_Set_Cursor,w
  3351     0521  00F7               	movwf	i1Lcd_Set_Cursor@z
  3352     0522                     i1l2169:
  3353                           
  3354                           ;lcd.c: 57:         y = temp & 0x0F;
  3355     0522  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3356     0523  390F               	andlw	15
  3357     0524  00F8               	movwf	i1Lcd_Set_Cursor@y
  3358     0525                     i1l2171:
  3359                           
  3360                           ;lcd.c: 58:         Lcd_Cmd(z);
  3361     0525  0877               	movf	i1Lcd_Set_Cursor@z,w
  3362     0526  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3363     052B                     i1l2173:
  3364                           
  3365                           ;lcd.c: 59:         Lcd_Cmd(y);
  3366     052B  0878               	movf	i1Lcd_Set_Cursor@y,w
  3367     052C  120A  158A  26F2  120A  118A  	fcall	i1_Lcd_Cmd
  3368     0531  2D32               	goto	i1l130
  3369     0532                     i1l126:
  3370     0532                     i1l130:
  3371     0532  0008               	return
  3372     0533                     __end_ofi1_Lcd_Set_Cursor:
  3373                           
  3374                           	psect	text15
  3375     0EF2                     __ptext15:	
  3376 ;; *************** function i1_Lcd_Cmd *****************
  3377 ;; Defined at:
  3378 ;;		line 11 in file "lcd.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  a               1    wreg     unsigned char 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  a               1    3[COMMON] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       0       0       0       0
  3393 ;;      Locals:         1       0       0       0       0
  3394 ;;      Temps:          2       0       0       0       0
  3395 ;;      Totals:         3       0       0       0       0
  3396 ;;Total ram usage:        3 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 1
  3399 ;; This function calls:
  3400 ;;		i1_Lcd_Port
  3401 ;; This function is called by:
  3402 ;;		i1_Lcd_Set_Cursor
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406     0EF2                     i1_Lcd_Cmd:	
  3407                           ;psect for function i1_Lcd_Cmd
  3408                           
  3409                           
  3410                           ;incstack = 0
  3411                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3412                           ;i1Lcd_Cmd@a stored from wreg
  3413     0EF2  00F3               	movwf	i1Lcd_Cmd@a
  3414     0EF3                     i1l1777:
  3415                           
  3416                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTBbits.RB2 = 0;
  3417     0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  3418     0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  3419     0EF5  1106               	bcf	6,2	;volatile
  3420     0EF6                     i1l1779:
  3421                           
  3422                           ;lcd.c: 14:     Lcd_Port(a);
  3423     0EF6  0873               	movf	i1Lcd_Cmd@a,w
  3424     0EF7  120A  158A  274C  120A  158A  	fcall	i1_Lcd_Port
  3425     0EFC                     i1l1781:
  3426                           
  3427                           ;lcd.c: 15:     PORTBbits.RB3 = 1;
  3428     0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  3429     0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  3430     0EFE  1586               	bsf	6,3	;volatile
  3431     0EFF                     i1l1783:
  3432                           
  3433                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3434     0EFF  3006               	movlw	6
  3435     0F00  00F2               	movwf	??i1_Lcd_Cmd+1
  3436     0F01  3030               	movlw	48
  3437     0F02  00F1               	movwf	??i1_Lcd_Cmd
  3438     0F03                     u262_27:
  3439     0F03  0BF1               	decfsz	??i1_Lcd_Cmd,f
  3440     0F04  2F03               	goto	u262_27
  3441     0F05  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  3442     0F06  2F03               	goto	u262_27
  3443     0F07  0000               	nop
  3444     0F08                     i1l1785:
  3445                           
  3446                           ;lcd.c: 17:     PORTBbits.RB3 = 0;
  3447     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  3448     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  3449     0F0A  1186               	bcf	6,3	;volatile
  3450     0F0B                     i1l117:
  3451     0F0B  0008               	return
  3452     0F0C                     __end_ofi1_Lcd_Cmd:
  3453                           
  3454                           	psect	text16
  3455     0F4C                     __ptext16:	
  3456 ;; *************** function i1_Lcd_Port *****************
  3457 ;; Defined at:
  3458 ;;		line 3 in file "lcd.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  a               1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  a               1    0[COMMON] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3472 ;;      Params:         0       0       0       0       0
  3473 ;;      Locals:         1       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0
  3475 ;;      Totals:         1       0       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		i1_Lcd_Cmd
  3482 ;;		i1_Lcd_Write_Char
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486     0F4C                     i1_Lcd_Port:	
  3487                           ;psect for function i1_Lcd_Port
  3488                           
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in i1_Lcd_Port: [wreg]
  3492                           ;i1Lcd_Port@a stored from wreg
  3493     0F4C  00F0               	movwf	i1Lcd_Port@a
  3494     0F4D                     i1l1639:
  3495                           
  3496                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  3497     0F4D  1C70               	btfss	i1Lcd_Port@a,0
  3498     0F4E  2F50               	goto	u119_21
  3499     0F4F  2F51               	goto	u119_20
  3500     0F50                     u119_21:
  3501     0F50  2F55               	goto	i1l99
  3502     0F51                     u119_20:
  3503     0F51                     i1l1641:
  3504     0F51  1283               	bcf	3,5	;RP0=0, select bank0
  3505     0F52  1303               	bcf	3,6	;RP1=0, select bank0
  3506     0F53  1606               	bsf	6,4	;volatile
  3507     0F54  2F58               	goto	i1l101
  3508     0F55                     i1l99:
  3509     0F55  1283               	bcf	3,5	;RP0=0, select bank0
  3510     0F56  1303               	bcf	3,6	;RP1=0, select bank0
  3511     0F57  1206               	bcf	6,4	;volatile
  3512     0F58                     i1l101:
  3513                           
  3514                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  3515     0F58  1CF0               	btfss	i1Lcd_Port@a,1
  3516     0F59  2F5B               	goto	u120_21
  3517     0F5A  2F5C               	goto	u120_20
  3518     0F5B                     u120_21:
  3519     0F5B  2F5E               	goto	i1l103
  3520     0F5C                     u120_20:
  3521     0F5C                     i1l1643:
  3522     0F5C  1686               	bsf	6,5	;volatile
  3523     0F5D  2F5F               	goto	i1l105
  3524     0F5E                     i1l103:
  3525     0F5E  1286               	bcf	6,5	;volatile
  3526     0F5F                     i1l105:
  3527                           
  3528                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  3529     0F5F  1D70               	btfss	i1Lcd_Port@a,2
  3530     0F60  2F62               	goto	u121_21
  3531     0F61  2F63               	goto	u121_20
  3532     0F62                     u121_21:
  3533     0F62  2F65               	goto	i1l107
  3534     0F63                     u121_20:
  3535     0F63                     i1l1645:
  3536     0F63  1706               	bsf	6,6	;volatile
  3537     0F64  2F66               	goto	i1l109
  3538     0F65                     i1l107:
  3539     0F65  1306               	bcf	6,6	;volatile
  3540     0F66                     i1l109:
  3541                           
  3542                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  3543     0F66  1DF0               	btfss	i1Lcd_Port@a,3
  3544     0F67  2F69               	goto	u122_21
  3545     0F68  2F6A               	goto	u122_20
  3546     0F69                     u122_21:
  3547     0F69  2F6C               	goto	i1l111
  3548     0F6A                     u122_20:
  3549     0F6A                     i1l1647:
  3550     0F6A  1786               	bsf	6,7	;volatile
  3551     0F6B  2F6D               	goto	i1l114
  3552     0F6C                     i1l111:
  3553     0F6C  1386               	bcf	6,7	;volatile
  3554     0F6D                     i1l114:
  3555     0F6D  0008               	return
  3556     0F6E                     __end_ofi1_Lcd_Port:
  3557                           
  3558                           	psect	text17
  3559     01E1                     __ptext17:	
  3560 ;; *************** function _sprintf *****************
  3561 ;; Defined at:
  3562 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  sp              1    wreg     PTR unsigned char 
  3565 ;;		 -> buffer(20), 
  3566 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  3567 ;;		 -> STR_4(9), STR_3(9), 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  3570 ;;		 -> buffer(20), 
  3571 ;;  tmpval          4    0        struct .
  3572 ;;  val             2   19[BANK0 ] unsigned int 
  3573 ;;  cp              2    0        PTR const unsigned char 
  3574 ;;  len             2    0        unsigned int 
  3575 ;;  c               1   22[BANK0 ] unsigned char 
  3576 ;;  prec            1   18[BANK0 ] char 
  3577 ;;  flag            1   17[BANK0 ] unsigned char 
  3578 ;;  ap              1   16[BANK0 ] PTR void [1]
  3579 ;;		 -> ?_sprintf(2), 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  2    6[BANK0 ] int 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3589 ;;      Params:         0       7       0       0       0
  3590 ;;      Locals:         0       7       0       0       0
  3591 ;;      Temps:          0       3       0       0       0
  3592 ;;      Totals:         0      17       0       0       0
  3593 ;;Total ram usage:       17 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 1
  3596 ;; This function calls:
  3597 ;;		___lwdiv
  3598 ;;		___lwmod
  3599 ;; This function is called by:
  3600 ;;		_isr
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604     01E1                     _sprintf:	
  3605                           ;psect for function _sprintf
  3606                           
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3610                           ;sprintf@sp stored from wreg
  3611     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  3612     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  3613     01E3  00B5               	movwf	sprintf@sp
  3614     01E4                     i1l2035:
  3615                           
  3616                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3617     01E4  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3618     01E5  00B0               	movwf	sprintf@ap
  3619                           
  3620                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3621     01E6  2AA8               	goto	i1l2087
  3622     01E7                     i1l2037:
  3623                           
  3624                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3625     01E7  3025               	movlw	37
  3626     01E8  0636               	xorwf	sprintf@c,w
  3627     01E9  1903               	btfsc	3,2
  3628     01EA  29EC               	goto	u191_21
  3629     01EB  29ED               	goto	u191_20
  3630     01EC                     u191_21:
  3631     01EC  29F7               	goto	i1l2043
  3632     01ED                     u191_20:
  3633     01ED                     i1l2039:
  3634                           
  3635                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3636     01ED  0835               	movf	sprintf@sp,w
  3637     01EE  0084               	movwf	4
  3638     01EF  0836               	movf	sprintf@c,w
  3639     01F0  1383               	bcf	3,7	;select IRP bank0
  3640     01F1  0080               	movwf	0
  3641     01F2                     i1l2041:
  3642     01F2  3001               	movlw	1
  3643     01F3  00AD               	movwf	??_sprintf
  3644     01F4  082D               	movf	??_sprintf,w
  3645     01F5  07B5               	addwf	sprintf@sp,f
  3646                           
  3647                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  3648     01F6  2AA8               	goto	i1l2087
  3649     01F7                     i1l2043:
  3650                           
  3651                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3652     01F7  01B1               	clrf	sprintf@flag
  3653     01F8                     i1l2047:	
  3654                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3655                           
  3656     01F8  3001               	movlw	1
  3657     01F9  07A6               	addwf	sprintf@f,f
  3658     01FA  30FF               	movlw	-1
  3659     01FB  0726               	addwf	sprintf@f,w
  3660     01FC  0084               	movwf	4
  3661     01FD  120A  158A  200A  120A  118A  	fcall	stringdir
  3662     0202  00B6               	movwf	sprintf@c
  3663     0203  00AD               	movwf	??_sprintf
  3664     0204  01AE               	clrf	??_sprintf+1
  3665                           
  3666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3667                           ; Switch size 1, requested type "simple"
  3668                           ; Number of cases is 1, Range of values is 0 to 0
  3669                           ; switch strategies available:
  3670                           ; Name         Instructions Cycles
  3671                           ; simple_byte            4     3 (average)
  3672                           ; direct_byte           11     8 (fixed)
  3673                           ; jumptable            260     6 (fixed)
  3674                           ;	Chosen strategy is simple_byte
  3675     0205  082E               	movf	??_sprintf+1,w
  3676     0206  3A00               	xorlw	0	; case 0
  3677     0207  1903               	skipnz
  3678     0208  2A0A               	goto	i1l2597
  3679     0209  2AA8               	goto	i1l2087
  3680     020A                     i1l2597:
  3681                           
  3682                           ; Switch size 1, requested type "simple"
  3683                           ; Number of cases is 3, Range of values is 0 to 105
  3684                           ; switch strategies available:
  3685                           ; Name         Instructions Cycles
  3686                           ; simple_byte           10     6 (average)
  3687                           ; jumptable            260     6 (fixed)
  3688                           ;	Chosen strategy is simple_byte
  3689     020A  082D               	movf	??_sprintf,w
  3690     020B  3A00               	xorlw	0	; case 0
  3691     020C  1903               	skipnz
  3692     020D  2AB8               	goto	i1l2089
  3693     020E  3A64               	xorlw	100	; case 100
  3694     020F  1903               	skipnz
  3695     0210  2A15               	goto	i1l2049
  3696     0211  3A0D               	xorlw	13	; case 105
  3697     0212  1903               	skipnz
  3698     0213  2A15               	goto	i1l2049
  3699     0214  2AA8               	goto	i1l2087
  3700     0215                     i1l2049:
  3701                           
  3702                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3703     0215  0830               	movf	sprintf@ap,w
  3704     0216  0084               	movwf	4
  3705     0217  1383               	bcf	3,7	;select IRP bank0
  3706     0218  0800               	movf	0,w
  3707     0219  00B3               	movwf	sprintf@val
  3708     021A  0A84               	incf	4,f
  3709     021B  0800               	movf	0,w
  3710     021C  00B4               	movwf	sprintf@val+1
  3711     021D                     i1l2051:
  3712     021D  3002               	movlw	2
  3713     021E  00AD               	movwf	??_sprintf
  3714     021F  082D               	movf	??_sprintf,w
  3715     0220  07B0               	addwf	sprintf@ap,f
  3716     0221                     i1l2053:
  3717                           
  3718                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3719     0221  1FB4               	btfss	sprintf@val+1,7
  3720     0222  2A24               	goto	u192_21
  3721     0223  2A25               	goto	u192_20
  3722     0224                     u192_21:
  3723     0224  2A2E               	goto	i1l2059
  3724     0225                     u192_20:
  3725     0225                     i1l2055:
  3726                           
  3727                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3728     0225  3003               	movlw	3
  3729     0226  00AD               	movwf	??_sprintf
  3730     0227  082D               	movf	??_sprintf,w
  3731     0228  04B1               	iorwf	sprintf@flag,f
  3732     0229                     i1l2057:
  3733                           
  3734                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3735     0229  09B3               	comf	sprintf@val,f
  3736     022A  09B4               	comf	sprintf@val+1,f
  3737     022B  0AB3               	incf	sprintf@val,f
  3738     022C  1903               	skipnz
  3739     022D  0AB4               	incf	sprintf@val+1,f
  3740     022E                     i1l2059:
  3741                           
  3742                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3743     022E  01B6               	clrf	sprintf@c
  3744     022F  0AB6               	incf	sprintf@c,f
  3745     0230                     i1l2065:
  3746                           
  3747                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3748     0230  0836               	movf	sprintf@c,w
  3749     0231  00AD               	movwf	??_sprintf
  3750     0232  072D               	addwf	??_sprintf,w
  3751     0233  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3752     0234  0084               	movwf	4
  3753     0235  120A  158A  200A  120A  118A  	fcall	stringdir
  3754     023A  00AE               	movwf	??_sprintf+1
  3755     023B  120A  158A  200A  120A  118A  	fcall	stringdir
  3756     0240  00AF               	movwf	??_sprintf+2
  3757     0241  082F               	movf	??_sprintf+2,w
  3758     0242  0234               	subwf	sprintf@val+1,w
  3759     0243  1D03               	skipz
  3760     0244  2A47               	goto	u193_25
  3761     0245  082E               	movf	??_sprintf+1,w
  3762     0246  0233               	subwf	sprintf@val,w
  3763     0247                     u193_25:
  3764     0247  1803               	skipnc
  3765     0248  2A4A               	goto	u193_21
  3766     0249  2A4B               	goto	u193_20
  3767     024A                     u193_21:
  3768     024A  2A4C               	goto	i1l2069
  3769     024B                     u193_20:
  3770     024B  2A56               	goto	i1l2071
  3771     024C                     i1l2069:
  3772     024C  3001               	movlw	1
  3773     024D  00AD               	movwf	??_sprintf
  3774     024E  082D               	movf	??_sprintf,w
  3775     024F  07B6               	addwf	sprintf@c,f
  3776     0250  3005               	movlw	5
  3777     0251  0636               	xorwf	sprintf@c,w
  3778     0252  1D03               	btfss	3,2
  3779     0253  2A55               	goto	u194_21
  3780     0254  2A56               	goto	u194_20
  3781     0255                     u194_21:
  3782     0255  2A30               	goto	i1l2065
  3783     0256                     u194_20:
  3784     0256                     i1l2071:
  3785                           
  3786                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3787     0256  0831               	movf	sprintf@flag,w
  3788     0257  3903               	andlw	3
  3789     0258  1903               	btfsc	3,2
  3790     0259  2A5B               	goto	u195_21
  3791     025A  2A5C               	goto	u195_20
  3792     025B                     u195_21:
  3793     025B  2A65               	goto	i1l2077
  3794     025C                     u195_20:
  3795     025C                     i1l2073:
  3796                           
  3797                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3798     025C  0835               	movf	sprintf@sp,w
  3799     025D  0084               	movwf	4
  3800     025E  302D               	movlw	45
  3801     025F  1383               	bcf	3,7	;select IRP bank0
  3802     0260  0080               	movwf	0
  3803     0261                     i1l2075:
  3804     0261  3001               	movlw	1
  3805     0262  00AD               	movwf	??_sprintf
  3806     0263  082D               	movf	??_sprintf,w
  3807     0264  07B5               	addwf	sprintf@sp,f
  3808     0265                     i1l2077:
  3809                           
  3810                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3811     0265  0836               	movf	sprintf@c,w
  3812     0266  00B2               	movwf	sprintf@prec
  3813                           
  3814                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3815     0267  2A9F               	goto	i1l2085
  3816     0268                     i1l2079:
  3817                           
  3818                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3819     0268  300A               	movlw	10
  3820     0269  00A0               	movwf	___lwmod@divisor
  3821     026A  3000               	movlw	0
  3822     026B  00A1               	movwf	___lwmod@divisor+1
  3823     026C  0832               	movf	sprintf@prec,w
  3824     026D  00AD               	movwf	??_sprintf
  3825     026E  072D               	addwf	??_sprintf,w
  3826     026F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3827     0270  0084               	movwf	4
  3828     0271  120A  158A  200A  120A  118A  	fcall	stringdir
  3829     0276  00F6               	movwf	___lwdiv@divisor
  3830     0277  120A  158A  200A  120A  118A  	fcall	stringdir
  3831     027C  00F7               	movwf	___lwdiv@divisor+1
  3832     027D  0834               	movf	sprintf@val+1,w
  3833     027E  00F9               	movwf	___lwdiv@dividend+1
  3834     027F  0833               	movf	sprintf@val,w
  3835     0280  00F8               	movwf	___lwdiv@dividend
  3836     0281  120A  118A  2707  120A  118A  	fcall	___lwdiv
  3837     0286  0877               	movf	?___lwdiv+1,w
  3838     0287  1283               	bcf	3,5	;RP0=0, select bank0
  3839     0288  1303               	bcf	3,6	;RP1=0, select bank0
  3840     0289  00A3               	movwf	___lwmod@dividend+1
  3841     028A  0876               	movf	?___lwdiv,w
  3842     028B  00A2               	movwf	___lwmod@dividend
  3843     028C  120A  158A  27C4  120A  118A  	fcall	___lwmod
  3844     0291  1283               	bcf	3,5	;RP0=0, select bank0
  3845     0292  1303               	bcf	3,6	;RP1=0, select bank0
  3846     0293  0820               	movf	?___lwmod,w
  3847     0294  3E30               	addlw	48
  3848     0295  00B6               	movwf	sprintf@c
  3849     0296                     i1l2081:
  3850                           
  3851                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3852     0296  0835               	movf	sprintf@sp,w
  3853     0297  0084               	movwf	4
  3854     0298  0836               	movf	sprintf@c,w
  3855     0299  1383               	bcf	3,7	;select IRP bank0
  3856     029A  0080               	movwf	0
  3857     029B                     i1l2083:
  3858     029B  3001               	movlw	1
  3859     029C  00AD               	movwf	??_sprintf
  3860     029D  082D               	movf	??_sprintf,w
  3861     029E  07B5               	addwf	sprintf@sp,f
  3862     029F                     i1l2085:
  3863                           
  3864                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3865     029F  30FF               	movlw	255
  3866     02A0  00AD               	movwf	??_sprintf
  3867     02A1  082D               	movf	??_sprintf,w
  3868     02A2  07B2               	addwf	sprintf@prec,f
  3869     02A3  0A32               	incf	sprintf@prec,w
  3870     02A4  1D03               	btfss	3,2
  3871     02A5  2AA7               	goto	u196_21
  3872     02A6  2AA8               	goto	u196_20
  3873     02A7                     u196_21:
  3874     02A7  2A68               	goto	i1l2079
  3875     02A8                     u196_20:
  3876     02A8                     i1l2087:
  3877                           
  3878                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3879     02A8  3001               	movlw	1
  3880     02A9  07A6               	addwf	sprintf@f,f
  3881     02AA  30FF               	movlw	-1
  3882     02AB  0726               	addwf	sprintf@f,w
  3883     02AC  0084               	movwf	4
  3884     02AD  120A  158A  200A  120A  118A  	fcall	stringdir
  3885     02B2  00B6               	movwf	sprintf@c
  3886     02B3  0836               	movf	sprintf@c,w
  3887     02B4  1D03               	btfss	3,2
  3888     02B5  2AB7               	goto	u197_21
  3889     02B6  2AB8               	goto	u197_20
  3890     02B7                     u197_21:
  3891     02B7  29E7               	goto	i1l2037
  3892     02B8                     u197_20:
  3893     02B8                     i1l2089:
  3894                           
  3895                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3896     02B8  0835               	movf	sprintf@sp,w
  3897     02B9  0084               	movwf	4
  3898     02BA  1383               	bcf	3,7	;select IRP bank0
  3899     02BB  0180               	clrf	0
  3900     02BC                     i1l377:
  3901     02BC  0008               	return
  3902     02BD                     __end_of_sprintf:
  3903                           
  3904                           	psect	text18
  3905     0FC4                     __ptext18:	
  3906 ;; *************** function ___lwmod *****************
  3907 ;; Defined at:
  3908 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;  divisor         2    0[BANK0 ] unsigned int 
  3911 ;;  dividend        2    2[BANK0 ] unsigned int 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  counter         1    5[BANK0 ] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  2    0[BANK0 ] unsigned int 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       4       0       0       0
  3924 ;;      Locals:         0       1       0       0       0
  3925 ;;      Temps:          0       1       0       0       0
  3926 ;;      Totals:         0       6       0       0       0
  3927 ;;Total ram usage:        6 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_isr
  3933 ;;		_sprintf
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937     0FC4                     ___lwmod:	
  3938                           ;psect for function ___lwmod
  3939                           
  3940     0FC4                     i1l1755:	
  3941                           ;incstack = 0
  3942                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3943                           
  3944     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3945     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3946     0FC6  0820               	movf	___lwmod@divisor,w
  3947     0FC7  0421               	iorwf	___lwmod@divisor+1,w
  3948     0FC8  1903               	btfsc	3,2
  3949     0FC9  2FCB               	goto	u145_21
  3950     0FCA  2FCC               	goto	u145_20
  3951     0FCB                     u145_21:
  3952     0FCB  2FFB               	goto	i1l1773
  3953     0FCC                     u145_20:
  3954     0FCC                     i1l1757:
  3955     0FCC  01A5               	clrf	___lwmod@counter
  3956     0FCD  0AA5               	incf	___lwmod@counter,f
  3957     0FCE  2FDA               	goto	i1l1763
  3958     0FCF                     i1l1759:
  3959     0FCF  3001               	movlw	1
  3960     0FD0                     u146_25:
  3961     0FD0  1003               	clrc
  3962     0FD1  0DA0               	rlf	___lwmod@divisor,f
  3963     0FD2  0DA1               	rlf	___lwmod@divisor+1,f
  3964     0FD3  3EFF               	addlw	-1
  3965     0FD4  1D03               	skipz
  3966     0FD5  2FD0               	goto	u146_25
  3967     0FD6                     i1l1761:
  3968     0FD6  3001               	movlw	1
  3969     0FD7  00A4               	movwf	??___lwmod
  3970     0FD8  0824               	movf	??___lwmod,w
  3971     0FD9  07A5               	addwf	___lwmod@counter,f
  3972     0FDA                     i1l1763:
  3973     0FDA  1FA1               	btfss	___lwmod@divisor+1,7
  3974     0FDB  2FDD               	goto	u147_21
  3975     0FDC  2FDE               	goto	u147_20
  3976     0FDD                     u147_21:
  3977     0FDD  2FCF               	goto	i1l1759
  3978     0FDE                     u147_20:
  3979     0FDE                     i1l1765:
  3980     0FDE  0821               	movf	___lwmod@divisor+1,w
  3981     0FDF  0223               	subwf	___lwmod@dividend+1,w
  3982     0FE0  1D03               	skipz
  3983     0FE1  2FE4               	goto	u148_25
  3984     0FE2  0820               	movf	___lwmod@divisor,w
  3985     0FE3  0222               	subwf	___lwmod@dividend,w
  3986     0FE4                     u148_25:
  3987     0FE4  1C03               	skipc
  3988     0FE5  2FE7               	goto	u148_21
  3989     0FE6  2FE8               	goto	u148_20
  3990     0FE7                     u148_21:
  3991     0FE7  2FEE               	goto	i1l1769
  3992     0FE8                     u148_20:
  3993     0FE8                     i1l1767:
  3994     0FE8  0820               	movf	___lwmod@divisor,w
  3995     0FE9  02A2               	subwf	___lwmod@dividend,f
  3996     0FEA  0821               	movf	___lwmod@divisor+1,w
  3997     0FEB  1C03               	skipc
  3998     0FEC  03A3               	decf	___lwmod@dividend+1,f
  3999     0FED  02A3               	subwf	___lwmod@dividend+1,f
  4000     0FEE                     i1l1769:
  4001     0FEE  3001               	movlw	1
  4002     0FEF                     u149_25:
  4003     0FEF  1003               	clrc
  4004     0FF0  0CA1               	rrf	___lwmod@divisor+1,f
  4005     0FF1  0CA0               	rrf	___lwmod@divisor,f
  4006     0FF2  3EFF               	addlw	-1
  4007     0FF3  1D03               	skipz
  4008     0FF4  2FEF               	goto	u149_25
  4009     0FF5                     i1l1771:
  4010     0FF5  3001               	movlw	1
  4011     0FF6  02A5               	subwf	___lwmod@counter,f
  4012     0FF7  1D03               	btfss	3,2
  4013     0FF8  2FFA               	goto	u150_21
  4014     0FF9  2FFB               	goto	u150_20
  4015     0FFA                     u150_21:
  4016     0FFA  2FDE               	goto	i1l1765
  4017     0FFB                     u150_20:
  4018     0FFB                     i1l1773:
  4019     0FFB  0823               	movf	___lwmod@dividend+1,w
  4020     0FFC  00A1               	movwf	?___lwmod+1
  4021     0FFD  0822               	movf	___lwmod@dividend,w
  4022     0FFE  00A0               	movwf	?___lwmod
  4023     0FFF                     i1l663:
  4024     0FFF  0008               	return
  4025     1000                     __end_of___lwmod:
  4026                           
  4027                           	psect	text19
  4028     0707                     __ptext19:	
  4029 ;; *************** function ___lwdiv *****************
  4030 ;; Defined at:
  4031 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  divisor         2    6[COMMON] unsigned int 
  4034 ;;  dividend        2    8[COMMON] unsigned int 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  quotient        2   11[COMMON] unsigned int 
  4037 ;;  counter         1   13[COMMON] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  2    6[COMMON] unsigned int 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4047 ;;      Params:         4       0       0       0       0
  4048 ;;      Locals:         3       0       0       0       0
  4049 ;;      Temps:          1       0       0       0       0
  4050 ;;      Totals:         8       0       0       0       0
  4051 ;;Total ram usage:        8 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_isr
  4057 ;;		_sprintf
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061     0707                     ___lwdiv:	
  4062                           ;psect for function ___lwdiv
  4063                           
  4064     0707                     i1l1729:	
  4065                           ;incstack = 0
  4066                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4067                           
  4068     0707  01FB               	clrf	___lwdiv@quotient
  4069     0708  01FC               	clrf	___lwdiv@quotient+1
  4070     0709                     i1l1731:
  4071     0709  0876               	movf	___lwdiv@divisor,w
  4072     070A  0477               	iorwf	___lwdiv@divisor+1,w
  4073     070B  1903               	btfsc	3,2
  4074     070C  2F0E               	goto	u138_21
  4075     070D  2F0F               	goto	u138_20
  4076     070E                     u138_21:
  4077     070E  2F46               	goto	i1l1751
  4078     070F                     u138_20:
  4079     070F                     i1l1733:
  4080     070F  01FD               	clrf	___lwdiv@counter
  4081     0710  0AFD               	incf	___lwdiv@counter,f
  4082     0711  2F1D               	goto	i1l1739
  4083     0712                     i1l1735:
  4084     0712  3001               	movlw	1
  4085     0713                     u139_25:
  4086     0713  1003               	clrc
  4087     0714  0DF6               	rlf	___lwdiv@divisor,f
  4088     0715  0DF7               	rlf	___lwdiv@divisor+1,f
  4089     0716  3EFF               	addlw	-1
  4090     0717  1D03               	skipz
  4091     0718  2F13               	goto	u139_25
  4092     0719                     i1l1737:
  4093     0719  3001               	movlw	1
  4094     071A  00FA               	movwf	??___lwdiv
  4095     071B  087A               	movf	??___lwdiv,w
  4096     071C  07FD               	addwf	___lwdiv@counter,f
  4097     071D                     i1l1739:
  4098     071D  1FF7               	btfss	___lwdiv@divisor+1,7
  4099     071E  2F20               	goto	u140_21
  4100     071F  2F21               	goto	u140_20
  4101     0720                     u140_21:
  4102     0720  2F12               	goto	i1l1735
  4103     0721                     u140_20:
  4104     0721                     i1l1741:
  4105     0721  3001               	movlw	1
  4106     0722                     u141_25:
  4107     0722  1003               	clrc
  4108     0723  0DFB               	rlf	___lwdiv@quotient,f
  4109     0724  0DFC               	rlf	___lwdiv@quotient+1,f
  4110     0725  3EFF               	addlw	-1
  4111     0726  1D03               	skipz
  4112     0727  2F22               	goto	u141_25
  4113     0728  0877               	movf	___lwdiv@divisor+1,w
  4114     0729  0279               	subwf	___lwdiv@dividend+1,w
  4115     072A  1D03               	skipz
  4116     072B  2F2E               	goto	u142_25
  4117     072C  0876               	movf	___lwdiv@divisor,w
  4118     072D  0278               	subwf	___lwdiv@dividend,w
  4119     072E                     u142_25:
  4120     072E  1C03               	skipc
  4121     072F  2F31               	goto	u142_21
  4122     0730  2F32               	goto	u142_20
  4123     0731                     u142_21:
  4124     0731  2F39               	goto	i1l1747
  4125     0732                     u142_20:
  4126     0732                     i1l1743:
  4127     0732  0876               	movf	___lwdiv@divisor,w
  4128     0733  02F8               	subwf	___lwdiv@dividend,f
  4129     0734  0877               	movf	___lwdiv@divisor+1,w
  4130     0735  1C03               	skipc
  4131     0736  03F9               	decf	___lwdiv@dividend+1,f
  4132     0737  02F9               	subwf	___lwdiv@dividend+1,f
  4133     0738                     i1l1745:
  4134     0738  147B               	bsf	___lwdiv@quotient,0
  4135     0739                     i1l1747:
  4136     0739  3001               	movlw	1
  4137     073A                     u143_25:
  4138     073A  1003               	clrc
  4139     073B  0CF7               	rrf	___lwdiv@divisor+1,f
  4140     073C  0CF6               	rrf	___lwdiv@divisor,f
  4141     073D  3EFF               	addlw	-1
  4142     073E  1D03               	skipz
  4143     073F  2F3A               	goto	u143_25
  4144     0740                     i1l1749:
  4145     0740  3001               	movlw	1
  4146     0741  02FD               	subwf	___lwdiv@counter,f
  4147     0742  1D03               	btfss	3,2
  4148     0743  2F45               	goto	u144_21
  4149     0744  2F46               	goto	u144_20
  4150     0745                     u144_21:
  4151     0745  2F21               	goto	i1l1741
  4152     0746                     u144_20:
  4153     0746                     i1l1751:
  4154     0746  087C               	movf	___lwdiv@quotient+1,w
  4155     0747  00F7               	movwf	?___lwdiv+1
  4156     0748  087B               	movf	___lwdiv@quotient,w
  4157     0749  00F6               	movwf	?___lwdiv
  4158     074A                     i1l653:
  4159     074A  0008               	return
  4160     074B                     __end_of___lwdiv:
  4161                           
  4162                           	psect	text20
  4163     0F93                     __ptext20:	
  4164 ;; *************** function _map *****************
  4165 ;; Defined at:
  4166 ;;		line 46 in file "main.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  value           2    4[BANK0 ] int 
  4169 ;;  inputmin        2    6[BANK0 ] int 
  4170 ;;  inputmax        2    8[BANK0 ] int 
  4171 ;;  outmin          2   10[BANK0 ] int 
  4172 ;;  outmax          2   12[BANK0 ] int 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      unsigned char 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0      10       0       0       0
  4185 ;;      Locals:         0       0       0       0       0
  4186 ;;      Temps:          2       0       0       0       0
  4187 ;;      Totals:         2      10       0       0       0
  4188 ;;Total ram usage:       12 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; Hardware stack levels required when called: 1
  4191 ;; This function calls:
  4192 ;;		___awdiv
  4193 ;;		___wmul
  4194 ;; This function is called by:
  4195 ;;		_isr
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199     0F93                     _map:	
  4200                           ;psect for function _map
  4201                           
  4202     0F93                     i1l1807:	
  4203                           ;incstack = 0
  4204                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4205                           
  4206                           
  4207                           ;main.c: 47:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  4208     0F93  1283               	bcf	3,5	;RP0=0, select bank0
  4209     0F94  1303               	bcf	3,6	;RP1=0, select bank0
  4210     0F95  0826               	movf	map@inputmin,w
  4211     0F96  0228               	subwf	map@inputmax,w
  4212     0F97  00F6               	movwf	___awdiv@divisor
  4213     0F98  0827               	movf	map@inputmin+1,w
  4214     0F99  1C03               	skipc
  4215     0F9A  0A27               	incf	map@inputmin+1,w
  4216     0F9B  0229               	subwf	map@inputmax+1,w
  4217     0F9C  00F7               	movwf	___awdiv@divisor+1
  4218     0F9D  0826               	movf	map@inputmin,w
  4219     0F9E  0224               	subwf	map@value,w
  4220     0F9F  00F0               	movwf	___wmul@multiplier
  4221     0FA0  0827               	movf	map@inputmin+1,w
  4222     0FA1  1C03               	skipc
  4223     0FA2  0A27               	incf	map@inputmin+1,w
  4224     0FA3  0225               	subwf	map@value+1,w
  4225     0FA4  00F1               	movwf	___wmul@multiplier+1
  4226     0FA5  082A               	movf	map@outmin,w
  4227     0FA6  022C               	subwf	map@outmax,w
  4228     0FA7  00F2               	movwf	___wmul@multiplicand
  4229     0FA8  082B               	movf	map@outmin+1,w
  4230     0FA9  1C03               	skipc
  4231     0FAA  0A2B               	incf	map@outmin+1,w
  4232     0FAB  022D               	subwf	map@outmax+1,w
  4233     0FAC  00F3               	movwf	___wmul@multiplicand+1
  4234     0FAD  120A  158A  276E  120A  158A  	fcall	___wmul
  4235     0FB2  0871               	movf	?___wmul+1,w
  4236     0FB3  00F9               	movwf	___awdiv@dividend+1
  4237     0FB4  0870               	movf	?___wmul,w
  4238     0FB5  00F8               	movwf	___awdiv@dividend
  4239     0FB6  120A  118A  25A3  120A  158A  	fcall	___awdiv
  4240     0FBB  0876               	movf	?___awdiv,w
  4241     0FBC  00FB               	movwf	??_map
  4242     0FBD  0877               	movf	?___awdiv+1,w
  4243     0FBE  00FC               	movwf	??_map+1
  4244     0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4245     0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4246     0FC1  082A               	movf	map@outmin,w
  4247     0FC2  077B               	addwf	??_map,w
  4248     0FC3                     i1l69:
  4249     0FC3  0008               	return
  4250     0FC4                     __end_of_map:
  4251                           
  4252                           	psect	text21
  4253     0F6E                     __ptext21:	
  4254 ;; *************** function ___wmul *****************
  4255 ;; Defined at:
  4256 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  multiplier      2    0[COMMON] unsigned int 
  4259 ;;  multiplicand    2    2[COMMON] unsigned int 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  product         2    4[COMMON] unsigned int 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  2    0[COMMON] unsigned int 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         4       0       0       0       0
  4272 ;;      Locals:         2       0       0       0       0
  4273 ;;      Temps:          0       0       0       0       0
  4274 ;;      Totals:         6       0       0       0       0
  4275 ;;Total ram usage:        6 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_map
  4281 ;;		_isr
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285     0F6E                     ___wmul:	
  4286                           ;psect for function ___wmul
  4287                           
  4288     0F6E                     i1l1671:	
  4289                           ;incstack = 0
  4290                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4291                           
  4292     0F6E  01F4               	clrf	___wmul@product
  4293     0F6F  01F5               	clrf	___wmul@product+1
  4294     0F70                     i1l1673:
  4295     0F70  1C70               	btfss	___wmul@multiplier,0
  4296     0F71  2F73               	goto	u124_21
  4297     0F72  2F74               	goto	u124_20
  4298     0F73                     u124_21:
  4299     0F73  2F7A               	goto	i1l381
  4300     0F74                     u124_20:
  4301     0F74                     i1l1675:
  4302     0F74  0872               	movf	___wmul@multiplicand,w
  4303     0F75  07F4               	addwf	___wmul@product,f
  4304     0F76  1803               	skipnc
  4305     0F77  0AF5               	incf	___wmul@product+1,f
  4306     0F78  0873               	movf	___wmul@multiplicand+1,w
  4307     0F79  07F5               	addwf	___wmul@product+1,f
  4308     0F7A                     i1l381:
  4309     0F7A  3001               	movlw	1
  4310     0F7B                     u125_25:
  4311     0F7B  1003               	clrc
  4312     0F7C  0DF2               	rlf	___wmul@multiplicand,f
  4313     0F7D  0DF3               	rlf	___wmul@multiplicand+1,f
  4314     0F7E  3EFF               	addlw	-1
  4315     0F7F  1D03               	skipz
  4316     0F80  2F7B               	goto	u125_25
  4317     0F81                     i1l1677:
  4318     0F81  3001               	movlw	1
  4319     0F82                     u126_25:
  4320     0F82  1003               	clrc
  4321     0F83  0CF1               	rrf	___wmul@multiplier+1,f
  4322     0F84  0CF0               	rrf	___wmul@multiplier,f
  4323     0F85  3EFF               	addlw	-1
  4324     0F86  1D03               	skipz
  4325     0F87  2F82               	goto	u126_25
  4326     0F88                     i1l1679:
  4327     0F88  0870               	movf	___wmul@multiplier,w
  4328     0F89  0471               	iorwf	___wmul@multiplier+1,w
  4329     0F8A  1D03               	btfss	3,2
  4330     0F8B  2F8D               	goto	u127_21
  4331     0F8C  2F8E               	goto	u127_20
  4332     0F8D                     u127_21:
  4333     0F8D  2F70               	goto	i1l1673
  4334     0F8E                     u127_20:
  4335     0F8E                     i1l1681:
  4336     0F8E  0875               	movf	___wmul@product+1,w
  4337     0F8F  00F1               	movwf	?___wmul+1
  4338     0F90  0874               	movf	___wmul@product,w
  4339     0F91  00F0               	movwf	?___wmul
  4340     0F92                     i1l383:
  4341     0F92  0008               	return
  4342     0F93                     __end_of___wmul:
  4343                           
  4344                           	psect	text22
  4345     05A3                     __ptext22:	
  4346 ;; *************** function ___awdiv *****************
  4347 ;; Defined at:
  4348 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  divisor         2    6[COMMON] int 
  4351 ;;  dividend        2    8[COMMON] int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  quotient        2    2[BANK0 ] int 
  4354 ;;  sign            1    1[BANK0 ] unsigned char 
  4355 ;;  counter         1    0[BANK0 ] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  2    6[COMMON] int 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4365 ;;      Params:         4       0       0       0       0
  4366 ;;      Locals:         0       4       0       0       0
  4367 ;;      Temps:          1       0       0       0       0
  4368 ;;      Totals:         5       4       0       0       0
  4369 ;;Total ram usage:        9 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_map
  4375 ;;		_isr
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379     05A3                     ___awdiv:	
  4380                           ;psect for function ___awdiv
  4381                           
  4382     05A3                     i1l1685:	
  4383                           ;incstack = 0
  4384                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4385                           
  4386     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  4387     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  4388     05A5  01A1               	clrf	___awdiv@sign
  4389     05A6                     i1l1687:
  4390     05A6  1FF7               	btfss	___awdiv@divisor+1,7
  4391     05A7  2DA9               	goto	u128_21
  4392     05A8  2DAA               	goto	u128_20
  4393     05A9                     u128_21:
  4394     05A9  2DB1               	goto	i1l1693
  4395     05AA                     u128_20:
  4396     05AA                     i1l1689:
  4397     05AA  09F6               	comf	___awdiv@divisor,f
  4398     05AB  09F7               	comf	___awdiv@divisor+1,f
  4399     05AC  0AF6               	incf	___awdiv@divisor,f
  4400     05AD  1903               	skipnz
  4401     05AE  0AF7               	incf	___awdiv@divisor+1,f
  4402     05AF                     i1l1691:
  4403     05AF  01A1               	clrf	___awdiv@sign
  4404     05B0  0AA1               	incf	___awdiv@sign,f
  4405     05B1                     i1l1693:
  4406     05B1  1FF9               	btfss	___awdiv@dividend+1,7
  4407     05B2  2DB4               	goto	u129_21
  4408     05B3  2DB5               	goto	u129_20
  4409     05B4                     u129_21:
  4410     05B4  2DBE               	goto	i1l1699
  4411     05B5                     u129_20:
  4412     05B5                     i1l1695:
  4413     05B5  09F8               	comf	___awdiv@dividend,f
  4414     05B6  09F9               	comf	___awdiv@dividend+1,f
  4415     05B7  0AF8               	incf	___awdiv@dividend,f
  4416     05B8  1903               	skipnz
  4417     05B9  0AF9               	incf	___awdiv@dividend+1,f
  4418     05BA                     i1l1697:
  4419     05BA  3001               	movlw	1
  4420     05BB  00FA               	movwf	??___awdiv
  4421     05BC  087A               	movf	??___awdiv,w
  4422     05BD  06A1               	xorwf	___awdiv@sign,f
  4423     05BE                     i1l1699:
  4424     05BE  01A2               	clrf	___awdiv@quotient
  4425     05BF  01A3               	clrf	___awdiv@quotient+1
  4426     05C0                     i1l1701:
  4427     05C0  0876               	movf	___awdiv@divisor,w
  4428     05C1  0477               	iorwf	___awdiv@divisor+1,w
  4429     05C2  1903               	btfsc	3,2
  4430     05C3  2DC5               	goto	u130_21
  4431     05C4  2DC6               	goto	u130_20
  4432     05C5                     u130_21:
  4433     05C5  2DFD               	goto	i1l1721
  4434     05C6                     u130_20:
  4435     05C6                     i1l1703:
  4436     05C6  01A0               	clrf	___awdiv@counter
  4437     05C7  0AA0               	incf	___awdiv@counter,f
  4438     05C8  2DD4               	goto	i1l1709
  4439     05C9                     i1l1705:
  4440     05C9  3001               	movlw	1
  4441     05CA                     u131_25:
  4442     05CA  1003               	clrc
  4443     05CB  0DF6               	rlf	___awdiv@divisor,f
  4444     05CC  0DF7               	rlf	___awdiv@divisor+1,f
  4445     05CD  3EFF               	addlw	-1
  4446     05CE  1D03               	skipz
  4447     05CF  2DCA               	goto	u131_25
  4448     05D0                     i1l1707:
  4449     05D0  3001               	movlw	1
  4450     05D1  00FA               	movwf	??___awdiv
  4451     05D2  087A               	movf	??___awdiv,w
  4452     05D3  07A0               	addwf	___awdiv@counter,f
  4453     05D4                     i1l1709:
  4454     05D4  1FF7               	btfss	___awdiv@divisor+1,7
  4455     05D5  2DD7               	goto	u132_21
  4456     05D6  2DD8               	goto	u132_20
  4457     05D7                     u132_21:
  4458     05D7  2DC9               	goto	i1l1705
  4459     05D8                     u132_20:
  4460     05D8                     i1l1711:
  4461     05D8  3001               	movlw	1
  4462     05D9                     u133_25:
  4463     05D9  1003               	clrc
  4464     05DA  0DA2               	rlf	___awdiv@quotient,f
  4465     05DB  0DA3               	rlf	___awdiv@quotient+1,f
  4466     05DC  3EFF               	addlw	-1
  4467     05DD  1D03               	skipz
  4468     05DE  2DD9               	goto	u133_25
  4469     05DF  0877               	movf	___awdiv@divisor+1,w
  4470     05E0  0279               	subwf	___awdiv@dividend+1,w
  4471     05E1  1D03               	skipz
  4472     05E2  2DE5               	goto	u134_25
  4473     05E3  0876               	movf	___awdiv@divisor,w
  4474     05E4  0278               	subwf	___awdiv@dividend,w
  4475     05E5                     u134_25:
  4476     05E5  1C03               	skipc
  4477     05E6  2DE8               	goto	u134_21
  4478     05E7  2DE9               	goto	u134_20
  4479     05E8                     u134_21:
  4480     05E8  2DF0               	goto	i1l1717
  4481     05E9                     u134_20:
  4482     05E9                     i1l1713:
  4483     05E9  0876               	movf	___awdiv@divisor,w
  4484     05EA  02F8               	subwf	___awdiv@dividend,f
  4485     05EB  0877               	movf	___awdiv@divisor+1,w
  4486     05EC  1C03               	skipc
  4487     05ED  03F9               	decf	___awdiv@dividend+1,f
  4488     05EE  02F9               	subwf	___awdiv@dividend+1,f
  4489     05EF                     i1l1715:
  4490     05EF  1422               	bsf	___awdiv@quotient,0
  4491     05F0                     i1l1717:
  4492     05F0  3001               	movlw	1
  4493     05F1                     u135_25:
  4494     05F1  1003               	clrc
  4495     05F2  0CF7               	rrf	___awdiv@divisor+1,f
  4496     05F3  0CF6               	rrf	___awdiv@divisor,f
  4497     05F4  3EFF               	addlw	-1
  4498     05F5  1D03               	skipz
  4499     05F6  2DF1               	goto	u135_25
  4500     05F7                     i1l1719:
  4501     05F7  3001               	movlw	1
  4502     05F8  02A0               	subwf	___awdiv@counter,f
  4503     05F9  1D03               	btfss	3,2
  4504     05FA  2DFC               	goto	u136_21
  4505     05FB  2DFD               	goto	u136_20
  4506     05FC                     u136_21:
  4507     05FC  2DD8               	goto	i1l1711
  4508     05FD                     u136_20:
  4509     05FD                     i1l1721:
  4510     05FD  0821               	movf	___awdiv@sign,w
  4511     05FE  1903               	btfsc	3,2
  4512     05FF  2E01               	goto	u137_21
  4513     0600  2E02               	goto	u137_20
  4514     0601                     u137_21:
  4515     0601  2E07               	goto	i1l1725
  4516     0602                     u137_20:
  4517     0602                     i1l1723:
  4518     0602  09A2               	comf	___awdiv@quotient,f
  4519     0603  09A3               	comf	___awdiv@quotient+1,f
  4520     0604  0AA2               	incf	___awdiv@quotient,f
  4521     0605  1903               	skipnz
  4522     0606  0AA3               	incf	___awdiv@quotient+1,f
  4523     0607                     i1l1725:
  4524     0607  0823               	movf	___awdiv@quotient+1,w
  4525     0608  00F7               	movwf	?___awdiv+1
  4526     0609  0822               	movf	___awdiv@quotient,w
  4527     060A  00F6               	movwf	?___awdiv
  4528     060B                     i1l534:
  4529     060B  0008               	return
  4530     060C                     __end_of___awdiv:
  4531                           
  4532                           	psect	text23
  4533     060C                     __ptext23:	
  4534 ;; *************** function ___awmod *****************
  4535 ;; Defined at:
  4536 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  divisor         2    4[BANK0 ] int 
  4539 ;;  dividend        2    6[BANK0 ] int 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  sign            1   13[COMMON] unsigned char 
  4542 ;;  counter         1   12[COMMON] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  2    4[BANK0 ] int 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       4       0       0       0
  4553 ;;      Locals:         2       0       0       0       0
  4554 ;;      Temps:          1       0       0       0       0
  4555 ;;      Totals:         3       4       0       0       0
  4556 ;;Total ram usage:        7 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_isr
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565     060C                     ___awmod:	
  4566                           ;psect for function ___awmod
  4567                           
  4568     060C                     i1l2097:	
  4569                           ;incstack = 0
  4570                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4571                           
  4572     060C  01FD               	clrf	___awmod@sign
  4573     060D                     i1l2099:
  4574     060D  1283               	bcf	3,5	;RP0=0, select bank0
  4575     060E  1303               	bcf	3,6	;RP1=0, select bank0
  4576     060F  1FA7               	btfss	___awmod@dividend+1,7
  4577     0610  2E12               	goto	u198_21
  4578     0611  2E13               	goto	u198_20
  4579     0612                     u198_21:
  4580     0612  2E1A               	goto	i1l2105
  4581     0613                     u198_20:
  4582     0613                     i1l2101:
  4583     0613  09A6               	comf	___awmod@dividend,f
  4584     0614  09A7               	comf	___awmod@dividend+1,f
  4585     0615  0AA6               	incf	___awmod@dividend,f
  4586     0616  1903               	skipnz
  4587     0617  0AA7               	incf	___awmod@dividend+1,f
  4588     0618                     i1l2103:
  4589     0618  01FD               	clrf	___awmod@sign
  4590     0619  0AFD               	incf	___awmod@sign,f
  4591     061A                     i1l2105:
  4592     061A  1FA5               	btfss	___awmod@divisor+1,7
  4593     061B  2E1D               	goto	u199_21
  4594     061C  2E1E               	goto	u199_20
  4595     061D                     u199_21:
  4596     061D  2E23               	goto	i1l2109
  4597     061E                     u199_20:
  4598     061E                     i1l2107:
  4599     061E  09A4               	comf	___awmod@divisor,f
  4600     061F  09A5               	comf	___awmod@divisor+1,f
  4601     0620  0AA4               	incf	___awmod@divisor,f
  4602     0621  1903               	skipnz
  4603     0622  0AA5               	incf	___awmod@divisor+1,f
  4604     0623                     i1l2109:
  4605     0623  0824               	movf	___awmod@divisor,w
  4606     0624  0425               	iorwf	___awmod@divisor+1,w
  4607     0625  1903               	btfsc	3,2
  4608     0626  2E28               	goto	u200_21
  4609     0627  2E29               	goto	u200_20
  4610     0628                     u200_21:
  4611     0628  2E58               	goto	i1l2127
  4612     0629                     u200_20:
  4613     0629                     i1l2111:
  4614     0629  01FC               	clrf	___awmod@counter
  4615     062A  0AFC               	incf	___awmod@counter,f
  4616     062B  2E37               	goto	i1l2117
  4617     062C                     i1l2113:
  4618     062C  3001               	movlw	1
  4619     062D                     u201_25:
  4620     062D  1003               	clrc
  4621     062E  0DA4               	rlf	___awmod@divisor,f
  4622     062F  0DA5               	rlf	___awmod@divisor+1,f
  4623     0630  3EFF               	addlw	-1
  4624     0631  1D03               	skipz
  4625     0632  2E2D               	goto	u201_25
  4626     0633                     i1l2115:
  4627     0633  3001               	movlw	1
  4628     0634  00FB               	movwf	??___awmod
  4629     0635  087B               	movf	??___awmod,w
  4630     0636  07FC               	addwf	___awmod@counter,f
  4631     0637                     i1l2117:
  4632     0637  1FA5               	btfss	___awmod@divisor+1,7
  4633     0638  2E3A               	goto	u202_21
  4634     0639  2E3B               	goto	u202_20
  4635     063A                     u202_21:
  4636     063A  2E2C               	goto	i1l2113
  4637     063B                     u202_20:
  4638     063B                     i1l2119:
  4639     063B  0825               	movf	___awmod@divisor+1,w
  4640     063C  0227               	subwf	___awmod@dividend+1,w
  4641     063D  1D03               	skipz
  4642     063E  2E41               	goto	u203_25
  4643     063F  0824               	movf	___awmod@divisor,w
  4644     0640  0226               	subwf	___awmod@dividend,w
  4645     0641                     u203_25:
  4646     0641  1C03               	skipc
  4647     0642  2E44               	goto	u203_21
  4648     0643  2E45               	goto	u203_20
  4649     0644                     u203_21:
  4650     0644  2E4B               	goto	i1l2123
  4651     0645                     u203_20:
  4652     0645                     i1l2121:
  4653     0645  0824               	movf	___awmod@divisor,w
  4654     0646  02A6               	subwf	___awmod@dividend,f
  4655     0647  0825               	movf	___awmod@divisor+1,w
  4656     0648  1C03               	skipc
  4657     0649  03A7               	decf	___awmod@dividend+1,f
  4658     064A  02A7               	subwf	___awmod@dividend+1,f
  4659     064B                     i1l2123:
  4660     064B  3001               	movlw	1
  4661     064C                     u204_25:
  4662     064C  1003               	clrc
  4663     064D  0CA5               	rrf	___awmod@divisor+1,f
  4664     064E  0CA4               	rrf	___awmod@divisor,f
  4665     064F  3EFF               	addlw	-1
  4666     0650  1D03               	skipz
  4667     0651  2E4C               	goto	u204_25
  4668     0652                     i1l2125:
  4669     0652  3001               	movlw	1
  4670     0653  02FC               	subwf	___awmod@counter,f
  4671     0654  1D03               	btfss	3,2
  4672     0655  2E57               	goto	u205_21
  4673     0656  2E58               	goto	u205_20
  4674     0657                     u205_21:
  4675     0657  2E3B               	goto	i1l2119
  4676     0658                     u205_20:
  4677     0658                     i1l2127:
  4678     0658  087D               	movf	___awmod@sign,w
  4679     0659  1903               	btfsc	3,2
  4680     065A  2E5C               	goto	u206_21
  4681     065B  2E5D               	goto	u206_20
  4682     065C                     u206_21:
  4683     065C  2E62               	goto	i1l2131
  4684     065D                     u206_20:
  4685     065D                     i1l2129:
  4686     065D  09A6               	comf	___awmod@dividend,f
  4687     065E  09A7               	comf	___awmod@dividend+1,f
  4688     065F  0AA6               	incf	___awmod@dividend,f
  4689     0660  1903               	skipnz
  4690     0661  0AA7               	incf	___awmod@dividend+1,f
  4691     0662                     i1l2131:
  4692     0662  0827               	movf	___awmod@dividend+1,w
  4693     0663  00A5               	movwf	?___awmod+1
  4694     0664  0826               	movf	___awmod@dividend,w
  4695     0665  00A4               	movwf	?___awmod
  4696     0666                     i1l547:
  4697     0666  0008               	return
  4698     0667                     __end_of___awmod:
  4699                           
  4700                           	psect	text24
  4701     02BD                     __ptext24:	
  4702 ;; *************** function _ADC_read *****************
  4703 ;; Defined at:
  4704 ;;		line 73 in file "ADC.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  can             1    wreg     unsigned char 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  can             1    4[COMMON] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2    0[COMMON] unsigned int 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4718 ;;      Params:         2       0       0       0       0
  4719 ;;      Locals:         1       0       0       0       0
  4720 ;;      Temps:          2       0       0       0       0
  4721 ;;      Totals:         5       0       0       0       0
  4722 ;;Total ram usage:        5 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_isr
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731     02BD                     _ADC_read:	
  4732                           ;psect for function _ADC_read
  4733                           
  4734                           
  4735                           ;incstack = 0
  4736                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  4737                           ;ADC_read@can stored from wreg
  4738     02BD  00F4               	movwf	ADC_read@can
  4739     02BE                     i1l1947:
  4740                           
  4741                           ;ADC.c: 74:     if (can == 0){
  4742     02BE  0874               	movf	ADC_read@can,w
  4743     02BF  1D03               	btfss	3,2
  4744     02C0  2AC2               	goto	u177_21
  4745     02C1  2AC3               	goto	u177_20
  4746     02C2                     u177_21:
  4747     02C2  2ACF               	goto	i1l1953
  4748     02C3                     u177_20:
  4749     02C3                     i1l1949:
  4750                           
  4751                           ;ADC.c: 75:         ADCON0bits.CHS = 0b0000;
  4752     02C3  30C3               	movlw	-61
  4753     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  4754     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  4755     02C6  059F               	andwf	31,f	;volatile
  4756     02C7                     i1l1951:
  4757                           
  4758                           ;ADC.c: 76:         valor = ADRESH;
  4759     02C7  081E               	movf	30,w	;volatile
  4760     02C8  00F2               	movwf	??_ADC_read
  4761     02C9  01F3               	clrf	??_ADC_read+1
  4762     02CA  0872               	movf	??_ADC_read,w
  4763     02CB  00D0               	movwf	_valor
  4764     02CC  0873               	movf	??_ADC_read+1,w
  4765     02CD  00D1               	movwf	_valor+1
  4766                           
  4767                           ;ADC.c: 77:     }
  4768     02CE  2B77               	goto	i1l2031
  4769     02CF                     i1l1953:
  4770     02CF  0374               	decf	ADC_read@can,w
  4771     02D0  1D03               	btfss	3,2
  4772     02D1  2AD3               	goto	u178_21
  4773     02D2  2AD4               	goto	u178_20
  4774     02D3                     u178_21:
  4775     02D3  2ADB               	goto	i1l1959
  4776     02D4                     u178_20:
  4777     02D4                     i1l1955:
  4778                           
  4779                           ;ADC.c: 79:         ADCON0bits.CHS = 0b0001;
  4780     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4781     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4782     02D6  081F               	movf	31,w	;volatile
  4783     02D7  39C3               	andlw	-61
  4784     02D8  3804               	iorlw	4
  4785     02D9  009F               	movwf	31	;volatile
  4786     02DA  2AC7               	goto	i1l1951
  4787     02DB                     i1l1959:
  4788     02DB  3002               	movlw	2
  4789     02DC  0674               	xorwf	ADC_read@can,w
  4790     02DD  1D03               	btfss	3,2
  4791     02DE  2AE0               	goto	u179_21
  4792     02DF  2AE1               	goto	u179_20
  4793     02E0                     u179_21:
  4794     02E0  2AE8               	goto	i1l1965
  4795     02E1                     u179_20:
  4796     02E1                     i1l1961:
  4797                           
  4798                           ;ADC.c: 83:         ADCON0bits.CHS = 0b0010;
  4799     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  4800     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  4801     02E3  081F               	movf	31,w	;volatile
  4802     02E4  39C3               	andlw	-61
  4803     02E5  3808               	iorlw	8
  4804     02E6  009F               	movwf	31	;volatile
  4805     02E7  2AC7               	goto	i1l1951
  4806     02E8                     i1l1965:
  4807     02E8  3003               	movlw	3
  4808     02E9  0674               	xorwf	ADC_read@can,w
  4809     02EA  1D03               	btfss	3,2
  4810     02EB  2AED               	goto	u180_21
  4811     02EC  2AEE               	goto	u180_20
  4812     02ED                     u180_21:
  4813     02ED  2AF5               	goto	i1l1971
  4814     02EE                     u180_20:
  4815     02EE                     i1l1967:
  4816                           
  4817                           ;ADC.c: 87:         ADCON0bits.CHS = 0b0011;
  4818     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  4819     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  4820     02F0  081F               	movf	31,w	;volatile
  4821     02F1  39C3               	andlw	-61
  4822     02F2  380C               	iorlw	12
  4823     02F3  009F               	movwf	31	;volatile
  4824     02F4  2AC7               	goto	i1l1951
  4825     02F5                     i1l1971:
  4826     02F5  3004               	movlw	4
  4827     02F6  0674               	xorwf	ADC_read@can,w
  4828     02F7  1D03               	btfss	3,2
  4829     02F8  2AFA               	goto	u181_21
  4830     02F9  2AFB               	goto	u181_20
  4831     02FA                     u181_21:
  4832     02FA  2B02               	goto	i1l1977
  4833     02FB                     u181_20:
  4834     02FB                     i1l1973:
  4835                           
  4836                           ;ADC.c: 91:         ADCON0bits.CHS = 0b0100;
  4837     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  4838     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  4839     02FD  081F               	movf	31,w	;volatile
  4840     02FE  39C3               	andlw	-61
  4841     02FF  3810               	iorlw	16
  4842     0300  009F               	movwf	31	;volatile
  4843     0301  2AC7               	goto	i1l1951
  4844     0302                     i1l1977:
  4845     0302  3005               	movlw	5
  4846     0303  0674               	xorwf	ADC_read@can,w
  4847     0304  1D03               	btfss	3,2
  4848     0305  2B07               	goto	u182_21
  4849     0306  2B08               	goto	u182_20
  4850     0307                     u182_21:
  4851     0307  2B0F               	goto	i1l1983
  4852     0308                     u182_20:
  4853     0308                     i1l1979:
  4854                           
  4855                           ;ADC.c: 95:         ADCON0bits.CHS = 0b0101;
  4856     0308  1283               	bcf	3,5	;RP0=0, select bank0
  4857     0309  1303               	bcf	3,6	;RP1=0, select bank0
  4858     030A  081F               	movf	31,w	;volatile
  4859     030B  39C3               	andlw	-61
  4860     030C  3814               	iorlw	20
  4861     030D  009F               	movwf	31	;volatile
  4862     030E  2AC7               	goto	i1l1951
  4863     030F                     i1l1983:
  4864     030F  3006               	movlw	6
  4865     0310  0674               	xorwf	ADC_read@can,w
  4866     0311  1D03               	btfss	3,2
  4867     0312  2B14               	goto	u183_21
  4868     0313  2B15               	goto	u183_20
  4869     0314                     u183_21:
  4870     0314  2B1C               	goto	i1l1989
  4871     0315                     u183_20:
  4872     0315                     i1l1985:
  4873                           
  4874                           ;ADC.c: 99:         ADCON0bits.CHS = 0b0110;
  4875     0315  1283               	bcf	3,5	;RP0=0, select bank0
  4876     0316  1303               	bcf	3,6	;RP1=0, select bank0
  4877     0317  081F               	movf	31,w	;volatile
  4878     0318  39C3               	andlw	-61
  4879     0319  3818               	iorlw	24
  4880     031A  009F               	movwf	31	;volatile
  4881     031B  2AC7               	goto	i1l1951
  4882     031C                     i1l1989:
  4883     031C  3007               	movlw	7
  4884     031D  0674               	xorwf	ADC_read@can,w
  4885     031E  1D03               	btfss	3,2
  4886     031F  2B21               	goto	u184_21
  4887     0320  2B22               	goto	u184_20
  4888     0321                     u184_21:
  4889     0321  2B29               	goto	i1l1995
  4890     0322                     u184_20:
  4891     0322                     i1l1991:
  4892                           
  4893                           ;ADC.c: 103:         ADCON0bits.CHS = 0b0111;
  4894     0322  1283               	bcf	3,5	;RP0=0, select bank0
  4895     0323  1303               	bcf	3,6	;RP1=0, select bank0
  4896     0324  081F               	movf	31,w	;volatile
  4897     0325  39C3               	andlw	-61
  4898     0326  381C               	iorlw	28
  4899     0327  009F               	movwf	31	;volatile
  4900     0328  2AC7               	goto	i1l1951
  4901     0329                     i1l1995:
  4902     0329  3008               	movlw	8
  4903     032A  0674               	xorwf	ADC_read@can,w
  4904     032B  1D03               	btfss	3,2
  4905     032C  2B2E               	goto	u185_21
  4906     032D  2B2F               	goto	u185_20
  4907     032E                     u185_21:
  4908     032E  2B36               	goto	i1l2001
  4909     032F                     u185_20:
  4910     032F                     i1l1997:
  4911                           
  4912                           ;ADC.c: 107:         ADCON0bits.CHS = 0b1000;
  4913     032F  1283               	bcf	3,5	;RP0=0, select bank0
  4914     0330  1303               	bcf	3,6	;RP1=0, select bank0
  4915     0331  081F               	movf	31,w	;volatile
  4916     0332  39C3               	andlw	-61
  4917     0333  3820               	iorlw	32
  4918     0334  009F               	movwf	31	;volatile
  4919     0335  2AC7               	goto	i1l1951
  4920     0336                     i1l2001:
  4921     0336  3009               	movlw	9
  4922     0337  0674               	xorwf	ADC_read@can,w
  4923     0338  1D03               	btfss	3,2
  4924     0339  2B3B               	goto	u186_21
  4925     033A  2B3C               	goto	u186_20
  4926     033B                     u186_21:
  4927     033B  2B43               	goto	i1l2007
  4928     033C                     u186_20:
  4929     033C                     i1l2003:
  4930                           
  4931                           ;ADC.c: 111:         ADCON0bits.CHS = 0b1001;
  4932     033C  1283               	bcf	3,5	;RP0=0, select bank0
  4933     033D  1303               	bcf	3,6	;RP1=0, select bank0
  4934     033E  081F               	movf	31,w	;volatile
  4935     033F  39C3               	andlw	-61
  4936     0340  3824               	iorlw	36
  4937     0341  009F               	movwf	31	;volatile
  4938     0342  2AC7               	goto	i1l1951
  4939     0343                     i1l2007:
  4940     0343  300A               	movlw	10
  4941     0344  0674               	xorwf	ADC_read@can,w
  4942     0345  1D03               	btfss	3,2
  4943     0346  2B48               	goto	u187_21
  4944     0347  2B49               	goto	u187_20
  4945     0348                     u187_21:
  4946     0348  2B50               	goto	i1l2013
  4947     0349                     u187_20:
  4948     0349                     i1l2009:
  4949                           
  4950                           ;ADC.c: 115:         ADCON0bits.CHS = 0b1010;
  4951     0349  1283               	bcf	3,5	;RP0=0, select bank0
  4952     034A  1303               	bcf	3,6	;RP1=0, select bank0
  4953     034B  081F               	movf	31,w	;volatile
  4954     034C  39C3               	andlw	-61
  4955     034D  3828               	iorlw	40
  4956     034E  009F               	movwf	31	;volatile
  4957     034F  2AC7               	goto	i1l1951
  4958     0350                     i1l2013:
  4959     0350  300B               	movlw	11
  4960     0351  0674               	xorwf	ADC_read@can,w
  4961     0352  1D03               	btfss	3,2
  4962     0353  2B55               	goto	u188_21
  4963     0354  2B56               	goto	u188_20
  4964     0355                     u188_21:
  4965     0355  2B5D               	goto	i1l2019
  4966     0356                     u188_20:
  4967     0356                     i1l2015:
  4968                           
  4969                           ;ADC.c: 119:         ADCON0bits.CHS = 0b1011;
  4970     0356  1283               	bcf	3,5	;RP0=0, select bank0
  4971     0357  1303               	bcf	3,6	;RP1=0, select bank0
  4972     0358  081F               	movf	31,w	;volatile
  4973     0359  39C3               	andlw	-61
  4974     035A  382C               	iorlw	44
  4975     035B  009F               	movwf	31	;volatile
  4976     035C  2AC7               	goto	i1l1951
  4977     035D                     i1l2019:
  4978     035D  300C               	movlw	12
  4979     035E  0674               	xorwf	ADC_read@can,w
  4980     035F  1D03               	btfss	3,2
  4981     0360  2B62               	goto	u189_21
  4982     0361  2B63               	goto	u189_20
  4983     0362                     u189_21:
  4984     0362  2B6A               	goto	i1l2025
  4985     0363                     u189_20:
  4986     0363                     i1l2021:
  4987                           
  4988                           ;ADC.c: 123:         ADCON0bits.CHS = 0b1100;
  4989     0363  1283               	bcf	3,5	;RP0=0, select bank0
  4990     0364  1303               	bcf	3,6	;RP1=0, select bank0
  4991     0365  081F               	movf	31,w	;volatile
  4992     0366  39C3               	andlw	-61
  4993     0367  3830               	iorlw	48
  4994     0368  009F               	movwf	31	;volatile
  4995     0369  2AC7               	goto	i1l1951
  4996     036A                     i1l2025:
  4997     036A  300D               	movlw	13
  4998     036B  0674               	xorwf	ADC_read@can,w
  4999     036C  1D03               	btfss	3,2
  5000     036D  2B6F               	goto	u190_21
  5001     036E  2B70               	goto	u190_20
  5002     036F                     u190_21:
  5003     036F  2B77               	goto	i1l261
  5004     0370                     u190_20:
  5005     0370                     i1l2027:
  5006                           
  5007                           ;ADC.c: 127:         ADCON0bits.CHS = 0b1101;
  5008     0370  1283               	bcf	3,5	;RP0=0, select bank0
  5009     0371  1303               	bcf	3,6	;RP1=0, select bank0
  5010     0372  081F               	movf	31,w	;volatile
  5011     0373  39C3               	andlw	-61
  5012     0374  3834               	iorlw	52
  5013     0375  009F               	movwf	31	;volatile
  5014     0376  2AC7               	goto	i1l1951
  5015     0377                     i1l261:
  5016     0377                     i1l2031:
  5017                           
  5018                           ;ADC.c: 130:     return valor;
  5019     0377  1283               	bcf	3,5	;RP0=0, select bank0
  5020     0378  1303               	bcf	3,6	;RP1=0, select bank0
  5021     0379  0851               	movf	_valor+1,w
  5022     037A  00F1               	movwf	?_ADC_read+1
  5023     037B  0850               	movf	_valor,w
  5024     037C  00F0               	movwf	?_ADC_read
  5025     037D                     i1l267:
  5026     037D  0008               	return
  5027     037E                     __end_of_ADC_read:
  5028     007E                     btemp	set	126	;btemp
  5029     007E                     wtemp0	set	126
  5030                           
  5031                           	psect	idloc
  5032                           
  5033                           ;Config register IDLOC0 @ 0x2000
  5034                           ;	unspecified, using default values
  5035     2000                     	org	8192
  5036     2000  3FFF               	dw	16383
  5037                           
  5038                           ;Config register IDLOC1 @ 0x2001
  5039                           ;	unspecified, using default values
  5040     2001                     	org	8193
  5041     2001  3FFF               	dw	16383
  5042                           
  5043                           ;Config register IDLOC2 @ 0x2002
  5044                           ;	unspecified, using default values
  5045     2002                     	org	8194
  5046     2002  3FFF               	dw	16383
  5047                           
  5048                           ;Config register IDLOC3 @ 0x2003
  5049                           ;	unspecified, using default values
  5050     2003                     	org	8195
  5051     2003  3FFF               	dw	16383
  5052                           
  5053                           	psect	config
  5054                           
  5055                           ;Config register CONFIG1 @ 0x2007
  5056                           ;	Oscillator Selection bits
  5057                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5058                           ;	Watchdog Timer Enable bit
  5059                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5060                           ;	Power-up Timer Enable bit
  5061                           ;	PWRTE = OFF, PWRT disabled
  5062                           ;	RE3/MCLR pin function select bit
  5063                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5064                           ;	Code Protection bit
  5065                           ;	CP = OFF, Program memory code protection is disabled
  5066                           ;	Data Code Protection bit
  5067                           ;	CPD = OFF, Data memory code protection is disabled
  5068                           ;	Brown Out Reset Selection bits
  5069                           ;	BOREN = OFF, BOR disabled
  5070                           ;	Internal External Switchover bit
  5071                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5072                           ;	Fail-Safe Clock Monitor Enabled bit
  5073                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5074                           ;	Low Voltage Programming Enable bit
  5075                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5076                           ;	In-Circuit Debugger Mode bit
  5077                           ;	DEBUG = 0x1, unprogramme  5078     2007                     	org	8199
  5079     2007  20D4               	dw	8404
  5080                           
  5081                           ;Config register CONFIG2 @ 0x2008
  5082                           ;	Brown-out Reset Selection bit
  5083                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5084                           ;	Flash Program Memory Self Write Enable bits
  5085                           ;	WRT = OFF, Write protection off
  5086     2008                     	org	8200
  5087     2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    10
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      51
    BANK1            80     11      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awmod
    _isr->___lwdiv
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _map->___awdiv
    ___awdiv->___wmul
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_ADC_config
    _main->_ADC_setup
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Port
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_sprintf
    _sprintf->___lwmod
    _map->___awdiv
    ___awmod->___awdiv

Critical Paths under _main in BANK1

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2641
                         _ADC_config
                          _ADC_setup
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     674
                                              4 BANK1      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              0 BANK1      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1225
                                              3 BANK1      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     434
                                              3 BANK1      2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              0 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           1     1      0     308
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0    9829
                                             23 BANK0      6     6      0
                           _ADC_read
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                                _map
                            _sprintf
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   7     5      2     320
                                              5 COMMON     7     5      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     6     5      1     702
                                              4 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             25    18      7    1928
                                              6 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     615
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _map                                                 12     2     10    2826
                                             11 COMMON     2     2      0
                                              4 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     600
                                             11 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _ADC_read                                             5     3      2     308
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_setup
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _isr (ROOT)
   _ADC_read
   ___awdiv
     ___wmul (ARG)
   ___awmod
     ___awdiv (ARG)
     ___wmul (ARG)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
     ___wmul (ARG)
   ___wmul
   _map
     ___awdiv
     ___wmul
   _sprintf
     ___lwdiv
     ___lwmod
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      B      1F       7       38.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 08:31:37 2023

                         pc 0002                 map@inputmax 0028                 map@inputmin 0026  
                        l89 0EF1                          l99 0F15                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0072                         l101 0F16  
                       l111 0F2A                         l103 0F1C                         l120 0EC1  
                       l105 0F1D                         l114 0F2B                         l130 0414  
                       l107 0F23                         l109 0F24                         l117 0F4B  
                       l133 05A2                         l206 0ED9                         l126 0414  
                       l142 06BA                         l136 07CB                         l235 04A2  
                       l237 04A5                         _map 0F93                         _isr 002A  
                       fsr0 0004                         indf 0000                ___awmod@sign 007D  
                      l2401 055D                        l2403 0563                        l2411 0396  
                      l2421 03BB                        l2413 039C                        l2405 0381  
                      l2351 0F0F                        l2431 03E0                        l2423 03C1  
                      l2407 0386                        l2415 03A5                        l2353 0F13  
                      l2361 0F2F                        l2441 0405                        l2433 03E6  
                      l2417 03AB                        l2425 03CA                        l2409 0393  
                      l2355 0F1A                        l2363 0F32                        l2371 0EB5  
                      l2443 040B                        l2427 03D0                        l2435 03EF  
                      l2419 03B8                        l2451 0698                        l1811 0EDA  
                      l2357 0F21                        l2365 0F3A                        l2437 03F5  
                      l2429 03DD                        l2381 07AC                        l2373 0790  
                      l2445 0667                        l1821 0EEE                        l1813 0EE8  
                      l2461 06D1                        l2453 06BB                        l1831 0418  
                      l2359 0F28                        l2367 0F3D                        l2439 0402  
                      l2391 07C8                        l2383 07B3                        l2375 0796  
                      l2447 066C                        l1823 0EEF                        l1815 0EE9  
                      l2471 06F8                        l2463 06D6                        l2455 06C0  
                      l1841 0430                        l1833 041D                        l2369 0F48  
                      l2393 0533                        l2385 07B6                        l2377 0799  
                      l2449 0690                        l1825 0EF0                        l1817 0EEA  
                      l2465 06E0                        l2457 06C5                        l1851 0448  
                      l1843 0434                        l1835 0421                        l1827 0EC2  
                      l2395 053B                        l2387 07BE                        l2379 07A9  
                      l1819 0EED                        l2467 06EB                        l2459 06CB  
                      l1861 0462                        l1853 044E                        l1845 043A  
                      l1837 0426                        l1829 0ED2                        l2397 0541  
                      l2389 07C1                        l2469 06EE                        l1871 047A  
                      l1863 0466                        l1855 0452                        l1847 043E  
                      l1839 042A                        l2399 054C                        l1881 0494  
                      l1873 0480                        l1865 046C                        l1857 0458  
                      l1849 0444                        l1883 0498                        l1875 0484  
                      l1867 0470                        l1859 045C                        l1885 049E  
                      l1877 048A                        l1869 0476                        ?_map 0024  
                      l1879 048E                        ?_isr 0070                        STR_1 0827  
                      STR_2 0823                        STR_3 081A                        STR_4 081A  
                      u2300 0F1A                        u2301 0F19                        u2310 0F21  
                      u2311 0F20                        u1600 046C                        u1520 041D  
                      u2320 0F28                        u2400 03F5                        u1601 046B  
                      u1521 041C                        u2321 0F27                        u2401 03F4  
                      u1610 0476                        u1530 0426                        u1611 0475  
                      u1531 0425                        u1620 0480                        u1540 0430  
                      u2340 0386                        u2420 0678                        u1621 047F  
                      u1541 042F                        u2341 0385                        u1630 048A  
                      u1550 043A                        u2430 06A2                        u1631 0489  
                      u1551 0439                        u2415 03FB                        u2335 079E  
                      u1640 0494                        u1560 0444                        u2360 03AB  
                      u2440 06BA                        u1641 0493                        u1561 0443  
                      u2361 03AA                        u2441 06B9                        u1650 049E  
                      u1570 044E                        u2290 0F13                        u1651 049D  
                      u1571 044D                        u2291 0F12                        u2355 038C  
                      u1580 0458                        u2380 03D0                        u1581 0457  
                      u2381 03CF                        u1590 0462                        u1591 0461  
                      u2375 03B1                        u2537 07B0                        u2395 03D6  
                      u2547 07C5                        u2557 0547                        u2567 0558  
                      u2577 0569                        u2587 0F43                        u2597 0ED6  
                      i1l69 0FC3                        i1l86 01D6                        i1l99 0F55  
         ?_Lcd_Write_String 00B8                        _main 06BB                        _vol1 0052  
                      _vol2 004A                        btemp 007E                        start 0012  
        ??_Lcd_Write_String 00BA            __end_of_ADC_read 037E             __end_of_Lcd_Cmd 0F4C  
                     ??_map 007B                       ??_isr 0037                       ?_main 0070  
           __end_of___awdiv 060C             __end_of___awmod 0667             ___awdiv@divisor 0076  
           __end_of___lwdiv 074B                       i1l101 0F58                       i1l111 0F6C  
                     i1l103 0F5E                       i1l105 0F5F                       i1l114 0F6D  
                     i1l130 0532                       i1l107 0F65                       i1l109 0F66  
                     i1l117 0F0B                       i1l126 0532                       i1l142 078C  
                     i1l136 07FE                       i1l261 0377             __end_of___lwmod 1000  
                     i1l267 037D                       i1l381 0F7A                       i1l534 060B  
                     i1l383 0F92                       i1l377 02BC                       i1l547 0666  
                     i1l653 074A                       i1l663 0FFF           ?i1_Lcd_Set_Cursor 0074  
           ___awdiv@counter 0020                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                 ?i1_Lcd_Port 0070  
        ??i1_Lcd_Set_Cursor 0075             __end_of_dpowers 081A                       _valor 0050  
                     _setup 0EDA                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 02BD           __end_of_ADC_setup 0EDA  
          __end_of_Lcd_Init 05A3            __end_of_Lcd_Port 0F2C             __initialization 0015  
              __end_of_main 0707                      ??_main 003E                      _ADRESH 001E  
          ___awdiv@dividend 0078                      ?_setup 0070                      _ANSELH 0189  
                    i1l2001 0336                      i1l2003 033C                      i1l2021 0363  
                    i1l2013 0350                      i1l2101 0613                      i1l2015 0356  
                    i1l2007 0343                      i1l2031 0377                      i1l2111 0629  
                    i1l2103 0618                      i1l2025 036A                      i1l2009 0349  
                    i1l2121 0645                      i1l2113 062C                      i1l2105 061A  
                    i1l2041 01F2                      i1l2027 0370                      i1l2019 035D  
                    i1l2131 0662                      i1l2123 064B                      i1l2115 0633  
                    i1l2107 061E                      i1l2051 021D                      i1l2043 01F7  
                    i1l2035 01E4                      i1l2211 00F5                      i1l2203 002A  
                    i1l2125 0652                      i1l2117 0637                      i1l2109 0623  
                    i1l2053 0221                      i1l2037 01E7                      i1l2141 04BC  
                    i1l2221 01C8                      i1l2213 00FE                      i1l2205 002E  
                    i1l2119 063B                      i1l2127 0658                      i1l2071 0256  
                    i1l2055 0225                      i1l2047 01F8                      i1l2039 01ED  
                    i1l2151 04DF                      i1l2143 04C2                      i1l2135 04A7  
                    i1l2223 01D1                      i1l2207 0037                      i1l2215 0105  
                    u200_20 0629                      u120_20 0F5C                      i1l2129 065D  
                    u200_21 0628                      i1l2081 0296                      i1l2073 025C  
                    i1l2065 0230                      i1l2057 0229                      i1l2049 0215  
                    u120_21 0F5B                      i1l2161 0502                      i1l2153 04E5  
                    i1l2137 04AC                      i1l2145 04C9                      i1l2217 010E  
                    i1l2225 01D5                      i1l2209 00DF                      i1l2083 029B  
                    i1l2075 0261                      i1l2059 022E                      i1l2171 0525  
                    i1l2163 0508                      i1l2147 04CF                      i1l2155 04EC  
                    i1l2139 04B9                      i1l2219 01B2                      i1l1701 05C0  
                    i1l2085 029F                      i1l2077 0265                      i1l2069 024C  
                    i1l2173 052B                      i1l2157 04F2                      i1l2165 050F  
                    i1l2149 04DC                      i1l2181 0770                      i1l1711 05D8  
                    i1l1703 05C6                      i1l2079 0268                      i1l2087 02A8  
                    i1l2167 0515                      i1l2159 04FF                      i1l2175 074B  
                    u121_20 0F63                      i1l2097 060C                      i1l1713 05E9  
                    i1l1705 05C9                      i1l1721 05FD                      i1l2089 02B8  
                    u121_21 0F62                      i1l1641 0F51                      i1l2169 0522  
                    i1l1801 07F4                      i1l2177 074E                      i1l2099 060D  
                    i1l1723 0602                      i1l1715 05EF                      i1l1707 05D0  
                    i1l1731 0709                      i1l1643 0F5C                      i1l1803 07F7  
                    i1l2179 076A                      u201_25 062D                      i1l1725 0607  
                    i1l1717 05F0                      i1l1709 05D4                      i1l1741 0721  
                    i1l1733 070F                      i1l1645 0F63                      i1l1805 07FB  
                    i1l1719 05F7                      i1l1671 0F6E                      i1l1807 0F93  
                    i1l1743 0732                      i1l1735 0712                      i1l1751 0746  
                    i1l1647 0F6A                      i1l1639 0F4D                      u202_20 063B  
                    u130_20 05C6                      u122_20 0F6A                      u202_21 063A  
                    u130_21 05C5                      i1l1681 0F8E                      i1l1673 0F70  
                    i1l1745 0738                      i1l1737 0719                      i1l1729 0707  
                    i1l1761 0FD6                      u122_21 0F69                      i1l1691 05AF  
                    i1l1675 0F74                      i1l1747 0739                      i1l1739 071D  
                    i1l1771 0FF5                      i1l1763 0FDA                      i1l1755 0FC4  
                    i1l1693 05B1                      i1l1685 05A3                      i1l1677 0F81  
                    i1l1749 0740                      i1l1765 0FDE                      i1l1757 0FCC  
                    i1l1773 0FFB                      i1l1781 0EFC                      u210_25 04D5  
                    i1l1951 02C7                      i1l1695 05B5                      i1l1687 05A6  
                    i1l1679 0F88                      i1l1767 0FE8                      i1l1759 0FCF  
                    i1l1783 0EFF                      i1l1791 07D6                      u203_20 0645  
                    u211_20 04F2                      i1l1961 02E1                      i1l1953 02CF  
                    u203_21 0644                      i1l1697 05BA                      i1l1689 05AA  
                    i1l1769 0FEE                      i1l1785 0F08                      i1l1777 0EF3  
                    u211_21 04F1                      i1l1793 07E4                      i1l1971 02F5  
                    i1l1955 02D4                      i1l1947 02BE                      i1l1699 05BE  
                    i1l1779 0EF6                      i1l1795 07E7                      i1l1787 07CD  
                    i1l1973 02FB                      i1l1965 02E8                      i1l1949 02C3  
                    u203_25 0641                      u131_25 05CA                      i1l2597 020A  
                    i1l1797 07EB                      i1l1789 07D3                      i1l1991 0322  
                    i1l1983 030F                      i1l1967 02EE                      i1l1959 02DB  
                    i1l1799 07EE                      u132_20 05D8                      u124_20 0F74  
                    u140_20 0721                      u220_20 010E                      i1l1985 0315  
                    i1l1977 0302                      u132_21 05D7                      u124_21 0F73  
                    u140_21 0720                      u220_21 010D                      i1l1995 0329  
                    i1l1979 0308                      i1l1997 032F                      i1l1989 031C  
                    u204_25 064C                      u212_25 04F8                      u205_20 0658  
                    u213_20 0515                      u205_21 0657                      u213_21 0514  
                    u133_25 05D9                      u125_25 0F7B                      u141_25 0722  
                    u206_20 065D                      u134_20 05E9                      u142_20 0732  
                    u150_20 0FFB                      u206_21 065C                      u134_21 05E8  
                    u142_21 0731                      u150_21 0FFA                      u134_25 05E5  
                    u126_25 0F82                      u142_25 072E                      u214_25 051B  
                    u127_20 0F8E                      u119_20 0F51                      u207_20 04AC  
                    u215_20 0758                      u127_21 0F8D                      u119_21 0F50  
                    u207_21 04AB                      u135_25 05F1                      u143_25 073A  
                    u151_25 07D9                      u136_20 05FD                      u128_20 05AA  
                    u144_20 0746                      u216_20 077A                      u136_21 05FC  
                    u128_21 05A9                      u144_21 0745                      u208_25 04B2  
                    u137_20 0602                      u129_20 05B5                      u145_20 0FCC  
                    u209_20 04CF                      u217_20 078C                      u137_21 0601  
                    u129_21 05B4                      u145_21 0FCB                      u209_21 04CE  
                    u217_21 078B                      u138_20 070F                      u218_20 002E  
                    u138_21 070E                      u218_21 002D                      u146_25 0FD0  
                    u147_20 0FDE                      u219_20 0037                      u147_21 0FDD  
                    u219_21 0036                      u139_25 0713                      u180_20 02EE  
                    u148_20 0FE8                      u180_21 02ED                      u148_21 0FE7  
                    u148_25 0FE4                      u260_27 07E9                      u181_20 02FB  
                    u181_21 02FA                      u149_25 0FEF                      u261_27 07F9  
                    u190_20 0370                      u182_20 0308                      u190_21 036F  
                    u182_21 0307                      u262_27 0F03                      u183_20 0315  
                    u191_20 01ED                      u183_21 0314                      u191_21 01EC  
                    u184_20 0322                      u192_20 0225                      u184_21 0321  
                    u192_21 0224                      u185_20 032F                      u177_20 02C3  
                    u193_20 024B                      u185_21 032E                      u177_21 02C2  
                    u193_21 024A                      u193_25 0247                      u186_20 033C  
                    u178_20 02D4                      u194_20 0256                      u186_21 033B  
                    u178_21 02D3                      u194_21 0255                      u187_20 0349  
                    u179_20 02E1                      u195_20 025C                      u187_21 0348  
                    u179_21 02E0                      u195_21 025B                      u188_20 0356  
                    u196_20 02A8                      u188_21 0355                      u196_21 02A7  
                    u189_20 0363                      u197_20 02B8                      u189_21 0362  
                    u197_21 02B7                      u198_20 0613                      u198_21 0612  
                    u199_20 061E                      u199_21 061D           ?i1_Lcd_Write_Char 0070  
                 ??_Lcd_Cmd 00B4          ??i1_Lcd_Write_Char 0071                ??_ADC_config 003D  
         __end_ofi1_Lcd_Cmd 0F0C           i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073  
                    ___wmul 0F6E                   ??___awdiv 007A                   ??___awmod 007B  
                 ??___lwdiv 007A                   ??___lwmod 0024                      _buffer 00A0  
          ___awdiv@quotient 0022             ___awmod@divisor 0024             ___awmod@counter 007C  
                    saved_w 007E                   ?_ADC_read 0070          __end_of_ADC_config 04A6  
                 ??_sprintf 002D             Lcd_Set_Cursor@a 00B9             Lcd_Set_Cursor@b 00B7  
           Lcd_Set_Cursor@y 00BB             Lcd_Set_Cursor@z 00BA     __end_of__initialization 0026  
         __end_of_Lcd_Clear 0EC2              __pcstackCOMMON 0070               __end_of_setup 0EF2  
            _Lcd_Set_Cursor 037E                  ??_ADC_read 0072                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                     ??_setup 003D                  __pbssBANK0 003E  
                __pbssBANK1 00A0                  __pmaintext 06BB                     ?___wmul 0070  
                _centesima1 0044                  _centesima2 003E                  __pintentry 0004  
    __end_of_Lcd_Set_Cursor 0415                ??i1_Lcd_Port 0070                  ??_Lcd_Init 00B7  
                ??_Lcd_Port 003D                  __stringtab 0800              _Lcd_Write_Char 078D  
                   _Lcd_Cmd 0F2C                   _ADC_setup 0EC2          __end_ofi1_Lcd_Port 0F6E  
                   ___awdiv 05A3                     ___awmod 060C                     ___lwdiv 0707  
                   ___lwmod 0FC4                     _decima1 0046                     _decima2 0040  
                 _ANSELbits 0188             ?_Lcd_Set_Cursor 00B7                     __ptext1 0EDA  
                   __ptext2 0667                     __ptext3 078D                     __ptext4 037E  
                   __ptext5 0533                     __ptext6 0EB5                     __ptext7 0F2C  
                   __ptext8 0F0C                     __ptext9 0EC2                     _dpowers 0810  
          ___awmod@dividend 0026                     _unidad1 0048                     _unidad2 0042  
__end_ofi1_Lcd_Write_String 078D                     _sprintf 01E1                     clrloop0 0EAE  
    __end_of_Lcd_Write_Char 07CC        end_of_initialization 0026                  ?_ADC_setup 0070  
                 Lcd_Port@a 003D                   i1_Lcd_Cmd 0EF2                   _PORTBbits 0006  
                 _TRISBbits 0086             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 00B8  
         Lcd_Write_String@i 00BD                   _Lcd_Clear 0EB5              __end_of___wmul 0F93  
                ?i1_Lcd_Cmd 0070            _Lcd_Write_String 0667         start_initialization 0015  
               __end_of_map 0FC4                 __end_of_isr 01E1           ADC_config@channel 003D  
          i1_Lcd_Set_Cursor 04A6                 ??_ADC_setup 003D                  ?_Lcd_Clear 0070  
                  ??___wmul 0074             Lcd_Write_Char@a 00B7             Lcd_Write_Char@y 00B6  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00B4  
      i1Lcd_Write_Char@temp 0072                    ?_Lcd_Cmd 0070                 sprintf@flag 0031  
               sprintf@prec 0032            ___lwdiv@dividend 0078            ??_Lcd_Set_Cursor 00B8  
                  ?___awdiv 0076                    ?___awmod 0024                    ?___lwdiv 0076  
                  ?___lwmod 0020            i1_Lcd_Write_Char 07CC                 ??i1_Lcd_Cmd 0071  
      i1Lcd_Set_Cursor@temp 0079                   __pstrings 0800                    _ADC_read 02BD  
          ___lwdiv@quotient 007B                    ?_sprintf 0026           interrupt_function 0004  
            ___wmul@product 0074                   clear_ram0 0EAD                    _PIE1bits 008C  
        i1_Lcd_Write_String 074B                    Lcd_Cmd@a 00B6                    _PIR1bits 000C  
               ??_Lcd_Clear 003E         ?i1_Lcd_Write_String 0075                  _ADCON0bits 001F  
               __stringbase 080F                  _ADCON1bits 009F           ___wmul@multiplier 0070  
                 map@outmax 002C                   map@outmin 002A            ??_Lcd_Write_Char 00B4  
               ADC_read@can 0074                    _Lcd_Init 0533                    _Lcd_Port 0F0C  
      ??i1_Lcd_Write_String 0077    __end_of_Lcd_Write_String 06BB                  _ADC_config 0415  
        __end_of__stringtab 0810    __end_ofi1_Lcd_Set_Cursor 0533                  _ANSELHbits 0189  
                sprintf@val 0033             ___lwdiv@divisor 0076           i1Lcd_Set_Cursor@a 0076  
         i1Lcd_Set_Cursor@b 0074           i1Lcd_Set_Cursor@y 0078           i1Lcd_Set_Cursor@z 0077  
           ___lwdiv@counter 007D                    __ptext10 0415                    __ptext11 002A  
                  __ptext20 0F93                    __ptext12 074B                    __ptext21 0F6E  
                  __ptext13 07CC                    __ptext22 05A3                    __ptext14 04A6  
                  __ptext23 060C                    __ptext15 0EF2                    __ptext24 02BD  
                  __ptext16 0F4C                    __ptext17 01E1                    __ptext18 0FC4  
                  __ptext19 0707                 i1Lcd_Port@a 0070                    map@value 0024  
       i1Lcd_Write_String@a 0075         i1Lcd_Write_String@i 007A                    _voltaje1 004E  
                  _voltaje2 004C                  _INTCONbits 000B          Lcd_Write_Char@temp 00B5  
                  intlevel1 0000                   sprintf@ap 0030    __end_ofi1_Lcd_Write_Char 07FF  
                 sprintf@sp 0035            ___lwmod@dividend 0022                  i1Lcd_Cmd@a 0073  
                 stringcode 080A                  _OSCCONbits 008F                 ?_ADC_config 0070  
        Lcd_Set_Cursor@temp 00BC                    sprintf@c 0036                    sprintf@f 0026  
           ___lwmod@divisor 0020             ___lwmod@counter 0025                  i1_Lcd_Port 0F4C  
                  stringdir 080A                    stringtab 0800  
