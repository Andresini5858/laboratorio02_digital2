

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jan 27 08:47:21 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389                           
   390                           	psect	strings
   391     0800                     __pstrings:
   392     0800                     stringtab:
   393     0800                     __stringtab:
   394                           
   395                           ;	String table - string pointers are 1 byte each
   396     0800  1BFF               	btfsc	btemp+1,7
   397     0801  280A               	ljmp	stringcode
   398     0802  1383               	bcf	3,7
   399     0803  187F               	btfsc	btemp+1,0
   400     0804  1783               	bsf	3,7
   401     0805  0800               	movf	0,w
   402     0806  0A84               	incf	4,f
   403     0807  1903               	skipnz
   404     0808  0AFF               	incf	btemp+1,f
   405     0809  0008               	return
   406     080A                     stringcode:
   407     080A                     stringdir:
   408     080A  3008               	movlw	high stringdir
   409     080B  008A               	movwf	10
   410     080C  0804               	movf	4,w
   411     080D  0A84               	incf	4,f
   412     080E  0782               	addwf	2,f
   413     080F                     __stringbase:
   414     080F  3400               	retlw	0
   415     0810                     __end_of__stringtab:
   416     0810                     _dpowers:
   417     0810  3401               	retlw	1
   418     0811  3400               	retlw	0
   419     0812  340A               	retlw	10
   420     0813  3400               	retlw	0
   421     0814  3464               	retlw	100
   422     0815  3400               	retlw	0
   423     0816  34E8               	retlw	232
   424     0817  3403               	retlw	3
   425     0818  3410               	retlw	16
   426     0819  3427               	retlw	39
   427     081A                     __end_of_dpowers:
   428     001E                     _ADRESH	set	30
   429     0006                     _PORTBbits	set	6
   430     0019                     _TXREG	set	25
   431     000B                     _INTCONbits	set	11
   432     0008                     _PORTD	set	8
   433     0007                     _PORTC	set	7
   434     0006                     _PORTB	set	6
   435     0005                     _PORTA	set	5
   436     000C                     _PIR1bits	set	12
   437     001F                     _ADCON0bits	set	31
   438     009F                     _ADCON1bits	set	159
   439     0086                     _TRISBbits	set	134
   440     008F                     _OSCCONbits	set	143
   441     008C                     _PIE1bits	set	140
   442     0088                     _TRISD	set	136
   443     0087                     _TRISC	set	135
   444     0086                     _TRISB	set	134
   445     0189                     _ANSELHbits	set	393
   446     0188                     _ANSELbits	set	392
   447     0189                     _ANSELH	set	393
   448     081A                     STR_4:
   449     081A  3425               	retlw	37	;'%'
   450     081B  3464               	retlw	100	;'d'
   451     081C  342E               	retlw	46	;'.'
   452     081D  3425               	retlw	37	;'%'
   453     081E  3464               	retlw	100	;'d'
   454     081F  3425               	retlw	37	;'%'
   455     0820  3464               	retlw	100	;'d'
   456     0821  3456               	retlw	86	;'V'
   457     0822  3420               	retlw	32	;' '
   458     0823  3400               	retlw	0
   459     0824                     STR_2:
   460     0824  3453               	retlw	83	;'S'
   461     0825  3431               	retlw	49	;'1'
   462     0826  343A               	retlw	58	;':'
   463     0827  3400               	retlw	0
   464     0828                     STR_1:
   465     0828  3453               	retlw	83	;'S'
   466     0829  3432               	retlw	50	;'2'
   467     082A  343A               	retlw	58	;':'
   468     082B  3400               	retlw	0
   469     082C                     STR_3:
   470     082C  3453               	retlw	83	;'S'
   471     082D  3433               	retlw	51	;'3'
   472     082E  343A               	retlw	58	;':'
   473     082F  3400               	retlw	0
   474     081A                     
   475                           	psect	cinit
   476     0015                     start_initialization:	
   477                           ; #config settings
   478                           
   479     0015                     __initialization:
   480                           
   481                           ; Clear objects allocated to BANK0
   482     0015  1383               	bcf	3,7	;select IRP bank0
   483     0016  303E               	movlw	low __pbssBANK0
   484     0017  0084               	movwf	4
   485     0018  3053               	movlw	low (__pbssBANK0+21)
   486     0019  120A  158A  2694  120A  118A  	fcall	clear_ram0
   487                           
   488                           ; Clear objects allocated to BANK1
   489     001E  30A0               	movlw	low __pbssBANK1
   490     001F  0084               	movwf	4
   491     0020  30B4               	movlw	low (__pbssBANK1+20)
   492     0021  120A  158A  2694  120A  118A  	fcall	clear_ram0
   493     0026                     end_of_initialization:	
   494                           ;End of C runtime variable initialization code
   495                           
   496     0026                     __end_of__initialization:
   497     0026  0183               	clrf	3
   498     0027  120A  118A  2E0C   	ljmp	_main	;jump to C main() function
   499                           
   500                           	psect	bssBANK0
   501     003E                     __pbssBANK0:
   502     003E                     _centesima2:
   503     003E                     	ds	2
   504     0040                     _decima2:
   505     0040                     	ds	2
   506     0042                     _unidad2:
   507     0042                     	ds	2
   508     0044                     _centesima1:
   509     0044                     	ds	2
   510     0046                     _decima1:
   511     0046                     	ds	2
   512     0048                     _unidad1:
   513     0048                     	ds	2
   514     004A                     _vol2:
   515     004A                     	ds	2
   516     004C                     _voltaje2:
   517     004C                     	ds	2
   518     004E                     _voltaje1:
   519     004E                     	ds	2
   520     0050                     _valor:
   521     0050                     	ds	2
   522     0052                     _vol1:
   523     0052                     	ds	1
   524                           
   525                           	psect	bssBANK1
   526     00A0                     __pbssBANK1:
   527     00A0                     _buffer:
   528     00A0                     	ds	20
   529                           
   530                           	psect	clrtext
   531     0E94                     clear_ram0:	
   532                           ;	Called with FSR containing the base address, and
   533                           ;	W with the last address+1
   534                           
   535     0E94  0064               	clrwdt	;clear the watchdog before getting into this loop
   536     0E95                     clrloop0:
   537     0E95  0180               	clrf	0	;clear RAM location pointed to by FSR
   538     0E96  0A84               	incf	4,f	;increment pointer
   539     0E97  0604               	xorwf	4,w	;XOR with final address
   540     0E98  1903               	btfsc	3,2	;have we reached the end yet?
   541     0E99  3400               	retlw	0	;all done for this memory range, return
   542     0E9A  0604               	xorwf	4,w	;XOR again to restore value
   543     0E9B  2E95               	goto	clrloop0	;do the next byte
   544                           
   545                           	psect	cstackBANK1
   546     00B4                     __pcstackBANK1:
   547     00B4                     ??_Lcd_Cmd:
   548     00B4                     ??_Lcd_Write_Char:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 1 bytes @ 0x0
   553     00B4                     	ds	1
   554     00B5                     Lcd_Write_Char@temp:
   555                           
   556                           ; 1 bytes @ 0x1
   557     00B5                     	ds	1
   558     00B6                     Lcd_Cmd@a:
   559     00B6                     Lcd_Write_Char@y:	
   560                           ; 1 bytes @ 0x2
   561                           
   562                           
   563                           ; 1 bytes @ 0x2
   564     00B6                     	ds	1
   565     00B7                     ??_Lcd_Init:
   566     00B7                     ?_Lcd_Set_Cursor:	
   567                           ; 1 bytes @ 0x3
   568                           
   569     00B7                     Lcd_Set_Cursor@b:	
   570                           ; 1 bytes @ 0x3
   571                           
   572     00B7                     Lcd_Write_Char@a:	
   573                           ; 1 bytes @ 0x3
   574                           
   575                           
   576                           ; 1 bytes @ 0x3
   577     00B7                     	ds	1
   578     00B8                     ??_Lcd_Set_Cursor:
   579     00B8                     ?_Lcd_Write_String:	
   580                           ; 1 bytes @ 0x4
   581                           
   582     00B8                     Lcd_Write_String@a:	
   583                           ; 1 bytes @ 0x4
   584                           
   585                           
   586                           ; 2 bytes @ 0x4
   587     00B8                     	ds	1
   588     00B9                     Lcd_Set_Cursor@a:
   589                           
   590                           ; 1 bytes @ 0x5
   591     00B9                     	ds	1
   592     00BA                     ??_Lcd_Write_String:
   593     00BA                     Lcd_Set_Cursor@z:	
   594                           ; 1 bytes @ 0x6
   595                           
   596                           
   597                           ; 1 bytes @ 0x6
   598     00BA                     	ds	1
   599     00BB                     Lcd_Set_Cursor@y:
   600                           
   601                           ; 1 bytes @ 0x7
   602     00BB                     	ds	1
   603     00BC                     Lcd_Set_Cursor@temp:
   604                           
   605                           ; 1 bytes @ 0x8
   606     00BC                     	ds	1
   607     00BD                     Lcd_Write_String@i:
   608                           
   609                           ; 2 bytes @ 0x9
   610     00BD                     	ds	2
   611                           
   612                           	psect	cstackCOMMON
   613     0070                     __pcstackCOMMON:
   614     0070                     ?_setup:
   615     0070                     ?_ADC_setup:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_ADC_config:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_Lcd_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_Lcd_Clear:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ?_main:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_isr:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Lcd_Port:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_Lcd_Cmd:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_Lcd_Write_Char:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?i1_Lcd_Port:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ??i1_Lcd_Port:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?i1_Lcd_Cmd:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?i1_Lcd_Write_Char:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_ADC_read:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?___wmul:	
   658                           ; 2 bytes @ 0x0
   659                           
   660     0070                     i1Lcd_Port@a:	
   661                           ; 2 bytes @ 0x0
   662                           
   663     0070                     ___wmul@multiplier:	
   664                           ; 1 bytes @ 0x0
   665                           
   666                           
   667                           ; 2 bytes @ 0x0
   668     0070                     	ds	1
   669     0071                     ??i1_Lcd_Cmd:
   670     0071                     ??i1_Lcd_Write_Char:	
   671                           ; 1 bytes @ 0x1
   672                           
   673                           
   674                           ; 1 bytes @ 0x1
   675     0071                     	ds	1
   676     0072                     ??_ADC_read:
   677     0072                     i1Lcd_Write_Char@temp:	
   678                           ; 1 bytes @ 0x2
   679                           
   680     0072                     ___wmul@multiplicand:	
   681                           ; 1 bytes @ 0x2
   682                           
   683                           
   684                           ; 2 bytes @ 0x2
   685     0072                     	ds	1
   686     0073                     i1Lcd_Cmd@a:
   687     0073                     i1Lcd_Write_Char@y:	
   688                           ; 1 bytes @ 0x3
   689                           
   690                           
   691                           ; 1 bytes @ 0x3
   692     0073                     	ds	1
   693     0074                     ??___wmul:
   694     0074                     ?i1_Lcd_Set_Cursor:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     ADC_read@can:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     i1Lcd_Set_Cursor@b:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     0074                     i1Lcd_Write_Char@a:	
   704                           ; 1 bytes @ 0x4
   705                           
   706     0074                     ___wmul@product:	
   707                           ; 1 bytes @ 0x4
   708                           
   709                           
   710                           ; 2 bytes @ 0x4
   711     0074                     	ds	1
   712     0075                     ??i1_Lcd_Set_Cursor:
   713     0075                     ?i1_Lcd_Write_String:	
   714                           ; 1 bytes @ 0x5
   715                           
   716     0075                     i1Lcd_Write_String@a:	
   717                           ; 1 bytes @ 0x5
   718                           
   719                           
   720                           ; 2 bytes @ 0x5
   721     0075                     	ds	1
   722     0076                     ?___awdiv:
   723     0076                     ?___lwdiv:	
   724                           ; 2 bytes @ 0x6
   725                           
   726     0076                     i1Lcd_Set_Cursor@a:	
   727                           ; 2 bytes @ 0x6
   728                           
   729     0076                     ___awdiv@divisor:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     ___lwdiv@divisor:	
   733                           ; 2 bytes @ 0x6
   734                           
   735                           
   736                           ; 2 bytes @ 0x6
   737     0076                     	ds	1
   738     0077                     ??i1_Lcd_Write_String:
   739     0077                     i1Lcd_Set_Cursor@z:	
   740                           ; 1 bytes @ 0x7
   741                           
   742                           
   743                           ; 1 bytes @ 0x7
   744     0077                     	ds	1
   745     0078                     i1Lcd_Set_Cursor@y:
   746     0078                     ___awdiv@dividend:	
   747                           ; 1 bytes @ 0x8
   748                           
   749     0078                     ___lwdiv@dividend:	
   750                           ; 2 bytes @ 0x8
   751                           
   752                           
   753                           ; 2 bytes @ 0x8
   754     0078                     	ds	1
   755     0079                     i1Lcd_Set_Cursor@temp:
   756                           
   757                           ; 1 bytes @ 0x9
   758     0079                     	ds	1
   759     007A                     ??___awdiv:
   760     007A                     ??___lwdiv:	
   761                           ; 1 bytes @ 0xA
   762                           
   763     007A                     i1Lcd_Write_String@i:	
   764                           ; 1 bytes @ 0xA
   765                           
   766                           
   767                           ; 2 bytes @ 0xA
   768     007A                     	ds	1
   769     007B                     ??_map:
   770     007B                     ??___awmod:	
   771                           ; 1 bytes @ 0xB
   772                           
   773     007B                     ___lwdiv@quotient:	
   774                           ; 1 bytes @ 0xB
   775                           
   776                           
   777                           ; 2 bytes @ 0xB
   778     007B                     	ds	1
   779     007C                     ___awmod@counter:
   780                           
   781                           ; 1 bytes @ 0xC
   782     007C                     	ds	1
   783     007D                     ___awmod@sign:
   784     007D                     ___lwdiv@counter:	
   785                           ; 1 bytes @ 0xD
   786                           
   787                           
   788                           ; 1 bytes @ 0xD
   789     007D                     	ds	1
   790                           
   791                           	psect	cstackBANK0
   792     0020                     __pcstackBANK0:
   793     0020                     ?___lwmod:
   794     0020                     ___awdiv@counter:	
   795                           ; 2 bytes @ 0x0
   796                           
   797     0020                     ___lwmod@divisor:	
   798                           ; 1 bytes @ 0x0
   799                           
   800                           
   801                           ; 2 bytes @ 0x0
   802     0020                     	ds	1
   803     0021                     ___awdiv@sign:
   804                           
   805                           ; 1 bytes @ 0x1
   806     0021                     	ds	1
   807     0022                     ___awdiv@quotient:
   808     0022                     ___lwmod@dividend:	
   809                           ; 2 bytes @ 0x2
   810                           
   811                           
   812                           ; 2 bytes @ 0x2
   813     0022                     	ds	2
   814     0024                     ?_map:
   815     0024                     ??___lwmod:	
   816                           ; 1 bytes @ 0x4
   817                           
   818     0024                     ?___awmod:	
   819                           ; 1 bytes @ 0x4
   820                           
   821     0024                     map@value:	
   822                           ; 2 bytes @ 0x4
   823                           
   824     0024                     ___awmod@divisor:	
   825                           ; 2 bytes @ 0x4
   826                           
   827                           
   828                           ; 2 bytes @ 0x4
   829     0024                     	ds	1
   830     0025                     ___lwmod@counter:
   831                           
   832                           ; 1 bytes @ 0x5
   833     0025                     	ds	1
   834     0026                     ?_sprintf:
   835     0026                     sprintf@f:	
   836                           ; 2 bytes @ 0x6
   837                           
   838     0026                     map@inputmin:	
   839                           ; 1 bytes @ 0x6
   840                           
   841     0026                     ___awmod@dividend:	
   842                           ; 2 bytes @ 0x6
   843                           
   844                           
   845                           ; 2 bytes @ 0x6
   846     0026                     	ds	2
   847     0028                     map@inputmax:
   848                           
   849                           ; 2 bytes @ 0x8
   850     0028                     	ds	2
   851     002A                     map@outmin:
   852                           
   853                           ; 2 bytes @ 0xA
   854     002A                     	ds	2
   855     002C                     map@outmax:
   856                           
   857                           ; 2 bytes @ 0xC
   858     002C                     	ds	1
   859     002D                     ??_sprintf:
   860                           
   861                           ; 1 bytes @ 0xD
   862     002D                     	ds	3
   863     0030                     sprintf@ap:
   864                           
   865                           ; 1 bytes @ 0x10
   866     0030                     	ds	1
   867     0031                     sprintf@flag:
   868                           
   869                           ; 1 bytes @ 0x11
   870     0031                     	ds	1
   871     0032                     sprintf@prec:
   872                           
   873                           ; 1 bytes @ 0x12
   874     0032                     	ds	1
   875     0033                     sprintf@val:
   876                           
   877                           ; 2 bytes @ 0x13
   878     0033                     	ds	2
   879     0035                     sprintf@sp:
   880                           
   881                           ; 1 bytes @ 0x15
   882     0035                     	ds	1
   883     0036                     sprintf@c:
   884                           
   885                           ; 1 bytes @ 0x16
   886     0036                     	ds	1
   887     0037                     ??_isr:
   888                           
   889                           ; 1 bytes @ 0x17
   890     0037                     	ds	6
   891     003D                     ??_setup:
   892     003D                     ??_ADC_setup:	
   893                           ; 1 bytes @ 0x1D
   894                           
   895     003D                     ??_ADC_config:	
   896                           ; 1 bytes @ 0x1D
   897                           
   898     003D                     ??_Lcd_Port:	
   899                           ; 1 bytes @ 0x1D
   900                           
   901     003D                     Lcd_Port@a:	
   902                           ; 1 bytes @ 0x1D
   903                           
   904     003D                     ADC_config@channel:	
   905                           ; 1 bytes @ 0x1D
   906                           
   907                           
   908                           ; 1 bytes @ 0x1D
   909     003D                     	ds	1
   910     003E                     ??_Lcd_Clear:
   911     003E                     ??_main:	
   912                           ; 1 bytes @ 0x1E
   913                           
   914                           
   915                           	psect	maintext
   916     060C                     __pmaintext:	
   917                           ; 1 bytes @ 0x1E
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 50 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : B00/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels required when called: 8
   943 ;; This function calls:
   944 ;;		_ADC_config
   945 ;;		_ADC_setup
   946 ;;		_Lcd_Clear
   947 ;;		_Lcd_Init
   948 ;;		_Lcd_Set_Cursor
   949 ;;		_Lcd_Write_String
   950 ;;		_setup
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956     060C                     _main:	
   957                           ;psect for function _main
   958                           
   959     060C                     l2486:	
   960                           ;incstack = 0
   961                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   962                           
   963                           
   964                           ;main.c: 51:     setup();
   965     060C  120A  158A  26C1  120A  118A  	fcall	_setup
   966     0611                     l2488:
   967                           
   968                           ;main.c: 52:     ADC_setup();
   969     0611  120A  158A  26A9  120A  118A  	fcall	_ADC_setup
   970     0616                     l2490:
   971                           
   972                           ;main.c: 53:     ADC_config(0);
   973     0616  3000               	movlw	0
   974     0617  120A  118A  2415  120A  118A  	fcall	_ADC_config
   975     061C                     l2492:
   976                           
   977                           ;main.c: 54:     ADC_config(1);
   978     061C  3001               	movlw	1
   979     061D  120A  118A  2415  120A  118A  	fcall	_ADC_config
   980     0622                     l2494:
   981                           
   982                           ;main.c: 55:     Lcd_Init();
   983     0622  120A  118A  2533  120A  118A  	fcall	_Lcd_Init
   984     0627                     l2496:
   985                           
   986                           ;main.c: 56:     Lcd_Clear();
   987     0627  120A  158A  269C  120A  118A  	fcall	_Lcd_Clear
   988     062C                     l2498:
   989                           
   990                           ;main.c: 58:         ADCON0bits.GO = 1;
   991     062C  1283               	bcf	3,5	;RP0=0, select bank0
   992     062D  1303               	bcf	3,6	;RP1=0, select bank0
   993     062E  149F               	bsf	31,1	;volatile
   994     062F                     l2500:
   995                           
   996                           ;main.c: 59:         Lcd_Set_Cursor(1,8);
   997     062F  3008               	movlw	8
   998     0630  1683               	bsf	3,5	;RP0=1, select bank1
   999     0631  1303               	bcf	3,6	;RP1=0, select bank1
  1000     0632  00B7               	movwf	Lcd_Set_Cursor@b^(0+128)
  1001     0633  3001               	movlw	1
  1002     0634  120A  118A  237E  120A  118A  	fcall	_Lcd_Set_Cursor
  1003     0639                     l2502:
  1004                           
  1005                           ;main.c: 60:         Lcd_Write_String("S2:");
  1006     0639  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1007     063A  1683               	bsf	3,5	;RP0=1, select bank1
  1008     063B  1303               	bcf	3,6	;RP1=0, select bank1
  1009     063C  00B8               	movwf	Lcd_Write_String@a^(0+128)
  1010     063D  3080               	movlw	128
  1011     063E  00B9               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1012     063F  120A  118A  26CD  120A  118A  	fcall	_Lcd_Write_String
  1013     0644                     l2504:
  1014                           
  1015                           ;main.c: 61:         Lcd_Set_Cursor(1,1);
  1016     0644  1683               	bsf	3,5	;RP0=1, select bank1
  1017     0645  1303               	bcf	3,6	;RP1=0, select bank1
  1018     0646  01B7               	clrf	Lcd_Set_Cursor@b^(0+128)
  1019     0647  0AB7               	incf	Lcd_Set_Cursor@b^(0+128),f
  1020     0648  3001               	movlw	1
  1021     0649  120A  118A  237E  120A  118A  	fcall	_Lcd_Set_Cursor
  1022     064E                     l2506:
  1023                           
  1024                           ;main.c: 62:         Lcd_Write_String("S1:");
  1025     064E  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1026     064F  1683               	bsf	3,5	;RP0=1, select bank1
  1027     0650  1303               	bcf	3,6	;RP1=0, select bank1
  1028     0651  00B8               	movwf	Lcd_Write_String@a^(0+128)
  1029     0652  3080               	movlw	128
  1030     0653  00B9               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1031     0654  120A  118A  26CD  120A  118A  	fcall	_Lcd_Write_String
  1032     0659                     l2508:
  1033                           
  1034                           ;main.c: 63:         Lcd_Set_Cursor(1,14);
  1035     0659  300E               	movlw	14
  1036     065A  1683               	bsf	3,5	;RP0=1, select bank1
  1037     065B  1303               	bcf	3,6	;RP1=0, select bank1
  1038     065C  00B7               	movwf	Lcd_Set_Cursor@b^(0+128)
  1039     065D  3001               	movlw	1
  1040     065E  120A  118A  237E  120A  118A  	fcall	_Lcd_Set_Cursor
  1041     0663                     l2510:
  1042                           
  1043                           ;main.c: 64:         Lcd_Write_String("S3:");
  1044     0663  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1045     0664  1683               	bsf	3,5	;RP0=1, select bank1
  1046     0665  1303               	bcf	3,6	;RP1=0, select bank1
  1047     0666  00B8               	movwf	Lcd_Write_String@a^(0+128)
  1048     0667  3080               	movlw	128
  1049     0668  00B9               	movwf	(Lcd_Write_String@a+1)^(0+128)
  1050     0669  120A  118A  26CD  120A  118A  	fcall	_Lcd_Write_String
  1051     066E  2E2C               	goto	l2498
  1052     066F  120A  118A  2812   	ljmp	start
  1053     0672                     __end_of_main:
  1054                           
  1055                           	psect	text1
  1056     0EC1                     __ptext1:	
  1057 ;; *************** function _setup *****************
  1058 ;; Defined at:
  1059 ;;		line 94 in file "main.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		status,2
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0
  1076 ;;      Totals:         0       0       0       0       0
  1077 ;;Total ram usage:        0 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 4
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087     0EC1                     _setup:	
  1088                           ;psect for function _setup
  1089                           
  1090     0EC1                     l1838:	
  1091                           ;incstack = 0
  1092                           ; Regs used in _setup: [status,2]
  1093                           
  1094                           
  1095                           ;main.c: 95:     ANSELH = 0;
  1096     0EC1  1683               	bsf	3,5	;RP0=1, select bank3
  1097     0EC2  1703               	bsf	3,6	;RP1=1, select bank3
  1098     0EC3  0189               	clrf	9	;volatile
  1099                           
  1100                           ;main.c: 97:     TRISB = 0;
  1101     0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  1102     0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  1103     0EC6  0186               	clrf	6	;volatile
  1104                           
  1105                           ;main.c: 98:     TRISC = 0;
  1106     0EC7  0187               	clrf	7	;volatile
  1107                           
  1108                           ;main.c: 99:     TRISD = 0;
  1109     0EC8  0188               	clrf	8	;volatile
  1110                           
  1111                           ;main.c: 101:     PORTA = 0;
  1112     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  1113     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  1114     0ECB  0185               	clrf	5	;volatile
  1115                           
  1116                           ;main.c: 102:     PORTB = 0;
  1117     0ECC  0186               	clrf	6	;volatile
  1118                           
  1119                           ;main.c: 103:     PORTC = 0;
  1120     0ECD  0187               	clrf	7	;volatile
  1121                           
  1122                           ;main.c: 104:     PORTD = 0;
  1123     0ECE  0188               	clrf	8	;volatile
  1124     0ECF                     l1840:
  1125                           
  1126                           ;main.c: 106:     INTCONbits.GIE = 1;
  1127     0ECF  178B               	bsf	11,7	;volatile
  1128     0ED0                     l1842:
  1129                           
  1130                           ;main.c: 107:     INTCONbits.PEIE = 1;
  1131     0ED0  170B               	bsf	11,6	;volatile
  1132     0ED1                     l1844:
  1133                           
  1134                           ;main.c: 108:     PIE1bits.ADIE = 1;
  1135     0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  1136     0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  1137     0ED3  170C               	bsf	12,6	;volatile
  1138     0ED4                     l1846:
  1139                           
  1140                           ;main.c: 110:     OSCCONbits.IRCF2 = 1;
  1141     0ED4  170F               	bsf	15,6	;volatile
  1142     0ED5                     l1848:
  1143                           
  1144                           ;main.c: 111:     OSCCONbits.IRCF1 = 1;
  1145     0ED5  168F               	bsf	15,5	;volatile
  1146     0ED6                     l1850:
  1147                           
  1148                           ;main.c: 112:     OSCCONbits.IRCF0 = 0;
  1149     0ED6  120F               	bcf	15,4	;volatile
  1150     0ED7                     l1852:
  1151                           
  1152                           ;main.c: 113:     OSCCONbits.SCS = 1;
  1153     0ED7  140F               	bsf	15,0	;volatile
  1154     0ED8                     l93:
  1155     0ED8  0008               	return
  1156     0ED9                     __end_of_setup:
  1157                           
  1158                           	psect	text2
  1159     06CD                     __ptext2:	
  1160 ;; *************** function _Lcd_Write_String *****************
  1161 ;; Defined at:
  1162 ;;		line 104 in file "lcd.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  a               2    4[BANK1 ] PTR const unsigned char 
  1165 ;;		 -> buffer(20), STR_3(4), STR_2(4), STR_1(4), 
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  i               2    9[BANK1 ] int 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       2       0       0
  1178 ;;      Locals:         0       0       2       0       0
  1179 ;;      Temps:          0       0       3       0       0
  1180 ;;      Totals:         0       0       7       0       0
  1181 ;;Total ram usage:        7 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 6
  1184 ;; This function calls:
  1185 ;;		_Lcd_Write_Char
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191     06CD                     _Lcd_Write_String:	
  1192                           ;psect for function _Lcd_Write_String
  1193                           
  1194     06CD                     l2478:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1197                           
  1198                           
  1199                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  1200     06CD  1683               	bsf	3,5	;RP0=1, select bank1
  1201     06CE  1303               	bcf	3,6	;RP1=0, select bank1
  1202     06CF  01BD               	clrf	Lcd_Write_String@i^(0+128)
  1203     06D0  01BE               	clrf	(Lcd_Write_String@i+1)^(0+128)
  1204     06D1  2EFE               	goto	l2484
  1205     06D2                     l2480:
  1206                           
  1207                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  1208     06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1209     06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1210     06D4  083D               	movf	Lcd_Write_String@i^(0+128),w
  1211     06D5  0738               	addwf	Lcd_Write_String@a^(0+128),w
  1212     06D6  00BB               	movwf	(??_Lcd_Write_String+1)^(0+128)
  1213     06D7  0839               	movf	(Lcd_Write_String@a+1)^(0+128),w
  1214     06D8  00BA               	movwf	??_Lcd_Write_String^(0+128)
  1215     06D9  1803               	skipnc
  1216     06DA  0ABA               	incf	??_Lcd_Write_String^(0+128),f
  1217     06DB  1FBD               	btfss	Lcd_Write_String@i^(0+128),7
  1218     06DC  2EDE               	goto	u2440
  1219     06DD  03BA               	decf	??_Lcd_Write_String^(0+128),f
  1220     06DE                     u2440:
  1221     06DE  1683               	bsf	3,5	;RP0=1, select bank1
  1222     06DF  1303               	bcf	3,6	;RP1=0, select bank1
  1223     06E0  083A               	movf	??_Lcd_Write_String^(0+128),w
  1224     06E1  00BC               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  1225     06E2  083C               	movf	(??_Lcd_Write_String+2)^(0+128),w
  1226     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1227     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1228     06E5  00FF               	movwf	btemp+1
  1229     06E6  1683               	bsf	3,5	;RP0=1, select bank1
  1230     06E7  1303               	bcf	3,6	;RP1=0, select bank1
  1231     06E8  083B               	movf	(??_Lcd_Write_String+1)^(0+128),w
  1232     06E9  0084               	movwf	4
  1233     06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1234     06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1235     06EC  120A  158A  2000  120A  118A  	fcall	stringtab
  1236     06F1  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  1237     06F6                     l2482:
  1238     06F6  3001               	movlw	1
  1239     06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1240     06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1241     06F9  07BD               	addwf	Lcd_Write_String@i^(0+128),f
  1242     06FA  1803               	skipnc
  1243     06FB  0ABE               	incf	(Lcd_Write_String@i+1)^(0+128),f
  1244     06FC  3000               	movlw	0
  1245     06FD  07BE               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  1246     06FE                     l2484:
  1247     06FE  083D               	movf	Lcd_Write_String@i^(0+128),w
  1248     06FF  0738               	addwf	Lcd_Write_String@a^(0+128),w
  1249     0700  00BB               	movwf	(??_Lcd_Write_String+1)^(0+128)
  1250     0701  0839               	movf	(Lcd_Write_String@a+1)^(0+128),w
  1251     0702  00BA               	movwf	??_Lcd_Write_String^(0+128)
  1252     0703  1803               	skipnc
  1253     0704  0ABA               	incf	??_Lcd_Write_String^(0+128),f
  1254     0705  1FBD               	btfss	Lcd_Write_String@i^(0+128),7
  1255     0706  2F08               	goto	u2450
  1256     0707  03BA               	decf	??_Lcd_Write_String^(0+128),f
  1257     0708                     u2450:
  1258     0708  1683               	bsf	3,5	;RP0=1, select bank1
  1259     0709  1303               	bcf	3,6	;RP1=0, select bank1
  1260     070A  083A               	movf	??_Lcd_Write_String^(0+128),w
  1261     070B  00BC               	movwf	((??_Lcd_Write_String+1)^(0+128)+1)
  1262     070C  083C               	movf	(??_Lcd_Write_String+2)^(0+128),w
  1263     070D  1283               	bcf	3,5	;RP0=0, select bank0
  1264     070E  1303               	bcf	3,6	;RP1=0, select bank0
  1265     070F  00FF               	movwf	btemp+1
  1266     0710  1683               	bsf	3,5	;RP0=1, select bank1
  1267     0711  1303               	bcf	3,6	;RP1=0, select bank1
  1268     0712  083B               	movf	(??_Lcd_Write_String+1)^(0+128),w
  1269     0713  0084               	movwf	4
  1270     0714  1283               	bcf	3,5	;RP0=0, select bank0
  1271     0715  1303               	bcf	3,6	;RP1=0, select bank0
  1272     0716  120A  158A  2000  120A  118A  	fcall	stringtab
  1273     071B  3A00               	xorlw	0
  1274     071C  1D03               	skipz
  1275     071D  2F1F               	goto	u2461
  1276     071E  2F20               	goto	u2460
  1277     071F                     u2461:
  1278     071F  2ED2               	goto	l2480
  1279     0720                     u2460:
  1280     0720                     l155:
  1281     0720  0008               	return
  1282     0721                     __end_of_Lcd_Write_String:
  1283                           
  1284                           	psect	text3
  1285     07A7                     __ptext3:	
  1286 ;; *************** function _Lcd_Write_Char *****************
  1287 ;; Defined at:
  1288 ;;		line 88 in file "lcd.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  a               1    wreg     unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  a               1    3[BANK1 ] unsigned char 
  1293 ;;  y               1    2[BANK1 ] unsigned char 
  1294 ;;  temp            1    1[BANK1 ] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       0       0       0       0
  1305 ;;      Locals:         0       0       3       0       0
  1306 ;;      Temps:          0       0       1       0       0
  1307 ;;      Totals:         0       0       4       0       0
  1308 ;;Total ram usage:        4 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 5
  1311 ;; This function calls:
  1312 ;;		_Lcd_Port
  1313 ;; This function is called by:
  1314 ;;		_Lcd_Write_String
  1315 ;;		_Lcd_CGRAM_CreateChar
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     07A7                     _Lcd_Write_Char:	
  1320                           ;psect for function _Lcd_Write_Char
  1321                           
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1325                           ;Lcd_Write_Char@a stored from wreg
  1326     07A7  1683               	bsf	3,5	;RP0=1, select bank1
  1327     07A8  1303               	bcf	3,6	;RP1=0, select bank1
  1328     07A9  00B7               	movwf	Lcd_Write_Char@a^(0+128)
  1329     07AA                     l2406:
  1330                           
  1331                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  1332     07AA  0837               	movf	Lcd_Write_Char@a^(0+128),w
  1333     07AB  390F               	andlw	15
  1334     07AC  00B5               	movwf	Lcd_Write_Char@temp^(0+128)
  1335                           
  1336                           ;lcd.c: 92:     y = a&0xF0;
  1337     07AD  0837               	movf	Lcd_Write_Char@a^(0+128),w
  1338     07AE  39F0               	andlw	240
  1339     07AF  00B6               	movwf	Lcd_Write_Char@y^(0+128)
  1340     07B0                     l2408:
  1341                           
  1342                           ;lcd.c: 93:     PORTBbits.RB2 = 1;
  1343     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1344     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1345     07B2  1506               	bsf	6,2	;volatile
  1346     07B3                     l2410:
  1347                           
  1348                           ;lcd.c: 94:     Lcd_Port(y>>4);
  1349     07B3  1683               	bsf	3,5	;RP0=1, select bank1
  1350     07B4  1303               	bcf	3,6	;RP1=0, select bank1
  1351     07B5  0836               	movf	Lcd_Write_Char@y^(0+128),w
  1352     07B6  00B4               	movwf	??_Lcd_Write_Char^(0+128)
  1353     07B7  3004               	movlw	4
  1354     07B8                     u2355:
  1355     07B8  1003               	clrc
  1356     07B9  0CB4               	rrf	??_Lcd_Write_Char^(0+128),f
  1357     07BA  3EFF               	addlw	-1
  1358     07BB  1D03               	skipz
  1359     07BC  2FB8               	goto	u2355
  1360     07BD  0834               	movf	??_Lcd_Write_Char^(0+128),w
  1361     07BE  120A  158A  26D9  120A  118A  	fcall	_Lcd_Port
  1362     07C3                     l2412:
  1363                           
  1364                           ;lcd.c: 95:     PORTBbits.RB3 = 1;
  1365     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1366     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1367     07C5  1586               	bsf	6,3	;volatile
  1368     07C6                     l2414:
  1369                           
  1370                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1371     07C6  300C               	movlw	12
  1372     07C7  1683               	bsf	3,5	;RP0=1, select bank1
  1373     07C8  1303               	bcf	3,6	;RP1=0, select bank1
  1374     07C9  00B4               	movwf	??_Lcd_Write_Char^(0+128)
  1375     07CA                     u2557:
  1376     07CA  0BB4               	decfsz	??_Lcd_Write_Char^(0+128),f
  1377     07CB  2FCA               	goto	u2557
  1378     07CC  0000               	nop
  1379     07CD                     l2416:
  1380                           
  1381                           ;lcd.c: 97:     PORTBbits.RB3 = 0;
  1382     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1383     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1384     07CF  1186               	bcf	6,3	;volatile
  1385     07D0                     l2418:
  1386                           
  1387                           ;lcd.c: 98:     Lcd_Port(temp);
  1388     07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1389     07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1390     07D2  0835               	movf	Lcd_Write_Char@temp^(0+128),w
  1391     07D3  120A  158A  26D9  120A  118A  	fcall	_Lcd_Port
  1392     07D8                     l2420:
  1393                           
  1394                           ;lcd.c: 99:     PORTBbits.RB3 = 1;
  1395     07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1396     07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1397     07DA  1586               	bsf	6,3	;volatile
  1398     07DB                     l2422:
  1399                           
  1400                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1401     07DB  300C               	movlw	12
  1402     07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1403     07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1404     07DE  00B4               	movwf	??_Lcd_Write_Char^(0+128)
  1405     07DF                     u2567:
  1406     07DF  0BB4               	decfsz	??_Lcd_Write_Char^(0+128),f
  1407     07E0  2FDF               	goto	u2567
  1408     07E1  0000               	nop
  1409     07E2                     l2424:
  1410                           
  1411                           ;lcd.c: 101:     PORTBbits.RB3 = 0;
  1412     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1413     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1414     07E4  1186               	bcf	6,3	;volatile
  1415     07E5                     l149:
  1416     07E5  0008               	return
  1417     07E6                     __end_of_Lcd_Write_Char:
  1418                           
  1419                           	psect	text4
  1420     037E                     __ptext4:	
  1421 ;; *************** function _Lcd_Set_Cursor *****************
  1422 ;; Defined at:
  1423 ;;		line 26 in file "lcd.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  a               1    wreg     unsigned char 
  1426 ;;  b               1    3[BANK1 ] unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  a               1    5[BANK1 ] unsigned char 
  1429 ;;  temp            1    8[BANK1 ] unsigned char 
  1430 ;;  y               1    7[BANK1 ] unsigned char 
  1431 ;;  z               1    6[BANK1 ] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       1       0       0
  1442 ;;      Locals:         0       0       4       0       0
  1443 ;;      Temps:          0       0       1       0       0
  1444 ;;      Totals:         0       0       6       0       0
  1445 ;;Total ram usage:        6 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 6
  1448 ;; This function calls:
  1449 ;;		_Lcd_Cmd
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455     037E                     _Lcd_Set_Cursor:	
  1456                           ;psect for function _Lcd_Set_Cursor
  1457                           
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1461                           ;Lcd_Set_Cursor@a stored from wreg
  1462     037E  1683               	bsf	3,5	;RP0=1, select bank1
  1463     037F  1303               	bcf	3,6	;RP1=0, select bank1
  1464     0380  00B9               	movwf	Lcd_Set_Cursor@a^(0+128)
  1465     0381                     l2438:
  1466                           
  1467                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  1468     0381  0339               	decf	Lcd_Set_Cursor@a^(0+128),w
  1469     0382  1D03               	btfss	3,2
  1470     0383  2B85               	goto	u2361
  1471     0384  2B86               	goto	u2360
  1472     0385                     u2361:
  1473     0385  2BA5               	goto	l2448
  1474     0386                     u2360:
  1475     0386                     l2440:
  1476                           
  1477                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  1478     0386  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1479     0387  3E7F               	addlw	127
  1480     0388  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1481                           
  1482                           ;lcd.c: 32:         z = temp>>4;
  1483     0389  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1484     038A  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1485     038B  3004               	movlw	4
  1486     038C                     u2375:
  1487     038C  1003               	clrc
  1488     038D  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1489     038E  3EFF               	addlw	-1
  1490     038F  1D03               	skipz
  1491     0390  2B8C               	goto	u2375
  1492     0391  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1493     0392  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1494     0393                     l2442:
  1495                           
  1496                           ;lcd.c: 33:         y = temp & 0x0F;
  1497     0393  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1498     0394  390F               	andlw	15
  1499     0395  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1500     0396                     l2444:
  1501                           
  1502                           ;lcd.c: 34:         Lcd_Cmd(z);
  1503     0396  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1504     0397  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1505     039C                     l2446:
  1506                           
  1507                           ;lcd.c: 35:         Lcd_Cmd(y);
  1508     039C  1683               	bsf	3,5	;RP0=1, select bank1
  1509     039D  1303               	bcf	3,6	;RP1=0, select bank1
  1510     039E  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1511     039F  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1512                           
  1513                           ;lcd.c: 36:     }
  1514     03A4  2C14               	goto	l143
  1515     03A5                     l2448:
  1516     03A5  3002               	movlw	2
  1517     03A6  0639               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  1518     03A7  1D03               	btfss	3,2
  1519     03A8  2BAA               	goto	u2381
  1520     03A9  2BAB               	goto	u2380
  1521     03AA                     u2381:
  1522     03AA  2BCA               	goto	l2458
  1523     03AB                     u2380:
  1524     03AB                     l2450:
  1525                           
  1526                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  1527     03AB  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1528     03AC  3EBF               	addlw	191
  1529     03AD  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1530                           
  1531                           ;lcd.c: 40:         z = temp>>4;
  1532     03AE  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1533     03AF  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1534     03B0  3004               	movlw	4
  1535     03B1                     u2395:
  1536     03B1  1003               	clrc
  1537     03B2  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1538     03B3  3EFF               	addlw	-1
  1539     03B4  1D03               	skipz
  1540     03B5  2BB1               	goto	u2395
  1541     03B6  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1542     03B7  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1543     03B8                     l2452:
  1544                           
  1545                           ;lcd.c: 41:         y = temp & 0x0F;
  1546     03B8  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1547     03B9  390F               	andlw	15
  1548     03BA  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1549     03BB                     l2454:
  1550                           
  1551                           ;lcd.c: 42:         Lcd_Cmd(z);
  1552     03BB  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1553     03BC  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1554     03C1                     l2456:
  1555                           
  1556                           ;lcd.c: 43:         Lcd_Cmd(y);
  1557     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  1558     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  1559     03C3  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1560     03C4  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1561                           
  1562                           ;lcd.c: 44:     }
  1563     03C9  2C14               	goto	l143
  1564     03CA                     l2458:
  1565     03CA  3003               	movlw	3
  1566     03CB  0639               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  1567     03CC  1D03               	btfss	3,2
  1568     03CD  2BCF               	goto	u2401
  1569     03CE  2BD0               	goto	u2400
  1570     03CF                     u2401:
  1571     03CF  2BEF               	goto	l2468
  1572     03D0                     u2400:
  1573     03D0                     l2460:
  1574                           
  1575                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  1576     03D0  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1577     03D1  3E93               	addlw	147
  1578     03D2  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1579                           
  1580                           ;lcd.c: 48:         z = temp>>4;
  1581     03D3  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1582     03D4  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1583     03D5  3004               	movlw	4
  1584     03D6                     u2415:
  1585     03D6  1003               	clrc
  1586     03D7  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1587     03D8  3EFF               	addlw	-1
  1588     03D9  1D03               	skipz
  1589     03DA  2BD6               	goto	u2415
  1590     03DB  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1591     03DC  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1592     03DD                     l2462:
  1593                           
  1594                           ;lcd.c: 49:         y = temp & 0x0F;
  1595     03DD  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1596     03DE  390F               	andlw	15
  1597     03DF  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1598     03E0                     l2464:
  1599                           
  1600                           ;lcd.c: 50:         Lcd_Cmd(z);
  1601     03E0  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1602     03E1  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1603     03E6                     l2466:
  1604                           
  1605                           ;lcd.c: 51:         Lcd_Cmd(y);
  1606     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1607     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1608     03E8  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1609     03E9  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1610                           
  1611                           ;lcd.c: 52:     }
  1612     03EE  2C14               	goto	l143
  1613     03EF                     l2468:
  1614     03EF  3004               	movlw	4
  1615     03F0  0639               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  1616     03F1  1D03               	btfss	3,2
  1617     03F2  2BF4               	goto	u2421
  1618     03F3  2BF5               	goto	u2420
  1619     03F4                     u2421:
  1620     03F4  2C14               	goto	l139
  1621     03F5                     u2420:
  1622     03F5                     l2470:
  1623                           
  1624                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  1625     03F5  0837               	movf	Lcd_Set_Cursor@b^(0+128),w
  1626     03F6  3ED3               	addlw	211
  1627     03F7  00BC               	movwf	Lcd_Set_Cursor@temp^(0+128)
  1628                           
  1629                           ;lcd.c: 56:         z = temp>>4;
  1630     03F8  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1631     03F9  00B8               	movwf	??_Lcd_Set_Cursor^(0+128)
  1632     03FA  3004               	movlw	4
  1633     03FB                     u2435:
  1634     03FB  1003               	clrc
  1635     03FC  0CB8               	rrf	??_Lcd_Set_Cursor^(0+128),f
  1636     03FD  3EFF               	addlw	-1
  1637     03FE  1D03               	skipz
  1638     03FF  2BFB               	goto	u2435
  1639     0400  0838               	movf	??_Lcd_Set_Cursor^(0+128),w
  1640     0401  00BA               	movwf	Lcd_Set_Cursor@z^(0+128)
  1641     0402                     l2472:
  1642                           
  1643                           ;lcd.c: 57:         y = temp & 0x0F;
  1644     0402  083C               	movf	Lcd_Set_Cursor@temp^(0+128),w
  1645     0403  390F               	andlw	15
  1646     0404  00BB               	movwf	Lcd_Set_Cursor@y^(0+128)
  1647     0405                     l2474:
  1648                           
  1649                           ;lcd.c: 58:         Lcd_Cmd(z);
  1650     0405  083A               	movf	Lcd_Set_Cursor@z^(0+128),w
  1651     0406  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1652     040B                     l2476:
  1653                           
  1654                           ;lcd.c: 59:         Lcd_Cmd(y);
  1655     040B  1683               	bsf	3,5	;RP0=1, select bank1
  1656     040C  1303               	bcf	3,6	;RP1=0, select bank1
  1657     040D  083B               	movf	Lcd_Set_Cursor@y^(0+128),w
  1658     040E  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1659     0413  2C14               	goto	l143
  1660     0414                     l139:
  1661     0414                     l143:
  1662     0414  0008               	return
  1663     0415                     __end_of_Lcd_Set_Cursor:
  1664                           
  1665                           	psect	text5
  1666     0533                     __ptext5:	
  1667 ;; *************** function _Lcd_Init *****************
  1668 ;; Defined at:
  1669 ;;		line 63 in file "lcd.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;                  1    wreg      void 
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, pclath, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0
  1685 ;;      Temps:          0       0       2       0       0
  1686 ;;      Totals:         0       0       2       0       0
  1687 ;;Total ram usage:        2 bytes
  1688 ;; Hardware stack levels used: 1
  1689 ;; Hardware stack levels required when called: 7
  1690 ;; This function calls:
  1691 ;;		_Lcd_Clear
  1692 ;;		_Lcd_Cmd
  1693 ;;		_Lcd_Port
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699     0533                     _Lcd_Init:	
  1700                           ;psect for function _Lcd_Init
  1701                           
  1702     0533                     l2426:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1705                           
  1706                           
  1707                           ;lcd.c: 65:  TRISBbits.TRISB2 = 0;
  1708     0533  1683               	bsf	3,5	;RP0=1, select bank1
  1709     0534  1303               	bcf	3,6	;RP1=0, select bank1
  1710     0535  1106               	bcf	6,2	;volatile
  1711                           
  1712                           ;lcd.c: 66:  TRISBbits.TRISB3 = 0;
  1713     0536  1186               	bcf	6,3	;volatile
  1714                           
  1715                           ;lcd.c: 67:  TRISBbits.TRISB4 = 0;
  1716     0537  1206               	bcf	6,4	;volatile
  1717                           
  1718                           ;lcd.c: 68:  TRISBbits.TRISB5 = 0;
  1719     0538  1286               	bcf	6,5	;volatile
  1720                           
  1721                           ;lcd.c: 69:  TRISBbits.TRISB6 = 0;
  1722     0539  1306               	bcf	6,6	;volatile
  1723                           
  1724                           ;lcd.c: 70:  TRISBbits.TRISB7 = 0;
  1725     053A  1386               	bcf	6,7	;volatile
  1726     053B                     l2428:
  1727                           
  1728                           ;lcd.c: 71:     Lcd_Port(0x00);
  1729     053B  3000               	movlw	0
  1730     053C  120A  158A  26D9  120A  118A  	fcall	_Lcd_Port
  1731     0541                     l2430:
  1732                           
  1733                           ;lcd.c: 72:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1734     0541  301A               	movlw	26
  1735     0542  1683               	bsf	3,5	;RP0=1, select bank1
  1736     0543  1303               	bcf	3,6	;RP1=0, select bank1
  1737     0544  00B8               	movwf	(??_Lcd_Init^(0+128)+1)
  1738     0545  30F7               	movlw	247
  1739     0546  00B7               	movwf	??_Lcd_Init^(0+128)
  1740     0547                     u2577:
  1741     0547  0BB7               	decfsz	??_Lcd_Init^(0+128),f
  1742     0548  2D47               	goto	u2577
  1743     0549  0BB8               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1744     054A  2D47               	goto	u2577
  1745     054B  2D4C               	nop2
  1746     054C                     l2432:
  1747                           
  1748                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  1749     054C  3003               	movlw	3
  1750     054D  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1751                           
  1752                           ;lcd.c: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1753     0552  3007               	movlw	7
  1754     0553  1683               	bsf	3,5	;RP0=1, select bank1
  1755     0554  1303               	bcf	3,6	;RP1=0, select bank1
  1756     0555  00B8               	movwf	(??_Lcd_Init^(0+128)+1)
  1757     0556  307C               	movlw	124
  1758     0557  00B7               	movwf	??_Lcd_Init^(0+128)
  1759     0558                     u2587:
  1760     0558  0BB7               	decfsz	??_Lcd_Init^(0+128),f
  1761     0559  2D58               	goto	u2587
  1762     055A  0BB8               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1763     055B  2D58               	goto	u2587
  1764     055C  0000               	nop
  1765     055D                     l2434:
  1766                           
  1767                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  1768     055D  3003               	movlw	3
  1769     055E  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1770     0563                     l2436:
  1771                           
  1772                           ;lcd.c: 76:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1773     0563  300F               	movlw	15
  1774     0564  1683               	bsf	3,5	;RP0=1, select bank1
  1775     0565  1303               	bcf	3,6	;RP1=0, select bank1
  1776     0566  00B8               	movwf	(??_Lcd_Init^(0+128)+1)
  1777     0567  3047               	movlw	71
  1778     0568  00B7               	movwf	??_Lcd_Init^(0+128)
  1779     0569                     u2597:
  1780     0569  0BB7               	decfsz	??_Lcd_Init^(0+128),f
  1781     056A  2D69               	goto	u2597
  1782     056B  0BB8               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1783     056C  2D69               	goto	u2597
  1784                           
  1785                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  1786     056D  3003               	movlw	3
  1787     056E  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1788                           
  1789                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  1790     0573  3002               	movlw	2
  1791     0574  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1792                           
  1793                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  1794     0579  3002               	movlw	2
  1795     057A  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1796                           
  1797                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  1798     057F  3008               	movlw	8
  1799     0580  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1800                           
  1801                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  1802     0585  3000               	movlw	0
  1803     0586  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1804                           
  1805                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  1806     058B  300C               	movlw	12
  1807     058C  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1808                           
  1809                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  1810     0591  3000               	movlw	0
  1811     0592  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1812                           
  1813                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  1814     0597  3006               	movlw	6
  1815     0598  120A  158A  26F9  120A  118A  	fcall	_Lcd_Cmd
  1816                           
  1817                           ;lcd.c: 85:     Lcd_Clear();
  1818     059D  120A  158A  269C  120A  118A  	fcall	_Lcd_Clear
  1819     05A2                     l146:
  1820     05A2  0008               	return
  1821     05A3                     __end_of_Lcd_Init:
  1822                           
  1823                           	psect	text6
  1824     0E9C                     __ptext6:	
  1825 ;; *************** function _Lcd_Clear *****************
  1826 ;; Defined at:
  1827 ;;		line 20 in file "lcd.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 6
  1848 ;; This function calls:
  1849 ;;		_Lcd_Cmd
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;;		_Lcd_Init
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856     0E9C                     _Lcd_Clear:	
  1857                           ;psect for function _Lcd_Clear
  1858                           
  1859     0E9C                     l2404:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1862                           
  1863                           
  1864                           ;lcd.c: 22:     Lcd_Cmd(0);
  1865     0E9C  3000               	movlw	0
  1866     0E9D  120A  158A  26F9  120A  158A  	fcall	_Lcd_Cmd
  1867                           
  1868                           ;lcd.c: 23:     Lcd_Cmd(1);
  1869     0EA2  3001               	movlw	1
  1870     0EA3  120A  158A  26F9  120A  158A  	fcall	_Lcd_Cmd
  1871     0EA8                     l133:
  1872     0EA8  0008               	return
  1873     0EA9                     __end_of_Lcd_Clear:
  1874                           
  1875                           	psect	text7
  1876     0EF9                     __ptext7:	
  1877 ;; *************** function _Lcd_Cmd *****************
  1878 ;; Defined at:
  1879 ;;		line 11 in file "lcd.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  a               1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  a               1    2[BANK1 ] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       1       0       0
  1895 ;;      Temps:          0       0       2       0       0
  1896 ;;      Totals:         0       0       3       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 5
  1900 ;; This function calls:
  1901 ;;		_Lcd_Port
  1902 ;; This function is called by:
  1903 ;;		_Lcd_Clear
  1904 ;;		_Lcd_Set_Cursor
  1905 ;;		_Lcd_Init
  1906 ;;		_Lcd_Shift_Right
  1907 ;;		_Lcd_Shift_Left
  1908 ;;		_Lcd_Blink
  1909 ;;		_Lcd_NoBlink
  1910 ;;		_Lcd_CGRAM_Init
  1911 ;;		_Lcd_CGRAM_Close
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915     0EF9                     _Lcd_Cmd:	
  1916                           ;psect for function _Lcd_Cmd
  1917                           
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1921                           ;Lcd_Cmd@a stored from wreg
  1922     0EF9  1683               	bsf	3,5	;RP0=1, select bank1
  1923     0EFA  1303               	bcf	3,6	;RP1=0, select bank1
  1924     0EFB  00B6               	movwf	Lcd_Cmd@a^(0+128)
  1925     0EFC                     l2394:
  1926                           
  1927                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTBbits.RB2 = 0;
  1928     0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  1929     0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  1930     0EFE  1106               	bcf	6,2	;volatile
  1931     0EFF                     l2396:
  1932                           
  1933                           ;lcd.c: 14:     Lcd_Port(a);
  1934     0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  1935     0F00  1303               	bcf	3,6	;RP1=0, select bank1
  1936     0F01  0836               	movf	Lcd_Cmd@a^(0+128),w
  1937     0F02  120A  158A  26D9  120A  158A  	fcall	_Lcd_Port
  1938     0F07                     l2398:
  1939                           
  1940                           ;lcd.c: 15:     PORTBbits.RB3 = 1;
  1941     0F07  1283               	bcf	3,5	;RP0=0, select bank0
  1942     0F08  1303               	bcf	3,6	;RP1=0, select bank0
  1943     0F09  1586               	bsf	6,3	;volatile
  1944     0F0A                     l2400:
  1945                           
  1946                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1947     0F0A  3006               	movlw	6
  1948     0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  1949     0F0C  1303               	bcf	3,6	;RP1=0, select bank1
  1950     0F0D  00B5               	movwf	(??_Lcd_Cmd^(0+128)+1)
  1951     0F0E  302F               	movlw	47
  1952     0F0F  00B4               	movwf	??_Lcd_Cmd^(0+128)
  1953     0F10                     u2607:
  1954     0F10  0BB4               	decfsz	??_Lcd_Cmd^(0+128),f
  1955     0F11  2F10               	goto	u2607
  1956     0F12  0BB5               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  1957     0F13  2F10               	goto	u2607
  1958     0F14  2F15               	nop2
  1959     0F15                     l2402:
  1960                           
  1961                           ;lcd.c: 17:     PORTBbits.RB3 = 0;
  1962     0F15  1283               	bcf	3,5	;RP0=0, select bank0
  1963     0F16  1303               	bcf	3,6	;RP1=0, select bank0
  1964     0F17  1186               	bcf	6,3	;volatile
  1965     0F18                     l130:
  1966     0F18  0008               	return
  1967     0F19                     __end_of_Lcd_Cmd:
  1968                           
  1969                           	psect	text8
  1970     0ED9                     __ptext8:	
  1971 ;; *************** function _Lcd_Port *****************
  1972 ;; Defined at:
  1973 ;;		line 3 in file "lcd.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  a               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  a               1   29[BANK0 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         0       1       0       0       0
  1989 ;;      Temps:          0       0       0       0       0
  1990 ;;      Totals:         0       1       0       0       0
  1991 ;;Total ram usage:        1 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 4
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_Lcd_Cmd
  1998 ;;		_Lcd_Init
  1999 ;;		_Lcd_Write_Char
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003     0ED9                     _Lcd_Port:	
  2004                           ;psect for function _Lcd_Port
  2005                           
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _Lcd_Port: [wreg]
  2009                           ;Lcd_Port@a stored from wreg
  2010     0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  2011     0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  2012     0EDB  00BD               	movwf	Lcd_Port@a
  2013     0EDC                     l2384:
  2014                           
  2015                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  2016     0EDC  1C3D               	btfss	Lcd_Port@a,0
  2017     0EDD  2EDF               	goto	u2311
  2018     0EDE  2EE0               	goto	u2310
  2019     0EDF                     u2311:
  2020     0EDF  2EE2               	goto	l112
  2021     0EE0                     u2310:
  2022     0EE0                     l2386:
  2023     0EE0  1606               	bsf	6,4	;volatile
  2024     0EE1  2EE3               	goto	l114
  2025     0EE2                     l112:
  2026     0EE2  1206               	bcf	6,4	;volatile
  2027     0EE3                     l114:
  2028                           
  2029                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  2030     0EE3  1CBD               	btfss	Lcd_Port@a,1
  2031     0EE4  2EE6               	goto	u2321
  2032     0EE5  2EE7               	goto	u2320
  2033     0EE6                     u2321:
  2034     0EE6  2EE9               	goto	l116
  2035     0EE7                     u2320:
  2036     0EE7                     l2388:
  2037     0EE7  1686               	bsf	6,5	;volatile
  2038     0EE8  2EEA               	goto	l118
  2039     0EE9                     l116:
  2040     0EE9  1286               	bcf	6,5	;volatile
  2041     0EEA                     l118:
  2042                           
  2043                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  2044     0EEA  1D3D               	btfss	Lcd_Port@a,2
  2045     0EEB  2EED               	goto	u2331
  2046     0EEC  2EEE               	goto	u2330
  2047     0EED                     u2331:
  2048     0EED  2EF0               	goto	l120
  2049     0EEE                     u2330:
  2050     0EEE                     l2390:
  2051     0EEE  1706               	bsf	6,6	;volatile
  2052     0EEF  2EF1               	goto	l122
  2053     0EF0                     l120:
  2054     0EF0  1306               	bcf	6,6	;volatile
  2055     0EF1                     l122:
  2056                           
  2057                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  2058     0EF1  1DBD               	btfss	Lcd_Port@a,3
  2059     0EF2  2EF4               	goto	u2341
  2060     0EF3  2EF5               	goto	u2340
  2061     0EF4                     u2341:
  2062     0EF4  2EF7               	goto	l124
  2063     0EF5                     u2340:
  2064     0EF5                     l2392:
  2065     0EF5  1786               	bsf	6,7	;volatile
  2066     0EF6  2EF8               	goto	l127
  2067     0EF7                     l124:
  2068     0EF7  1386               	bcf	6,7	;volatile
  2069     0EF8                     l127:
  2070     0EF8  0008               	return
  2071     0EF9                     __end_of_Lcd_Port:
  2072                           
  2073                           	psect	text9
  2074     0EA9                     __ptext9:	
  2075 ;; *************** function _ADC_setup *****************
  2076 ;; Defined at:
  2077 ;;		line 7 in file "ADC.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0
  2093 ;;      Temps:          0       1       0       0       0
  2094 ;;      Totals:         0       1       0       0       0
  2095 ;;Total ram usage:        1 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 4
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_main
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105     0EA9                     _ADC_setup:	
  2106                           ;psect for function _ADC_setup
  2107                           
  2108     0EA9                     l1854:	
  2109                           ;incstack = 0
  2110                           ; Regs used in _ADC_setup: [wreg]
  2111                           
  2112                           
  2113                           ;ADC.c: 8:     ADCON0bits.ADCS1 = 0;
  2114     0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  2116     0EAB  139F               	bcf	31,7	;volatile
  2117                           
  2118                           ;ADC.c: 9:     ADCON0bits.ADCS0 = 1;
  2119     0EAC  171F               	bsf	31,6	;volatile
  2120                           
  2121                           ;ADC.c: 11:     ADCON1bits.VCFG1 = 0;
  2122     0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  2123     0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  2124     0EAF  129F               	bcf	31,5	;volatile
  2125                           
  2126                           ;ADC.c: 12:     ADCON1bits.VCFG0 = 0;
  2127     0EB0  121F               	bcf	31,4	;volatile
  2128                           
  2129                           ;ADC.c: 14:     ADCON1bits.ADFM = 0;
  2130     0EB1  139F               	bcf	31,7	;volatile
  2131                           
  2132                           ;ADC.c: 16:     ADCON0bits.CHS3 = 0;
  2133     0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  2134     0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  2135     0EB4  129F               	bcf	31,5	;volatile
  2136                           
  2137                           ;ADC.c: 17:     ADCON0bits.CHS2 = 0;
  2138     0EB5  121F               	bcf	31,4	;volatile
  2139                           
  2140                           ;ADC.c: 18:     ADCON0bits.CHS1 = 0;
  2141     0EB6  119F               	bcf	31,3	;volatile
  2142                           
  2143                           ;ADC.c: 19:     ADCON0bits.CHS0 = 0;
  2144     0EB7  111F               	bcf	31,2	;volatile
  2145                           
  2146                           ;ADC.c: 21:     ADCON0bits.ADON = 1;
  2147     0EB8  141F               	bsf	31,0	;volatile
  2148     0EB9                     l1856:
  2149                           
  2150                           ;ADC.c: 22:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2151     0EB9  3020               	movlw	32
  2152     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  2153     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  2154     0EBC  00BD               	movwf	??_ADC_setup
  2155     0EBD                     u2617:
  2156     0EBD  0BBD               	decfsz	??_ADC_setup,f
  2157     0EBE  2EBD               	goto	u2617
  2158     0EBF  0000               	nop
  2159     0EC0                     l219:
  2160     0EC0  0008               	return
  2161     0EC1                     __end_of_ADC_setup:
  2162                           
  2163                           	psect	text10
  2164     0415                     __ptext10:	
  2165 ;; *************** function _ADC_config *****************
  2166 ;; Defined at:
  2167 ;;		line 25 in file "ADC.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  channel         1    wreg     unsigned char 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  channel         1   29[BANK0 ] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       0       0       0       0
  2182 ;;      Locals:         0       1       0       0       0
  2183 ;;      Temps:          0       0       0       0       0
  2184 ;;      Totals:         0       1       0       0       0
  2185 ;;Total ram usage:        1 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 4
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195     0415                     _ADC_config:	
  2196                           ;psect for function _ADC_config
  2197                           
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _ADC_config: [wreg+status,2+status,0]
  2201                           ;ADC_config@channel stored from wreg
  2202     0415  1283               	bcf	3,5	;RP0=0, select bank0
  2203     0416  1303               	bcf	3,6	;RP1=0, select bank0
  2204     0417  00BD               	movwf	ADC_config@channel
  2205     0418                     l1858:
  2206                           
  2207                           ;ADC.c: 26:     if (channel == 0){
  2208     0418  083D               	movf	ADC_config@channel,w
  2209     0419  1D03               	btfss	3,2
  2210     041A  2C1C               	goto	u1541
  2211     041B  2C1D               	goto	u1540
  2212     041C                     u1541:
  2213     041C  2C21               	goto	l1862
  2214     041D                     u1540:
  2215     041D                     l1860:
  2216                           
  2217                           ;ADC.c: 27:         ANSELbits.ANS0 = 1;
  2218     041D  1683               	bsf	3,5	;RP0=1, select bank3
  2219     041E  1703               	bsf	3,6	;RP1=1, select bank3
  2220     041F  1408               	bsf	8,0	;volatile
  2221                           
  2222                           ;ADC.c: 28:     }
  2223     0420  2CA5               	goto	l250
  2224     0421                     l1862:
  2225     0421  033D               	decf	ADC_config@channel,w
  2226     0422  1D03               	btfss	3,2
  2227     0423  2C25               	goto	u1551
  2228     0424  2C26               	goto	u1550
  2229     0425                     u1551:
  2230     0425  2C2A               	goto	l1866
  2231     0426                     u1550:
  2232     0426                     l1864:
  2233                           
  2234                           ;ADC.c: 30:         ANSELbits.ANS1 = 1;
  2235     0426  1683               	bsf	3,5	;RP0=1, select bank3
  2236     0427  1703               	bsf	3,6	;RP1=1, select bank3
  2237     0428  1488               	bsf	8,1	;volatile
  2238                           
  2239                           ;ADC.c: 31:     }
  2240     0429  2CA5               	goto	l250
  2241     042A                     l1866:
  2242     042A  3002               	movlw	2
  2243     042B  063D               	xorwf	ADC_config@channel,w
  2244     042C  1D03               	btfss	3,2
  2245     042D  2C2F               	goto	u1561
  2246     042E  2C30               	goto	u1560
  2247     042F                     u1561:
  2248     042F  2C34               	goto	l1870
  2249     0430                     u1560:
  2250     0430                     l1868:
  2251                           
  2252                           ;ADC.c: 33:         ANSELbits.ANS2 = 1;
  2253     0430  1683               	bsf	3,5	;RP0=1, select bank3
  2254     0431  1703               	bsf	3,6	;RP1=1, select bank3
  2255     0432  1508               	bsf	8,2	;volatile
  2256                           
  2257                           ;ADC.c: 34:     }
  2258     0433  2CA5               	goto	l250
  2259     0434                     l1870:
  2260     0434  3003               	movlw	3
  2261     0435  063D               	xorwf	ADC_config@channel,w
  2262     0436  1D03               	btfss	3,2
  2263     0437  2C39               	goto	u1571
  2264     0438  2C3A               	goto	u1570
  2265     0439                     u1571:
  2266     0439  2C3E               	goto	l1874
  2267     043A                     u1570:
  2268     043A                     l1872:
  2269                           
  2270                           ;ADC.c: 36:         ANSELbits.ANS3 = 1;
  2271     043A  1683               	bsf	3,5	;RP0=1, select bank3
  2272     043B  1703               	bsf	3,6	;RP1=1, select bank3
  2273     043C  1588               	bsf	8,3	;volatile
  2274                           
  2275                           ;ADC.c: 37:     }
  2276     043D  2CA5               	goto	l250
  2277     043E                     l1874:
  2278     043E  3004               	movlw	4
  2279     043F  063D               	xorwf	ADC_config@channel,w
  2280     0440  1D03               	btfss	3,2
  2281     0441  2C43               	goto	u1581
  2282     0442  2C44               	goto	u1580
  2283     0443                     u1581:
  2284     0443  2C48               	goto	l1878
  2285     0444                     u1580:
  2286     0444                     l1876:
  2287                           
  2288                           ;ADC.c: 39:         ANSELbits.ANS4 = 1;
  2289     0444  1683               	bsf	3,5	;RP0=1, select bank3
  2290     0445  1703               	bsf	3,6	;RP1=1, select bank3
  2291     0446  1608               	bsf	8,4	;volatile
  2292                           
  2293                           ;ADC.c: 40:     }
  2294     0447  2CA5               	goto	l250
  2295     0448                     l1878:
  2296     0448  3005               	movlw	5
  2297     0449  063D               	xorwf	ADC_config@channel,w
  2298     044A  1D03               	btfss	3,2
  2299     044B  2C4D               	goto	u1591
  2300     044C  2C4E               	goto	u1590
  2301     044D                     u1591:
  2302     044D  2C52               	goto	l1882
  2303     044E                     u1590:
  2304     044E                     l1880:
  2305                           
  2306                           ;ADC.c: 42:         ANSELbits.ANS5 = 1;
  2307     044E  1683               	bsf	3,5	;RP0=1, select bank3
  2308     044F  1703               	bsf	3,6	;RP1=1, select bank3
  2309     0450  1688               	bsf	8,5	;volatile
  2310                           
  2311                           ;ADC.c: 43:     }
  2312     0451  2CA5               	goto	l250
  2313     0452                     l1882:
  2314     0452  3006               	movlw	6
  2315     0453  063D               	xorwf	ADC_config@channel,w
  2316     0454  1D03               	btfss	3,2
  2317     0455  2C57               	goto	u1601
  2318     0456  2C58               	goto	u1600
  2319     0457                     u1601:
  2320     0457  2C5C               	goto	l1886
  2321     0458                     u1600:
  2322     0458                     l1884:
  2323                           
  2324                           ;ADC.c: 45:         ANSELbits.ANS6 = 1;
  2325     0458  1683               	bsf	3,5	;RP0=1, select bank3
  2326     0459  1703               	bsf	3,6	;RP1=1, select bank3
  2327     045A  1708               	bsf	8,6	;volatile
  2328                           
  2329                           ;ADC.c: 46:     }
  2330     045B  2CA5               	goto	l250
  2331     045C                     l1886:
  2332     045C  3007               	movlw	7
  2333     045D  063D               	xorwf	ADC_config@channel,w
  2334     045E  1D03               	btfss	3,2
  2335     045F  2C61               	goto	u1611
  2336     0460  2C62               	goto	u1610
  2337     0461                     u1611:
  2338     0461  2C66               	goto	l1890
  2339     0462                     u1610:
  2340     0462                     l1888:
  2341                           
  2342                           ;ADC.c: 48:         ANSELbits.ANS7 = 1;
  2343     0462  1683               	bsf	3,5	;RP0=1, select bank3
  2344     0463  1703               	bsf	3,6	;RP1=1, select bank3
  2345     0464  1788               	bsf	8,7	;volatile
  2346                           
  2347                           ;ADC.c: 49:     }
  2348     0465  2CA5               	goto	l250
  2349     0466                     l1890:
  2350     0466  3008               	movlw	8
  2351     0467  063D               	xorwf	ADC_config@channel,w
  2352     0468  1D03               	btfss	3,2
  2353     0469  2C6B               	goto	u1621
  2354     046A  2C6C               	goto	u1620
  2355     046B                     u1621:
  2356     046B  2C70               	goto	l1894
  2357     046C                     u1620:
  2358     046C                     l1892:
  2359                           
  2360                           ;ADC.c: 51:         ANSELHbits.ANS8 = 1;
  2361     046C  1683               	bsf	3,5	;RP0=1, select bank3
  2362     046D  1703               	bsf	3,6	;RP1=1, select bank3
  2363     046E  1409               	bsf	9,0	;volatile
  2364                           
  2365                           ;ADC.c: 52:     }
  2366     046F  2CA5               	goto	l250
  2367     0470                     l1894:
  2368     0470  3009               	movlw	9
  2369     0471  063D               	xorwf	ADC_config@channel,w
  2370     0472  1D03               	btfss	3,2
  2371     0473  2C75               	goto	u1631
  2372     0474  2C76               	goto	u1630
  2373     0475                     u1631:
  2374     0475  2C7A               	goto	l1898
  2375     0476                     u1630:
  2376     0476                     l1896:
  2377                           
  2378                           ;ADC.c: 54:         ANSELHbits.ANS9 = 1;
  2379     0476  1683               	bsf	3,5	;RP0=1, select bank3
  2380     0477  1703               	bsf	3,6	;RP1=1, select bank3
  2381     0478  1489               	bsf	9,1	;volatile
  2382                           
  2383                           ;ADC.c: 55:     }
  2384     0479  2CA5               	goto	l250
  2385     047A                     l1898:
  2386     047A  300A               	movlw	10
  2387     047B  063D               	xorwf	ADC_config@channel,w
  2388     047C  1D03               	btfss	3,2
  2389     047D  2C7F               	goto	u1641
  2390     047E  2C80               	goto	u1640
  2391     047F                     u1641:
  2392     047F  2C84               	goto	l1902
  2393     0480                     u1640:
  2394     0480                     l1900:
  2395                           
  2396                           ;ADC.c: 57:         ANSELHbits.ANS10 = 1;
  2397     0480  1683               	bsf	3,5	;RP0=1, select bank3
  2398     0481  1703               	bsf	3,6	;RP1=1, select bank3
  2399     0482  1509               	bsf	9,2	;volatile
  2400                           
  2401                           ;ADC.c: 58:     }
  2402     0483  2CA5               	goto	l250
  2403     0484                     l1902:
  2404     0484  300B               	movlw	11
  2405     0485  063D               	xorwf	ADC_config@channel,w
  2406     0486  1D03               	btfss	3,2
  2407     0487  2C89               	goto	u1651
  2408     0488  2C8A               	goto	u1650
  2409     0489                     u1651:
  2410     0489  2C8E               	goto	l1906
  2411     048A                     u1650:
  2412     048A                     l1904:
  2413                           
  2414                           ;ADC.c: 60:         ANSELHbits.ANS11 = 1;
  2415     048A  1683               	bsf	3,5	;RP0=1, select bank3
  2416     048B  1703               	bsf	3,6	;RP1=1, select bank3
  2417     048C  1589               	bsf	9,3	;volatile
  2418                           
  2419                           ;ADC.c: 61:     }
  2420     048D  2CA5               	goto	l250
  2421     048E                     l1906:
  2422     048E  300C               	movlw	12
  2423     048F  063D               	xorwf	ADC_config@channel,w
  2424     0490  1D03               	btfss	3,2
  2425     0491  2C93               	goto	u1661
  2426     0492  2C94               	goto	u1660
  2427     0493                     u1661:
  2428     0493  2C98               	goto	l1910
  2429     0494                     u1660:
  2430     0494                     l1908:
  2431                           
  2432                           ;ADC.c: 63:         ANSELHbits.ANS12 = 1;
  2433     0494  1683               	bsf	3,5	;RP0=1, select bank3
  2434     0495  1703               	bsf	3,6	;RP1=1, select bank3
  2435     0496  1609               	bsf	9,4	;volatile
  2436                           
  2437                           ;ADC.c: 64:     }
  2438     0497  2CA5               	goto	l250
  2439     0498                     l1910:
  2440     0498  300D               	movlw	13
  2441     0499  063D               	xorwf	ADC_config@channel,w
  2442     049A  1D03               	btfss	3,2
  2443     049B  2C9D               	goto	u1671
  2444     049C  2C9E               	goto	u1670
  2445     049D                     u1671:
  2446     049D  2CA2               	goto	l248
  2447     049E                     u1670:
  2448     049E                     l1912:
  2449                           
  2450                           ;ADC.c: 66:         ANSELHbits.ANS13 = 1;
  2451     049E  1683               	bsf	3,5	;RP0=1, select bank3
  2452     049F  1703               	bsf	3,6	;RP1=1, select bank3
  2453     04A0  1689               	bsf	9,5	;volatile
  2454                           
  2455                           ;ADC.c: 67:     }
  2456     04A1  2CA5               	goto	l250
  2457     04A2                     l248:	
  2458                           ;ADC.c: 68:     else {
  2459                           
  2460                           
  2461                           ;ADC.c: 69:         ANSELbits.ANS0 = 1;
  2462     04A2  1683               	bsf	3,5	;RP0=1, select bank3
  2463     04A3  1703               	bsf	3,6	;RP1=1, select bank3
  2464     04A4  1408               	bsf	8,0	;volatile
  2465     04A5                     l250:
  2466     04A5  0008               	return
  2467     04A6                     __end_of_ADC_config:
  2468                           
  2469                           	psect	text11
  2470     002A                     __ptext11:	
  2471 ;; *************** function _isr *****************
  2472 ;; Defined at:
  2473 ;;		line 68 in file "main.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;		None
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2487 ;;      Params:         0       0       0       0       0
  2488 ;;      Locals:         0       0       0       0       0
  2489 ;;      Temps:          0       6       0       0       0
  2490 ;;      Totals:         0       6       0       0       0
  2491 ;;Total ram usage:        6 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 3
  2494 ;; This function calls:
  2495 ;;		_ADC_read
  2496 ;;		___awdiv
  2497 ;;		___awmod
  2498 ;;		___lwdiv
  2499 ;;		___lwmod
  2500 ;;		___wmul
  2501 ;;		_map
  2502 ;;		_sprintf
  2503 ;;		i1_Lcd_Set_Cursor
  2504 ;;		i1_Lcd_Write_String
  2505 ;; This function is called by:
  2506 ;;		Interrupt level 1
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     002A                     _isr:	
  2511                           ;psect for function _isr
  2512                           
  2513     002A                     i1l2236:
  2514                           
  2515                           ;main.c: 69:     if (PIR1bits.ADIF == 1){
  2516     002A  1F0C               	btfss	12,6	;volatile
  2517     002B  282D               	goto	u220_21
  2518     002C  282E               	goto	u220_20
  2519     002D                     u220_21:
  2520     002D  29D6               	goto	i1l90
  2521     002E                     u220_20:
  2522     002E                     i1l2238:
  2523                           
  2524                           ;main.c: 70:         if (ADCON0bits.CHS == 0b0000){
  2525     002E  0C1F               	rrf	31,w	;volatile
  2526     002F  00B7               	movwf	??_isr
  2527     0030  0C37               	rrf	??_isr,w
  2528     0031  390F               	andlw	15
  2529     0032  3A00               	xorlw	0
  2530     0033  1D03               	skipz
  2531     0034  2836               	goto	u221_21
  2532     0035  2837               	goto	u221_20
  2533     0036                     u221_21:
  2534     0036  2905               	goto	i1l2248
  2535     0037                     u221_20:
  2536     0037                     i1l2240:
  2537                           
  2538                           ;main.c: 71:         voltaje1 = ADC_read(0);
  2539     0037  3000               	movlw	0
  2540     0038  120A  118A  22BD  120A  118A  	fcall	_ADC_read
  2541     003D  0871               	movf	?_ADC_read+1,w
  2542     003E  1283               	bcf	3,5	;RP0=0, select bank0
  2543     003F  1303               	bcf	3,6	;RP1=0, select bank0
  2544     0040  00CF               	movwf	_voltaje1+1
  2545     0041  0870               	movf	?_ADC_read,w
  2546     0042  00CE               	movwf	_voltaje1
  2547                           
  2548                           ;main.c: 72:         vol1 = map(voltaje1, 0, 255, 0, 100);
  2549     0043  084F               	movf	_voltaje1+1,w
  2550     0044  00A5               	movwf	map@value+1
  2551     0045  084E               	movf	_voltaje1,w
  2552     0046  00A4               	movwf	map@value
  2553     0047  3000               	movlw	0
  2554     0048  00A6               	movwf	map@inputmin
  2555     0049  00A7               	movwf	map@inputmin+1
  2556     004A  30FF               	movlw	255
  2557     004B  00A8               	movwf	map@inputmax
  2558     004C  3000               	movlw	0
  2559     004D  00A9               	movwf	map@inputmax+1
  2560     004E  3000               	movlw	0
  2561     004F  00AA               	movwf	map@outmin
  2562     0050  00AB               	movwf	map@outmin+1
  2563     0051  3064               	movlw	100
  2564     0052  00AC               	movwf	map@outmax
  2565     0053  3000               	movlw	0
  2566     0054  00AD               	movwf	map@outmax+1
  2567     0055  120A  158A  2760  120A  118A  	fcall	_map
  2568     005A  1283               	bcf	3,5	;RP0=0, select bank0
  2569     005B  1303               	bcf	3,6	;RP1=0, select bank0
  2570     005C  00D2               	movwf	_vol1
  2571                           
  2572                           ;main.c: 73:         unidad1 = (vol1*5)/100;
  2573     005D  3064               	movlw	100
  2574     005E  00F6               	movwf	___awdiv@divisor
  2575     005F  3000               	movlw	0
  2576     0060  00F7               	movwf	___awdiv@divisor+1
  2577     0061  0852               	movf	_vol1,w
  2578     0062  00B7               	movwf	??_isr
  2579     0063  01B8               	clrf	??_isr+1
  2580     0064  0837               	movf	??_isr,w
  2581     0065  00F0               	movwf	___wmul@multiplier
  2582     0066  0838               	movf	??_isr+1,w
  2583     0067  00F1               	movwf	___wmul@multiplier+1
  2584     0068  3005               	movlw	5
  2585     0069  00F2               	movwf	___wmul@multiplicand
  2586     006A  3000               	movlw	0
  2587     006B  00F3               	movwf	___wmul@multiplicand+1
  2588     006C  120A  158A  273B  120A  118A  	fcall	___wmul
  2589     0071  0871               	movf	?___wmul+1,w
  2590     0072  00F9               	movwf	___awdiv@dividend+1
  2591     0073  0870               	movf	?___wmul,w
  2592     0074  00F8               	movwf	___awdiv@dividend
  2593     0075  120A  118A  25A3  120A  118A  	fcall	___awdiv
  2594     007A  0877               	movf	?___awdiv+1,w
  2595     007B  1283               	bcf	3,5	;RP0=0, select bank0
  2596     007C  1303               	bcf	3,6	;RP1=0, select bank0
  2597     007D  00C9               	movwf	_unidad1+1
  2598     007E  0876               	movf	?___awdiv,w
  2599     007F  00C8               	movwf	_unidad1
  2600                           
  2601                           ;main.c: 74:         decima1 = ((vol1*5)/10)%10;
  2602     0080  300A               	movlw	10
  2603     0081  00A4               	movwf	___awmod@divisor
  2604     0082  3000               	movlw	0
  2605     0083  00A5               	movwf	___awmod@divisor+1
  2606     0084  300A               	movlw	10
  2607     0085  00F6               	movwf	___awdiv@divisor
  2608     0086  3000               	movlw	0
  2609     0087  00F7               	movwf	___awdiv@divisor+1
  2610     0088  0852               	movf	_vol1,w
  2611     0089  00B7               	movwf	??_isr
  2612     008A  01B8               	clrf	??_isr+1
  2613     008B  0837               	movf	??_isr,w
  2614     008C  00F0               	movwf	___wmul@multiplier
  2615     008D  0838               	movf	??_isr+1,w
  2616     008E  00F1               	movwf	___wmul@multiplier+1
  2617     008F  3005               	movlw	5
  2618     0090  00F2               	movwf	___wmul@multiplicand
  2619     0091  3000               	movlw	0
  2620     0092  00F3               	movwf	___wmul@multiplicand+1
  2621     0093  120A  158A  273B  120A  118A  	fcall	___wmul
  2622     0098  0871               	movf	?___wmul+1,w
  2623     0099  00F9               	movwf	___awdiv@dividend+1
  2624     009A  0870               	movf	?___wmul,w
  2625     009B  00F8               	movwf	___awdiv@dividend
  2626     009C  120A  118A  25A3  120A  118A  	fcall	___awdiv
  2627     00A1  0877               	movf	?___awdiv+1,w
  2628     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2629     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2630     00A4  00A7               	movwf	___awmod@dividend+1
  2631     00A5  0876               	movf	?___awdiv,w
  2632     00A6  00A6               	movwf	___awmod@dividend
  2633     00A7  120A  118A  2672  120A  118A  	fcall	___awmod
  2634     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2635     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2636     00AE  0825               	movf	?___awmod+1,w
  2637     00AF  00C7               	movwf	_decima1+1
  2638     00B0  0824               	movf	?___awmod,w
  2639     00B1  00C6               	movwf	_decima1
  2640                           
  2641                           ;main.c: 75:         centesima1 = (vol1*5)%10;
  2642     00B2  300A               	movlw	10
  2643     00B3  00A4               	movwf	___awmod@divisor
  2644     00B4  3000               	movlw	0
  2645     00B5  00A5               	movwf	___awmod@divisor+1
  2646     00B6  0852               	movf	_vol1,w
  2647     00B7  00B7               	movwf	??_isr
  2648     00B8  01B8               	clrf	??_isr+1
  2649     00B9  0837               	movf	??_isr,w
  2650     00BA  00F0               	movwf	___wmul@multiplier
  2651     00BB  0838               	movf	??_isr+1,w
  2652     00BC  00F1               	movwf	___wmul@multiplier+1
  2653     00BD  3005               	movlw	5
  2654     00BE  00F2               	movwf	___wmul@multiplicand
  2655     00BF  3000               	movlw	0
  2656     00C0  00F3               	movwf	___wmul@multiplicand+1
  2657     00C1  120A  158A  273B  120A  118A  	fcall	___wmul
  2658     00C6  0871               	movf	?___wmul+1,w
  2659     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  2660     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  2661     00C9  00A7               	movwf	___awmod@dividend+1
  2662     00CA  0870               	movf	?___wmul,w
  2663     00CB  00A6               	movwf	___awmod@dividend
  2664     00CC  120A  118A  2672  120A  118A  	fcall	___awmod
  2665     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2666     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2667     00D3  0825               	movf	?___awmod+1,w
  2668     00D4  00C5               	movwf	_centesima1+1
  2669     00D5  0824               	movf	?___awmod,w
  2670     00D6  00C4               	movwf	_centesima1
  2671                           
  2672                           ;main.c: 76:         Lcd_Set_Cursor(2,1);
  2673     00D7  01F4               	clrf	i1Lcd_Set_Cursor@b
  2674     00D8  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2675     00D9  3002               	movlw	2
  2676     00DA  120A  118A  24A6  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2677     00DF                     i1l2242:
  2678                           
  2679                           ;main.c: 77:         sprintf(buffer, "%d.%d%dV " , unidad1 , decima1 , centesima1 );
  2680     00DF  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2681     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2682     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2683     00E2  00A6               	movwf	sprintf@f
  2684     00E3  0849               	movf	_unidad1+1,w
  2685     00E4  00A8               	movwf	?_sprintf+2
  2686     00E5  0848               	movf	_unidad1,w
  2687     00E6  00A7               	movwf	?_sprintf+1
  2688     00E7  0847               	movf	_decima1+1,w
  2689     00E8  00AA               	movwf	?_sprintf+4
  2690     00E9  0846               	movf	_decima1,w
  2691     00EA  00A9               	movwf	?_sprintf+3
  2692     00EB  0845               	movf	_centesima1+1,w
  2693     00EC  00AC               	movwf	?_sprintf+6
  2694     00ED  0844               	movf	_centesima1,w
  2695     00EE  00AB               	movwf	?_sprintf+5
  2696     00EF  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2697     00F0  120A  118A  21E1  120A  118A  	fcall	_sprintf
  2698     00F5                     i1l2244:
  2699                           
  2700                           ;main.c: 78:         Lcd_Write_String(buffer);
  2701     00F5  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2702     00F6  00F5               	movwf	i1Lcd_Write_String@a
  2703     00F7  3000               	movlw	0
  2704     00F8  00F6               	movwf	i1Lcd_Write_String@a+1
  2705     00F9  120A  118A  2765  120A  118A  	fcall	i1_Lcd_Write_String
  2706     00FE                     i1l2246:
  2707                           
  2708                           ;main.c: 79:         ADCON0bits.CHS = 0b0001;}
  2709     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2710     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2711     0100  081F               	movf	31,w	;volatile
  2712     0101  39C3               	andlw	-61
  2713     0102  3804               	iorlw	4
  2714     0103  009F               	movwf	31	;volatile
  2715     0104  29D5               	goto	i1l2258
  2716     0105                     i1l2248:
  2717     0105  0C1F               	rrf	31,w	;volatile
  2718     0106  00B7               	movwf	??_isr
  2719     0107  0C37               	rrf	??_isr,w
  2720     0108  390F               	andlw	15
  2721     0109  3A01               	xorlw	1
  2722     010A  1D03               	skipz
  2723     010B  290D               	goto	u222_21
  2724     010C  290E               	goto	u222_20
  2725     010D                     u222_21:
  2726     010D  29D5               	goto	i1l2258
  2727     010E                     u222_20:
  2728     010E                     i1l2250:
  2729                           
  2730                           ;main.c: 81:         voltaje2 = ADC_read(1);
  2731     010E  3001               	movlw	1
  2732     010F  120A  118A  22BD  120A  118A  	fcall	_ADC_read
  2733     0114  0871               	movf	?_ADC_read+1,w
  2734     0115  1283               	bcf	3,5	;RP0=0, select bank0
  2735     0116  1303               	bcf	3,6	;RP1=0, select bank0
  2736     0117  00CD               	movwf	_voltaje2+1
  2737     0118  0870               	movf	?_ADC_read,w
  2738     0119  00CC               	movwf	_voltaje2
  2739                           
  2740                           ;main.c: 82:         vol2 = map(voltaje2, 0, 255, 0, 100);
  2741     011A  084D               	movf	_voltaje2+1,w
  2742     011B  00A5               	movwf	map@value+1
  2743     011C  084C               	movf	_voltaje2,w
  2744     011D  00A4               	movwf	map@value
  2745     011E  3000               	movlw	0
  2746     011F  00A6               	movwf	map@inputmin
  2747     0120  00A7               	movwf	map@inputmin+1
  2748     0121  30FF               	movlw	255
  2749     0122  00A8               	movwf	map@inputmax
  2750     0123  3000               	movlw	0
  2751     0124  00A9               	movwf	map@inputmax+1
  2752     0125  3000               	movlw	0
  2753     0126  00AA               	movwf	map@outmin
  2754     0127  00AB               	movwf	map@outmin+1
  2755     0128  3064               	movlw	100
  2756     0129  00AC               	movwf	map@outmax
  2757     012A  3000               	movlw	0
  2758     012B  00AD               	movwf	map@outmax+1
  2759     012C  120A  158A  2760  120A  118A  	fcall	_map
  2760     0131  1283               	bcf	3,5	;RP0=0, select bank0
  2761     0132  1303               	bcf	3,6	;RP1=0, select bank0
  2762     0133  00B7               	movwf	??_isr
  2763     0134  01B8               	clrf	??_isr+1
  2764     0135  0837               	movf	??_isr,w
  2765     0136  00CA               	movwf	_vol2
  2766     0137  0838               	movf	??_isr+1,w
  2767     0138  00CB               	movwf	_vol2+1
  2768                           
  2769                           ;main.c: 83:         unidad2 = (vol2*5)/100;
  2770     0139  3064               	movlw	100
  2771     013A  00F6               	movwf	___lwdiv@divisor
  2772     013B  3000               	movlw	0
  2773     013C  00F7               	movwf	___lwdiv@divisor+1
  2774     013D  084B               	movf	_vol2+1,w
  2775     013E  00F1               	movwf	___wmul@multiplier+1
  2776     013F  084A               	movf	_vol2,w
  2777     0140  00F0               	movwf	___wmul@multiplier
  2778     0141  3005               	movlw	5
  2779     0142  00F2               	movwf	___wmul@multiplicand
  2780     0143  3000               	movlw	0
  2781     0144  00F3               	movwf	___wmul@multiplicand+1
  2782     0145  120A  158A  273B  120A  118A  	fcall	___wmul
  2783     014A  0871               	movf	?___wmul+1,w
  2784     014B  00F9               	movwf	___lwdiv@dividend+1
  2785     014C  0870               	movf	?___wmul,w
  2786     014D  00F8               	movwf	___lwdiv@dividend
  2787     014E  120A  118A  2721  120A  118A  	fcall	___lwdiv
  2788     0153  0877               	movf	?___lwdiv+1,w
  2789     0154  1283               	bcf	3,5	;RP0=0, select bank0
  2790     0155  1303               	bcf	3,6	;RP1=0, select bank0
  2791     0156  00C3               	movwf	_unidad2+1
  2792     0157  0876               	movf	?___lwdiv,w
  2793     0158  00C2               	movwf	_unidad2
  2794                           
  2795                           ;main.c: 84:         decima2 = ((vol2*5)/10)%10;
  2796     0159  300A               	movlw	10
  2797     015A  00A0               	movwf	___lwmod@divisor
  2798     015B  3000               	movlw	0
  2799     015C  00A1               	movwf	___lwmod@divisor+1
  2800     015D  300A               	movlw	10
  2801     015E  00F6               	movwf	___lwdiv@divisor
  2802     015F  3000               	movlw	0
  2803     0160  00F7               	movwf	___lwdiv@divisor+1
  2804     0161  084B               	movf	_vol2+1,w
  2805     0162  00F1               	movwf	___wmul@multiplier+1
  2806     0163  084A               	movf	_vol2,w
  2807     0164  00F0               	movwf	___wmul@multiplier
  2808     0165  3005               	movlw	5
  2809     0166  00F2               	movwf	___wmul@multiplicand
  2810     0167  3000               	movlw	0
  2811     0168  00F3               	movwf	___wmul@multiplicand+1
  2812     0169  120A  158A  273B  120A  118A  	fcall	___wmul
  2813     016E  0871               	movf	?___wmul+1,w
  2814     016F  00F9               	movwf	___lwdiv@dividend+1
  2815     0170  0870               	movf	?___wmul,w
  2816     0171  00F8               	movwf	___lwdiv@dividend
  2817     0172  120A  118A  2721  120A  118A  	fcall	___lwdiv
  2818     0177  0877               	movf	?___lwdiv+1,w
  2819     0178  1283               	bcf	3,5	;RP0=0, select bank0
  2820     0179  1303               	bcf	3,6	;RP1=0, select bank0
  2821     017A  00A3               	movwf	___lwmod@dividend+1
  2822     017B  0876               	movf	?___lwdiv,w
  2823     017C  00A2               	movwf	___lwmod@dividend
  2824     017D  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2825     0182  1283               	bcf	3,5	;RP0=0, select bank0
  2826     0183  1303               	bcf	3,6	;RP1=0, select bank0
  2827     0184  0821               	movf	?___lwmod+1,w
  2828     0185  00C1               	movwf	_decima2+1
  2829     0186  0820               	movf	?___lwmod,w
  2830     0187  00C0               	movwf	_decima2
  2831                           
  2832                           ;main.c: 85:         centesima2 = (vol2*5)%10;
  2833     0188  300A               	movlw	10
  2834     0189  00A0               	movwf	___lwmod@divisor
  2835     018A  3000               	movlw	0
  2836     018B  00A1               	movwf	___lwmod@divisor+1
  2837     018C  084B               	movf	_vol2+1,w
  2838     018D  00F1               	movwf	___wmul@multiplier+1
  2839     018E  084A               	movf	_vol2,w
  2840     018F  00F0               	movwf	___wmul@multiplier
  2841     0190  3005               	movlw	5
  2842     0191  00F2               	movwf	___wmul@multiplicand
  2843     0192  3000               	movlw	0
  2844     0193  00F3               	movwf	___wmul@multiplicand+1
  2845     0194  120A  158A  273B  120A  118A  	fcall	___wmul
  2846     0199  0871               	movf	?___wmul+1,w
  2847     019A  1283               	bcf	3,5	;RP0=0, select bank0
  2848     019B  1303               	bcf	3,6	;RP1=0, select bank0
  2849     019C  00A3               	movwf	___lwmod@dividend+1
  2850     019D  0870               	movf	?___wmul,w
  2851     019E  00A2               	movwf	___lwmod@dividend
  2852     019F  120A  158A  27C4  120A  118A  	fcall	___lwmod
  2853     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2854     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2855     01A6  0821               	movf	?___lwmod+1,w
  2856     01A7  00BF               	movwf	_centesima2+1
  2857     01A8  0820               	movf	?___lwmod,w
  2858     01A9  00BE               	movwf	_centesima2
  2859                           
  2860                           ;main.c: 86:         Lcd_Set_Cursor(2,7);
  2861     01AA  3007               	movlw	7
  2862     01AB  00F4               	movwf	i1Lcd_Set_Cursor@b
  2863     01AC  3002               	movlw	2
  2864     01AD  120A  118A  24A6  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2865     01B2                     i1l2252:
  2866                           
  2867                           ;main.c: 87:         sprintf(buffer, "%d.%d%dV " , unidad2 , decima2 , centesima2 );
  2868     01B2  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2869     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2870     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  2871     01B5  00A6               	movwf	sprintf@f
  2872     01B6  0843               	movf	_unidad2+1,w
  2873     01B7  00A8               	movwf	?_sprintf+2
  2874     01B8  0842               	movf	_unidad2,w
  2875     01B9  00A7               	movwf	?_sprintf+1
  2876     01BA  0841               	movf	_decima2+1,w
  2877     01BB  00AA               	movwf	?_sprintf+4
  2878     01BC  0840               	movf	_decima2,w
  2879     01BD  00A9               	movwf	?_sprintf+3
  2880     01BE  083F               	movf	_centesima2+1,w
  2881     01BF  00AC               	movwf	?_sprintf+6
  2882     01C0  083E               	movf	_centesima2,w
  2883     01C1  00AB               	movwf	?_sprintf+5
  2884     01C2  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2885     01C3  120A  118A  21E1  120A  118A  	fcall	_sprintf
  2886     01C8                     i1l2254:
  2887                           
  2888                           ;main.c: 88:         Lcd_Write_String(buffer);
  2889     01C8  30A0               	movlw	(low (_buffer| 0))& (0+255)
  2890     01C9  00F5               	movwf	i1Lcd_Write_String@a
  2891     01CA  3000               	movlw	0
  2892     01CB  00F6               	movwf	i1Lcd_Write_String@a+1
  2893     01CC  120A  118A  2765  120A  118A  	fcall	i1_Lcd_Write_String
  2894     01D1                     i1l2256:
  2895                           
  2896                           ;main.c: 89:         ADCON0bits.CHS = 0b0000;}
  2897     01D1  30C3               	movlw	-61
  2898     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2899     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2900     01D4  059F               	andwf	31,f	;volatile
  2901     01D5                     i1l2258:
  2902                           
  2903                           ;main.c: 90:         PIR1bits.ADIF = 0;
  2904     01D5  130C               	bcf	12,6	;volatile
  2905     01D6                     i1l90:
  2906     01D6  083C               	movf	??_isr+5,w
  2907     01D7  00FF               	movwf	btemp+1
  2908     01D8  083B               	movf	??_isr+4,w
  2909     01D9  008A               	movwf	10
  2910     01DA  083A               	movf	??_isr+3,w
  2911     01DB  0084               	movwf	4
  2912     01DC  0E39               	swapf	??_isr+2,w
  2913     01DD  0083               	movwf	3
  2914     01DE  0EFE               	swapf	btemp,f
  2915     01DF  0E7E               	swapf	btemp,w
  2916     01E0  0009               	retfie
  2917     01E1                     __end_of_isr:
  2918                           
  2919                           	psect	intentry
  2920     0004                     __pintentry:	
  2921                           ;incstack = 0
  2922                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2923                           
  2924     0004                     interrupt_function:
  2925     007E                     saved_w	set	btemp
  2926     0004  00FE               	movwf	btemp
  2927     0005  0E03               	swapf	3,w
  2928     0006  1283               	bcf	3,5	;RP0=0, select bank0
  2929     0007  1303               	bcf	3,6	;RP1=0, select bank0
  2930     0008  00B9               	movwf	??_isr+2
  2931     0009  0804               	movf	4,w
  2932     000A  00BA               	movwf	??_isr+3
  2933     000B  080A               	movf	10,w
  2934     000C  00BB               	movwf	??_isr+4
  2935     000D  087F               	movf	btemp+1,w
  2936     000E  00BC               	movwf	??_isr+5
  2937     000F  120A  118A  282A   	ljmp	_isr
  2938                           
  2939                           	psect	text12
  2940     0765                     __ptext12:	
  2941 ;; *************** function i1_Lcd_Write_String *****************
  2942 ;; Defined at:
  2943 ;;		line 104 in file "lcd.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  a               2    5[COMMON] PTR const unsigned char 
  2946 ;;		 -> buffer(20), STR_3(4), STR_2(4), STR_1(4), 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  i               2   10[COMMON] int 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         2       0       0       0       0
  2959 ;;      Locals:         2       0       0       0       0
  2960 ;;      Temps:          3       0       0       0       0
  2961 ;;      Totals:         7       0       0       0       0
  2962 ;;Total ram usage:        7 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 2
  2965 ;; This function calls:
  2966 ;;		i1_Lcd_Write_Char
  2967 ;; This function is called by:
  2968 ;;		_isr
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972     0765                     i1_Lcd_Write_String:	
  2973                           ;psect for function i1_Lcd_Write_String
  2974                           
  2975     0765                     i1l2202:	
  2976                           ;incstack = 0
  2977 ;; using string table level
  2978                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2979                           
  2980                           
  2981                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2982     0765  01FA               	clrf	i1Lcd_Write_String@i
  2983     0766  01FB               	clrf	i1Lcd_Write_String@i+1
  2984     0767  2F8A               	goto	i1l2208
  2985     0768                     i1l2204:
  2986                           
  2987                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2988     0768  087A               	movf	i1Lcd_Write_String@i,w
  2989     0769  0775               	addwf	i1Lcd_Write_String@a,w
  2990     076A  00F8               	movwf	??i1_Lcd_Write_String+1
  2991     076B  0876               	movf	i1Lcd_Write_String@a+1,w
  2992     076C  00F7               	movwf	??i1_Lcd_Write_String
  2993     076D  1803               	skipnc
  2994     076E  0AF7               	incf	??i1_Lcd_Write_String,f
  2995     076F  1FFA               	btfss	i1Lcd_Write_String@i,7
  2996     0770  2F72               	goto	u217_20
  2997     0771  03F7               	decf	??i1_Lcd_Write_String,f
  2998     0772                     u217_20:
  2999     0772  0877               	movf	??i1_Lcd_Write_String,w
  3000     0773  00F9               	movwf	??i1_Lcd_Write_String+2
  3001     0774  0879               	movf	??i1_Lcd_Write_String+2,w
  3002     0775  1283               	bcf	3,5	;RP0=0, select bank0
  3003     0776  1303               	bcf	3,6	;RP1=0, select bank0
  3004     0777  00FF               	movwf	btemp+1
  3005     0778  0878               	movf	??i1_Lcd_Write_String+1,w
  3006     0779  0084               	movwf	4
  3007     077A  120A  158A  2000  120A  118A  	fcall	stringtab
  3008     077F  120A  158A  2791  120A  118A  	fcall	i1_Lcd_Write_Char
  3009     0784                     i1l2206:
  3010     0784  3001               	movlw	1
  3011     0785  07FA               	addwf	i1Lcd_Write_String@i,f
  3012     0786  1803               	skipnc
  3013     0787  0AFB               	incf	i1Lcd_Write_String@i+1,f
  3014     0788  3000               	movlw	0
  3015     0789  07FB               	addwf	i1Lcd_Write_String@i+1,f
  3016     078A                     i1l2208:
  3017     078A  087A               	movf	i1Lcd_Write_String@i,w
  3018     078B  0775               	addwf	i1Lcd_Write_String@a,w
  3019     078C  00F8               	movwf	??i1_Lcd_Write_String+1
  3020     078D  0876               	movf	i1Lcd_Write_String@a+1,w
  3021     078E  00F7               	movwf	??i1_Lcd_Write_String
  3022     078F  1803               	skipnc
  3023     0790  0AF7               	incf	??i1_Lcd_Write_String,f
  3024     0791  1FFA               	btfss	i1Lcd_Write_String@i,7
  3025     0792  2F94               	goto	u218_20
  3026     0793  03F7               	decf	??i1_Lcd_Write_String,f
  3027     0794                     u218_20:
  3028     0794  0877               	movf	??i1_Lcd_Write_String,w
  3029     0795  00F9               	movwf	??i1_Lcd_Write_String+2
  3030     0796  0879               	movf	??i1_Lcd_Write_String+2,w
  3031     0797  1283               	bcf	3,5	;RP0=0, select bank0
  3032     0798  1303               	bcf	3,6	;RP1=0, select bank0
  3033     0799  00FF               	movwf	btemp+1
  3034     079A  0878               	movf	??i1_Lcd_Write_String+1,w
  3035     079B  0084               	movwf	4
  3036     079C  120A  158A  2000  120A  118A  	fcall	stringtab
  3037     07A1  3A00               	xorlw	0
  3038     07A2  1D03               	skipz
  3039     07A3  2FA5               	goto	u219_21
  3040     07A4  2FA6               	goto	u219_20
  3041     07A5                     u219_21:
  3042     07A5  2F68               	goto	i1l2204
  3043     07A6                     u219_20:
  3044     07A6                     i1l155:
  3045     07A6  0008               	return
  3046     07A7                     __end_ofi1_Lcd_Write_String:
  3047                           
  3048                           	psect	text13
  3049     0F91                     __ptext13:	
  3050 ;; *************** function i1_Lcd_Write_Char *****************
  3051 ;; Defined at:
  3052 ;;		line 88 in file "lcd.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  a               1    wreg     unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  a               1    4[COMMON] unsigned char 
  3057 ;;  y               1    3[COMMON] unsigned char 
  3058 ;;  temp            1    2[COMMON] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       0       0       0       0
  3069 ;;      Locals:         3       0       0       0       0
  3070 ;;      Temps:          1       0       0       0       0
  3071 ;;      Totals:         4       0       0       0       0
  3072 ;;Total ram usage:        4 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 1
  3075 ;; This function calls:
  3076 ;;		i1_Lcd_Port
  3077 ;; This function is called by:
  3078 ;;		i1_Lcd_Write_String
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082     0F91                     i1_Lcd_Write_Char:	
  3083                           ;psect for function i1_Lcd_Write_Char
  3084                           
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3088                           ;i1Lcd_Write_Char@a stored from wreg
  3089     0F91  00F4               	movwf	i1Lcd_Write_Char@a
  3090     0F92                     i1l1814:
  3091                           
  3092                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  3093     0F92  0874               	movf	i1Lcd_Write_Char@a,w
  3094     0F93  390F               	andlw	15
  3095     0F94  00F2               	movwf	i1Lcd_Write_Char@temp
  3096                           
  3097                           ;lcd.c: 92:     y = a&0xF0;
  3098     0F95  0874               	movf	i1Lcd_Write_Char@a,w
  3099     0F96  39F0               	andlw	240
  3100     0F97  00F3               	movwf	i1Lcd_Write_Char@y
  3101     0F98                     i1l1816:
  3102                           
  3103                           ;lcd.c: 93:     PORTBbits.RB2 = 1;
  3104     0F98  1283               	bcf	3,5	;RP0=0, select bank0
  3105     0F99  1303               	bcf	3,6	;RP1=0, select bank0
  3106     0F9A  1506               	bsf	6,2	;volatile
  3107     0F9B                     i1l1818:
  3108                           
  3109                           ;lcd.c: 94:     Lcd_Port(y>>4);
  3110     0F9B  0873               	movf	i1Lcd_Write_Char@y,w
  3111     0F9C  00F1               	movwf	??i1_Lcd_Write_Char
  3112     0F9D  3004               	movlw	4
  3113     0F9E                     u153_25:
  3114     0F9E  1003               	clrc
  3115     0F9F  0CF1               	rrf	??i1_Lcd_Write_Char,f
  3116     0FA0  3EFF               	addlw	-1
  3117     0FA1  1D03               	skipz
  3118     0FA2  2F9E               	goto	u153_25
  3119     0FA3  0871               	movf	??i1_Lcd_Write_Char,w
  3120     0FA4  120A  158A  2719  120A  158A  	fcall	i1_Lcd_Port
  3121     0FA9                     i1l1820:
  3122                           
  3123                           ;lcd.c: 95:     PORTBbits.RB3 = 1;
  3124     0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  3125     0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  3126     0FAB  1586               	bsf	6,3	;volatile
  3127     0FAC                     i1l1822:
  3128                           
  3129                           ;lcd.c: 96:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3130     0FAC  300D               	movlw	13
  3131     0FAD  00F1               	movwf	??i1_Lcd_Write_Char
  3132     0FAE                     u262_27:
  3133     0FAE  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  3134     0FAF  2FAE               	goto	u262_27
  3135     0FB0                     i1l1824:
  3136                           
  3137                           ;lcd.c: 97:     PORTBbits.RB3 = 0;
  3138     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  3139     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  3140     0FB2  1186               	bcf	6,3	;volatile
  3141     0FB3                     i1l1826:
  3142                           
  3143                           ;lcd.c: 98:     Lcd_Port(temp);
  3144     0FB3  0872               	movf	i1Lcd_Write_Char@temp,w
  3145     0FB4  120A  158A  2719  120A  158A  	fcall	i1_Lcd_Port
  3146     0FB9                     i1l1828:
  3147                           
  3148                           ;lcd.c: 99:     PORTBbits.RB3 = 1;
  3149     0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0FBB  1586               	bsf	6,3	;volatile
  3152     0FBC                     i1l1830:
  3153                           
  3154                           ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3155     0FBC  300D               	movlw	13
  3156     0FBD  00F1               	movwf	??i1_Lcd_Write_Char
  3157     0FBE                     u263_27:
  3158     0FBE  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  3159     0FBF  2FBE               	goto	u263_27
  3160     0FC0                     i1l1832:
  3161                           
  3162                           ;lcd.c: 101:     PORTBbits.RB3 = 0;
  3163     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  3164     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  3165     0FC2  1186               	bcf	6,3	;volatile
  3166     0FC3                     i1l149:
  3167     0FC3  0008               	return
  3168     0FC4                     __end_ofi1_Lcd_Write_Char:
  3169                           
  3170                           	psect	text14
  3171     04A6                     __ptext14:	
  3172 ;; *************** function i1_Lcd_Set_Cursor *****************
  3173 ;; Defined at:
  3174 ;;		line 26 in file "lcd.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  a               1    wreg     unsigned char 
  3177 ;;  b               1    4[COMMON] unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  a               1    6[COMMON] unsigned char 
  3180 ;;  temp            1    9[COMMON] unsigned char 
  3181 ;;  y               1    8[COMMON] unsigned char 
  3182 ;;  z               1    7[COMMON] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         1       0       0       0       0
  3193 ;;      Locals:         4       0       0       0       0
  3194 ;;      Temps:          1       0       0       0       0
  3195 ;;      Totals:         6       0       0       0       0
  3196 ;;Total ram usage:        6 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 2
  3199 ;; This function calls:
  3200 ;;		i1_Lcd_Cmd
  3201 ;; This function is called by:
  3202 ;;		_isr
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206     04A6                     i1_Lcd_Set_Cursor:	
  3207                           ;psect for function i1_Lcd_Set_Cursor
  3208                           
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3212                           ;i1Lcd_Set_Cursor@a stored from wreg
  3213     04A6  00F6               	movwf	i1Lcd_Set_Cursor@a
  3214     04A7                     i1l2162:
  3215                           
  3216                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3217     04A7  0376               	decf	i1Lcd_Set_Cursor@a,w
  3218     04A8  1D03               	btfss	3,2
  3219     04A9  2CAB               	goto	u209_21
  3220     04AA  2CAC               	goto	u209_20
  3221     04AB                     u209_21:
  3222     04AB  2CC9               	goto	i1l2172
  3223     04AC                     u209_20:
  3224     04AC                     i1l2164:
  3225                           
  3226                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3227     04AC  0874               	movf	i1Lcd_Set_Cursor@b,w
  3228     04AD  3E7F               	addlw	127
  3229     04AE  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3230                           
  3231                           ;lcd.c: 32:         z = temp>>4;
  3232     04AF  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3233     04B0  00F5               	movwf	??i1_Lcd_Set_Cursor
  3234     04B1  3004               	movlw	4
  3235     04B2                     u210_25:
  3236     04B2  1003               	clrc
  3237     04B3  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3238     04B4  3EFF               	addlw	-1
  3239     04B5  1D03               	skipz
  3240     04B6  2CB2               	goto	u210_25
  3241     04B7  0875               	movf	??i1_Lcd_Set_Cursor,w
  3242     04B8  00F7               	movwf	i1Lcd_Set_Cursor@z
  3243     04B9                     i1l2166:
  3244                           
  3245                           ;lcd.c: 33:         y = temp & 0x0F;
  3246     04B9  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3247     04BA  390F               	andlw	15
  3248     04BB  00F8               	movwf	i1Lcd_Set_Cursor@y
  3249     04BC                     i1l2168:
  3250                           
  3251                           ;lcd.c: 34:         Lcd_Cmd(z);
  3252     04BC  0877               	movf	i1Lcd_Set_Cursor@z,w
  3253     04BD  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3254     04C2                     i1l2170:
  3255                           
  3256                           ;lcd.c: 35:         Lcd_Cmd(y);
  3257     04C2  0878               	movf	i1Lcd_Set_Cursor@y,w
  3258     04C3  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3259                           
  3260                           ;lcd.c: 36:     }
  3261     04C8  2D32               	goto	i1l143
  3262     04C9                     i1l2172:
  3263     04C9  3002               	movlw	2
  3264     04CA  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3265     04CB  1D03               	btfss	3,2
  3266     04CC  2CCE               	goto	u211_21
  3267     04CD  2CCF               	goto	u211_20
  3268     04CE                     u211_21:
  3269     04CE  2CEC               	goto	i1l2182
  3270     04CF                     u211_20:
  3271     04CF                     i1l2174:
  3272                           
  3273                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  3274     04CF  0874               	movf	i1Lcd_Set_Cursor@b,w
  3275     04D0  3EBF               	addlw	191
  3276     04D1  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3277                           
  3278                           ;lcd.c: 40:         z = temp>>4;
  3279     04D2  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3280     04D3  00F5               	movwf	??i1_Lcd_Set_Cursor
  3281     04D4  3004               	movlw	4
  3282     04D5                     u212_25:
  3283     04D5  1003               	clrc
  3284     04D6  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3285     04D7  3EFF               	addlw	-1
  3286     04D8  1D03               	skipz
  3287     04D9  2CD5               	goto	u212_25
  3288     04DA  0875               	movf	??i1_Lcd_Set_Cursor,w
  3289     04DB  00F7               	movwf	i1Lcd_Set_Cursor@z
  3290     04DC                     i1l2176:
  3291                           
  3292                           ;lcd.c: 41:         y = temp & 0x0F;
  3293     04DC  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3294     04DD  390F               	andlw	15
  3295     04DE  00F8               	movwf	i1Lcd_Set_Cursor@y
  3296     04DF                     i1l2178:
  3297                           
  3298                           ;lcd.c: 42:         Lcd_Cmd(z);
  3299     04DF  0877               	movf	i1Lcd_Set_Cursor@z,w
  3300     04E0  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3301     04E5                     i1l2180:
  3302                           
  3303                           ;lcd.c: 43:         Lcd_Cmd(y);
  3304     04E5  0878               	movf	i1Lcd_Set_Cursor@y,w
  3305     04E6  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3306                           
  3307                           ;lcd.c: 44:     }
  3308     04EB  2D32               	goto	i1l143
  3309     04EC                     i1l2182:
  3310     04EC  3003               	movlw	3
  3311     04ED  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3312     04EE  1D03               	btfss	3,2
  3313     04EF  2CF1               	goto	u213_21
  3314     04F0  2CF2               	goto	u213_20
  3315     04F1                     u213_21:
  3316     04F1  2D0F               	goto	i1l2192
  3317     04F2                     u213_20:
  3318     04F2                     i1l2184:
  3319                           
  3320                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  3321     04F2  0874               	movf	i1Lcd_Set_Cursor@b,w
  3322     04F3  3E93               	addlw	147
  3323     04F4  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3324                           
  3325                           ;lcd.c: 48:         z = temp>>4;
  3326     04F5  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3327     04F6  00F5               	movwf	??i1_Lcd_Set_Cursor
  3328     04F7  3004               	movlw	4
  3329     04F8                     u214_25:
  3330     04F8  1003               	clrc
  3331     04F9  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3332     04FA  3EFF               	addlw	-1
  3333     04FB  1D03               	skipz
  3334     04FC  2CF8               	goto	u214_25
  3335     04FD  0875               	movf	??i1_Lcd_Set_Cursor,w
  3336     04FE  00F7               	movwf	i1Lcd_Set_Cursor@z
  3337     04FF                     i1l2186:
  3338                           
  3339                           ;lcd.c: 49:         y = temp & 0x0F;
  3340     04FF  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3341     0500  390F               	andlw	15
  3342     0501  00F8               	movwf	i1Lcd_Set_Cursor@y
  3343     0502                     i1l2188:
  3344                           
  3345                           ;lcd.c: 50:         Lcd_Cmd(z);
  3346     0502  0877               	movf	i1Lcd_Set_Cursor@z,w
  3347     0503  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3348     0508                     i1l2190:
  3349                           
  3350                           ;lcd.c: 51:         Lcd_Cmd(y);
  3351     0508  0878               	movf	i1Lcd_Set_Cursor@y,w
  3352     0509  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3353                           
  3354                           ;lcd.c: 52:     }
  3355     050E  2D32               	goto	i1l143
  3356     050F                     i1l2192:
  3357     050F  3004               	movlw	4
  3358     0510  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  3359     0511  1D03               	btfss	3,2
  3360     0512  2D14               	goto	u215_21
  3361     0513  2D15               	goto	u215_20
  3362     0514                     u215_21:
  3363     0514  2D32               	goto	i1l139
  3364     0515                     u215_20:
  3365     0515                     i1l2194:
  3366                           
  3367                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  3368     0515  0874               	movf	i1Lcd_Set_Cursor@b,w
  3369     0516  3ED3               	addlw	211
  3370     0517  00F9               	movwf	i1Lcd_Set_Cursor@temp
  3371                           
  3372                           ;lcd.c: 56:         z = temp>>4;
  3373     0518  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3374     0519  00F5               	movwf	??i1_Lcd_Set_Cursor
  3375     051A  3004               	movlw	4
  3376     051B                     u216_25:
  3377     051B  1003               	clrc
  3378     051C  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  3379     051D  3EFF               	addlw	-1
  3380     051E  1D03               	skipz
  3381     051F  2D1B               	goto	u216_25
  3382     0520  0875               	movf	??i1_Lcd_Set_Cursor,w
  3383     0521  00F7               	movwf	i1Lcd_Set_Cursor@z
  3384     0522                     i1l2196:
  3385                           
  3386                           ;lcd.c: 57:         y = temp & 0x0F;
  3387     0522  0879               	movf	i1Lcd_Set_Cursor@temp,w
  3388     0523  390F               	andlw	15
  3389     0524  00F8               	movwf	i1Lcd_Set_Cursor@y
  3390     0525                     i1l2198:
  3391                           
  3392                           ;lcd.c: 58:         Lcd_Cmd(z);
  3393     0525  0877               	movf	i1Lcd_Set_Cursor@z,w
  3394     0526  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3395     052B                     i1l2200:
  3396                           
  3397                           ;lcd.c: 59:         Lcd_Cmd(y);
  3398     052B  0878               	movf	i1Lcd_Set_Cursor@y,w
  3399     052C  120A  118A  27E6  120A  118A  	fcall	i1_Lcd_Cmd
  3400     0531  2D32               	goto	i1l143
  3401     0532                     i1l139:
  3402     0532                     i1l143:
  3403     0532  0008               	return
  3404     0533                     __end_ofi1_Lcd_Set_Cursor:
  3405                           
  3406                           	psect	text15
  3407     07E6                     __ptext15:	
  3408 ;; *************** function i1_Lcd_Cmd *****************
  3409 ;; Defined at:
  3410 ;;		line 11 in file "lcd.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  a               1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  a               1    3[COMMON] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         0       0       0       0       0
  3425 ;;      Locals:         1       0       0       0       0
  3426 ;;      Temps:          2       0       0       0       0
  3427 ;;      Totals:         3       0       0       0       0
  3428 ;;Total ram usage:        3 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 1
  3431 ;; This function calls:
  3432 ;;		i1_Lcd_Port
  3433 ;; This function is called by:
  3434 ;;		i1_Lcd_Set_Cursor
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     07E6                     i1_Lcd_Cmd:	
  3439                           ;psect for function i1_Lcd_Cmd
  3440                           
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3444                           ;i1Lcd_Cmd@a stored from wreg
  3445     07E6  00F3               	movwf	i1Lcd_Cmd@a
  3446     07E7                     i1l1804:
  3447                           
  3448                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTBbits.RB2 = 0;
  3449     07E7  1283               	bcf	3,5	;RP0=0, select bank0
  3450     07E8  1303               	bcf	3,6	;RP1=0, select bank0
  3451     07E9  1106               	bcf	6,2	;volatile
  3452     07EA                     i1l1806:
  3453                           
  3454                           ;lcd.c: 14:     Lcd_Port(a);
  3455     07EA  0873               	movf	i1Lcd_Cmd@a,w
  3456     07EB  120A  158A  2719  120A  118A  	fcall	i1_Lcd_Port
  3457     07F0                     i1l1808:
  3458                           
  3459                           ;lcd.c: 15:     PORTBbits.RB3 = 1;
  3460     07F0  1283               	bcf	3,5	;RP0=0, select bank0
  3461     07F1  1303               	bcf	3,6	;RP1=0, select bank0
  3462     07F2  1586               	bsf	6,3	;volatile
  3463     07F3                     i1l1810:
  3464                           
  3465                           ;lcd.c: 16:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3466     07F3  3006               	movlw	6
  3467     07F4  00F2               	movwf	??i1_Lcd_Cmd+1
  3468     07F5  3030               	movlw	48
  3469     07F6  00F1               	movwf	??i1_Lcd_Cmd
  3470     07F7                     u264_27:
  3471     07F7  0BF1               	decfsz	??i1_Lcd_Cmd,f
  3472     07F8  2FF7               	goto	u264_27
  3473     07F9  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  3474     07FA  2FF7               	goto	u264_27
  3475     07FB  0000               	nop
  3476     07FC                     i1l1812:
  3477                           
  3478                           ;lcd.c: 17:     PORTBbits.RB3 = 0;
  3479     07FC  1283               	bcf	3,5	;RP0=0, select bank0
  3480     07FD  1303               	bcf	3,6	;RP1=0, select bank0
  3481     07FE  1186               	bcf	6,3	;volatile
  3482     07FF                     i1l130:
  3483     07FF  0008               	return
  3484     0800                     __end_ofi1_Lcd_Cmd:
  3485                           
  3486                           	psect	text16
  3487     0F19                     __ptext16:	
  3488 ;; *************** function i1_Lcd_Port *****************
  3489 ;; Defined at:
  3490 ;;		line 3 in file "lcd.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  a               1    wreg     unsigned char 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  a               1    0[COMMON] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         0       0       0       0       0
  3505 ;;      Locals:         1       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0
  3507 ;;      Totals:         1       0       0       0       0
  3508 ;;Total ram usage:        1 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		i1_Lcd_Cmd
  3514 ;;		i1_Lcd_Write_Char
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518     0F19                     i1_Lcd_Port:	
  3519                           ;psect for function i1_Lcd_Port
  3520                           
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in i1_Lcd_Port: [wreg]
  3524                           ;i1Lcd_Port@a stored from wreg
  3525     0F19  00F0               	movwf	i1Lcd_Port@a
  3526     0F1A                     i1l1666:
  3527                           
  3528                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTBbits.RB4 = 1)
      +                           : (PORTBbits.RB4 = 0);
  3529     0F1A  1C70               	btfss	i1Lcd_Port@a,0
  3530     0F1B  2F1D               	goto	u121_21
  3531     0F1C  2F1E               	goto	u121_20
  3532     0F1D                     u121_21:
  3533     0F1D  2F22               	goto	i1l112
  3534     0F1E                     u121_20:
  3535     0F1E                     i1l1668:
  3536     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  3537     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  3538     0F20  1606               	bsf	6,4	;volatile
  3539     0F21  2F25               	goto	i1l114
  3540     0F22                     i1l112:
  3541     0F22  1283               	bcf	3,5	;RP0=0, select bank0
  3542     0F23  1303               	bcf	3,6	;RP1=0, select bank0
  3543     0F24  1206               	bcf	6,4	;volatile
  3544     0F25                     i1l114:
  3545                           
  3546                           ;lcd.c: 6:     (a & 2) ? (PORTBbits.RB5 = 1) : (PORTBbits.RB5 = 0);
  3547     0F25  1CF0               	btfss	i1Lcd_Port@a,1
  3548     0F26  2F28               	goto	u122_21
  3549     0F27  2F29               	goto	u122_20
  3550     0F28                     u122_21:
  3551     0F28  2F2B               	goto	i1l116
  3552     0F29                     u122_20:
  3553     0F29                     i1l1670:
  3554     0F29  1686               	bsf	6,5	;volatile
  3555     0F2A  2F2C               	goto	i1l118
  3556     0F2B                     i1l116:
  3557     0F2B  1286               	bcf	6,5	;volatile
  3558     0F2C                     i1l118:
  3559                           
  3560                           ;lcd.c: 7:     (a & 4) ? (PORTBbits.RB6 = 1) : (PORTBbits.RB6 = 0);
  3561     0F2C  1D70               	btfss	i1Lcd_Port@a,2
  3562     0F2D  2F2F               	goto	u123_21
  3563     0F2E  2F30               	goto	u123_20
  3564     0F2F                     u123_21:
  3565     0F2F  2F32               	goto	i1l120
  3566     0F30                     u123_20:
  3567     0F30                     i1l1672:
  3568     0F30  1706               	bsf	6,6	;volatile
  3569     0F31  2F33               	goto	i1l122
  3570     0F32                     i1l120:
  3571     0F32  1306               	bcf	6,6	;volatile
  3572     0F33                     i1l122:
  3573                           
  3574                           ;lcd.c: 8:     (a & 8) ? (PORTBbits.RB7 = 1) : (PORTBbits.RB7 = 0);
  3575     0F33  1DF0               	btfss	i1Lcd_Port@a,3
  3576     0F34  2F36               	goto	u124_21
  3577     0F35  2F37               	goto	u124_20
  3578     0F36                     u124_21:
  3579     0F36  2F39               	goto	i1l124
  3580     0F37                     u124_20:
  3581     0F37                     i1l1674:
  3582     0F37  1786               	bsf	6,7	;volatile
  3583     0F38  2F3A               	goto	i1l127
  3584     0F39                     i1l124:
  3585     0F39  1386               	bcf	6,7	;volatile
  3586     0F3A                     i1l127:
  3587     0F3A  0008               	return
  3588     0F3B                     __end_ofi1_Lcd_Port:
  3589                           
  3590                           	psect	text17
  3591     01E1                     __ptext17:	
  3592 ;; *************** function _sprintf *****************
  3593 ;; Defined at:
  3594 ;;		line 505 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  sp              1    wreg     PTR unsigned char 
  3597 ;;		 -> buffer(20), 
  3598 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  3599 ;;		 -> STR_5(10), STR_4(10), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  3602 ;;		 -> buffer(20), 
  3603 ;;  tmpval          4    0        struct .
  3604 ;;  val             2   19[BANK0 ] unsigned int 
  3605 ;;  cp              2    0        PTR const unsigned char 
  3606 ;;  len             2    0        unsigned int 
  3607 ;;  c               1   22[BANK0 ] unsigned char 
  3608 ;;  prec            1   18[BANK0 ] char 
  3609 ;;  flag            1   17[BANK0 ] unsigned char 
  3610 ;;  ap              1   16[BANK0 ] PTR void [1]
  3611 ;;		 -> ?_sprintf(2), 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2    6[BANK0 ] int 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3621 ;;      Params:         0       7       0       0       0
  3622 ;;      Locals:         0       7       0       0       0
  3623 ;;      Temps:          0       3       0       0       0
  3624 ;;      Totals:         0      17       0       0       0
  3625 ;;Total ram usage:       17 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 1
  3628 ;; This function calls:
  3629 ;;		___lwdiv
  3630 ;;		___lwmod
  3631 ;; This function is called by:
  3632 ;;		_isr
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636     01E1                     _sprintf:	
  3637                           ;psect for function _sprintf
  3638                           
  3639                           
  3640                           ;incstack = 0
  3641                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3642                           ;sprintf@sp stored from wreg
  3643     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  3644     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  3645     01E3  00B5               	movwf	sprintf@sp
  3646     01E4                     i1l2062:
  3647                           
  3648                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3649     01E4  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3650     01E5  00B0               	movwf	sprintf@ap
  3651                           
  3652                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3653     01E6  2AA8               	goto	i1l2114
  3654     01E7                     i1l2064:
  3655                           
  3656                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3657     01E7  3025               	movlw	37
  3658     01E8  0636               	xorwf	sprintf@c,w
  3659     01E9  1903               	btfsc	3,2
  3660     01EA  29EC               	goto	u193_21
  3661     01EB  29ED               	goto	u193_20
  3662     01EC                     u193_21:
  3663     01EC  29F7               	goto	i1l2070
  3664     01ED                     u193_20:
  3665     01ED                     i1l2066:
  3666                           
  3667                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;E:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3668     01ED  0835               	movf	sprintf@sp,w
  3669     01EE  0084               	movwf	4
  3670     01EF  0836               	movf	sprintf@c,w
  3671     01F0  1383               	bcf	3,7	;select IRP bank0
  3672     01F1  0080               	movwf	0
  3673     01F2                     i1l2068:
  3674     01F2  3001               	movlw	1
  3675     01F3  00AD               	movwf	??_sprintf
  3676     01F4  082D               	movf	??_sprintf,w
  3677     01F5  07B5               	addwf	sprintf@sp,f
  3678                           
  3679                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  3680     01F6  2AA8               	goto	i1l2114
  3681     01F7                     i1l2070:
  3682                           
  3683                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3684     01F7  01B1               	clrf	sprintf@flag
  3685     01F8                     i1l2074:	
  3686                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3687                           
  3688     01F8  3001               	movlw	1
  3689     01F9  07A6               	addwf	sprintf@f,f
  3690     01FA  30FF               	movlw	-1
  3691     01FB  0726               	addwf	sprintf@f,w
  3692     01FC  0084               	movwf	4
  3693     01FD  120A  158A  200A  120A  118A  	fcall	stringdir
  3694     0202  00B6               	movwf	sprintf@c
  3695     0203  00AD               	movwf	??_sprintf
  3696     0204  01AE               	clrf	??_sprintf+1
  3697                           
  3698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3699                           ; Switch size 1, requested type "simple"
  3700                           ; Number of cases is 1, Range of values is 0 to 0
  3701                           ; switch strategies available:
  3702                           ; Name         Instructions Cycles
  3703                           ; simple_byte            4     3 (average)
  3704                           ; direct_byte           11     8 (fixed)
  3705                           ; jumptable            260     6 (fixed)
  3706                           ;	Chosen strategy is simple_byte
  3707     0205  082E               	movf	??_sprintf+1,w
  3708     0206  3A00               	xorlw	0	; case 0
  3709     0207  1903               	skipnz
  3710     0208  2A0A               	goto	i1l2636
  3711     0209  2AA8               	goto	i1l2114
  3712     020A                     i1l2636:
  3713                           
  3714                           ; Switch size 1, requested type "simple"
  3715                           ; Number of cases is 3, Range of values is 0 to 105
  3716                           ; switch strategies available:
  3717                           ; Name         Instructions Cycles
  3718                           ; simple_byte           10     6 (average)
  3719                           ; jumptable            260     6 (fixed)
  3720                           ;	Chosen strategy is simple_byte
  3721     020A  082D               	movf	??_sprintf,w
  3722     020B  3A00               	xorlw	0	; case 0
  3723     020C  1903               	skipnz
  3724     020D  2AB8               	goto	i1l2116
  3725     020E  3A64               	xorlw	100	; case 100
  3726     020F  1903               	skipnz
  3727     0210  2A15               	goto	i1l2076
  3728     0211  3A0D               	xorlw	13	; case 105
  3729     0212  1903               	skipnz
  3730     0213  2A15               	goto	i1l2076
  3731     0214  2AA8               	goto	i1l2114
  3732     0215                     i1l2076:
  3733                           
  3734                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3735     0215  0830               	movf	sprintf@ap,w
  3736     0216  0084               	movwf	4
  3737     0217  1383               	bcf	3,7	;select IRP bank0
  3738     0218  0800               	movf	0,w
  3739     0219  00B3               	movwf	sprintf@val
  3740     021A  0A84               	incf	4,f
  3741     021B  0800               	movf	0,w
  3742     021C  00B4               	movwf	sprintf@val+1
  3743     021D                     i1l2078:
  3744     021D  3002               	movlw	2
  3745     021E  00AD               	movwf	??_sprintf
  3746     021F  082D               	movf	??_sprintf,w
  3747     0220  07B0               	addwf	sprintf@ap,f
  3748     0221                     i1l2080:
  3749                           
  3750                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3751     0221  1FB4               	btfss	sprintf@val+1,7
  3752     0222  2A24               	goto	u194_21
  3753     0223  2A25               	goto	u194_20
  3754     0224                     u194_21:
  3755     0224  2A2E               	goto	i1l2086
  3756     0225                     u194_20:
  3757     0225                     i1l2082:
  3758                           
  3759                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3760     0225  3003               	movlw	3
  3761     0226  00AD               	movwf	??_sprintf
  3762     0227  082D               	movf	??_sprintf,w
  3763     0228  04B1               	iorwf	sprintf@flag,f
  3764     0229                     i1l2084:
  3765                           
  3766                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3767     0229  09B3               	comf	sprintf@val,f
  3768     022A  09B4               	comf	sprintf@val+1,f
  3769     022B  0AB3               	incf	sprintf@val,f
  3770     022C  1903               	skipnz
  3771     022D  0AB4               	incf	sprintf@val+1,f
  3772     022E                     i1l2086:
  3773                           
  3774                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3775     022E  01B6               	clrf	sprintf@c
  3776     022F  0AB6               	incf	sprintf@c,f
  3777     0230                     i1l2092:
  3778                           
  3779                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3780     0230  0836               	movf	sprintf@c,w
  3781     0231  00AD               	movwf	??_sprintf
  3782     0232  072D               	addwf	??_sprintf,w
  3783     0233  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3784     0234  0084               	movwf	4
  3785     0235  120A  158A  200A  120A  118A  	fcall	stringdir
  3786     023A  00AE               	movwf	??_sprintf+1
  3787     023B  120A  158A  200A  120A  118A  	fcall	stringdir
  3788     0240  00AF               	movwf	??_sprintf+2
  3789     0241  082F               	movf	??_sprintf+2,w
  3790     0242  0234               	subwf	sprintf@val+1,w
  3791     0243  1D03               	skipz
  3792     0244  2A47               	goto	u195_25
  3793     0245  082E               	movf	??_sprintf+1,w
  3794     0246  0233               	subwf	sprintf@val,w
  3795     0247                     u195_25:
  3796     0247  1803               	skipnc
  3797     0248  2A4A               	goto	u195_21
  3798     0249  2A4B               	goto	u195_20
  3799     024A                     u195_21:
  3800     024A  2A4C               	goto	i1l2096
  3801     024B                     u195_20:
  3802     024B  2A56               	goto	i1l2098
  3803     024C                     i1l2096:
  3804     024C  3001               	movlw	1
  3805     024D  00AD               	movwf	??_sprintf
  3806     024E  082D               	movf	??_sprintf,w
  3807     024F  07B6               	addwf	sprintf@c,f
  3808     0250  3005               	movlw	5
  3809     0251  0636               	xorwf	sprintf@c,w
  3810     0252  1D03               	btfss	3,2
  3811     0253  2A55               	goto	u196_21
  3812     0254  2A56               	goto	u196_20
  3813     0255                     u196_21:
  3814     0255  2A30               	goto	i1l2092
  3815     0256                     u196_20:
  3816     0256                     i1l2098:
  3817                           
  3818                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3819     0256  0831               	movf	sprintf@flag,w
  3820     0257  3903               	andlw	3
  3821     0258  1903               	btfsc	3,2
  3822     0259  2A5B               	goto	u197_21
  3823     025A  2A5C               	goto	u197_20
  3824     025B                     u197_21:
  3825     025B  2A65               	goto	i1l2104
  3826     025C                     u197_20:
  3827     025C                     i1l2100:
  3828                           
  3829                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3830     025C  0835               	movf	sprintf@sp,w
  3831     025D  0084               	movwf	4
  3832     025E  302D               	movlw	45
  3833     025F  1383               	bcf	3,7	;select IRP bank0
  3834     0260  0080               	movwf	0
  3835     0261                     i1l2102:
  3836     0261  3001               	movlw	1
  3837     0262  00AD               	movwf	??_sprintf
  3838     0263  082D               	movf	??_sprintf,w
  3839     0264  07B5               	addwf	sprintf@sp,f
  3840     0265                     i1l2104:
  3841                           
  3842                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };E:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3843     0265  0836               	movf	sprintf@c,w
  3844     0266  00B2               	movwf	sprintf@prec
  3845                           
  3846                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3847     0267  2A9F               	goto	i1l2112
  3848     0268                     i1l2106:
  3849                           
  3850                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3851     0268  300A               	movlw	10
  3852     0269  00A0               	movwf	___lwmod@divisor
  3853     026A  3000               	movlw	0
  3854     026B  00A1               	movwf	___lwmod@divisor+1
  3855     026C  0832               	movf	sprintf@prec,w
  3856     026D  00AD               	movwf	??_sprintf
  3857     026E  072D               	addwf	??_sprintf,w
  3858     026F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3859     0270  0084               	movwf	4
  3860     0271  120A  158A  200A  120A  118A  	fcall	stringdir
  3861     0276  00F6               	movwf	___lwdiv@divisor
  3862     0277  120A  158A  200A  120A  118A  	fcall	stringdir
  3863     027C  00F7               	movwf	___lwdiv@divisor+1
  3864     027D  0834               	movf	sprintf@val+1,w
  3865     027E  00F9               	movwf	___lwdiv@dividend+1
  3866     027F  0833               	movf	sprintf@val,w
  3867     0280  00F8               	movwf	___lwdiv@dividend
  3868     0281  120A  118A  2721  120A  118A  	fcall	___lwdiv
  3869     0286  0877               	movf	?___lwdiv+1,w
  3870     0287  1283               	bcf	3,5	;RP0=0, select bank0
  3871     0288  1303               	bcf	3,6	;RP1=0, select bank0
  3872     0289  00A3               	movwf	___lwmod@dividend+1
  3873     028A  0876               	movf	?___lwdiv,w
  3874     028B  00A2               	movwf	___lwmod@dividend
  3875     028C  120A  158A  27C4  120A  118A  	fcall	___lwmod
  3876     0291  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0292  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0293  0820               	movf	?___lwmod,w
  3879     0294  3E30               	addlw	48
  3880     0295  00B6               	movwf	sprintf@c
  3881     0296                     i1l2108:
  3882                           
  3883                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };E:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3884     0296  0835               	movf	sprintf@sp,w
  3885     0297  0084               	movwf	4
  3886     0298  0836               	movf	sprintf@c,w
  3887     0299  1383               	bcf	3,7	;select IRP bank0
  3888     029A  0080               	movwf	0
  3889     029B                     i1l2110:
  3890     029B  3001               	movlw	1
  3891     029C  00AD               	movwf	??_sprintf
  3892     029D  082D               	movf	??_sprintf,w
  3893     029E  07B5               	addwf	sprintf@sp,f
  3894     029F                     i1l2112:
  3895                           
  3896                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3897     029F  30FF               	movlw	255
  3898     02A0  00AD               	movwf	??_sprintf
  3899     02A1  082D               	movf	??_sprintf,w
  3900     02A2  07B2               	addwf	sprintf@prec,f
  3901     02A3  0A32               	incf	sprintf@prec,w
  3902     02A4  1D03               	btfss	3,2
  3903     02A5  2AA7               	goto	u198_21
  3904     02A6  2AA8               	goto	u198_20
  3905     02A7                     u198_21:
  3906     02A7  2A68               	goto	i1l2106
  3907     02A8                     u198_20:
  3908     02A8                     i1l2114:
  3909                           
  3910                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3911     02A8  3001               	movlw	1
  3912     02A9  07A6               	addwf	sprintf@f,f
  3913     02AA  30FF               	movlw	-1
  3914     02AB  0726               	addwf	sprintf@f,w
  3915     02AC  0084               	movwf	4
  3916     02AD  120A  158A  200A  120A  118A  	fcall	stringdir
  3917     02B2  00B6               	movwf	sprintf@c
  3918     02B3  0836               	movf	sprintf@c,w
  3919     02B4  1D03               	btfss	3,2
  3920     02B5  2AB7               	goto	u199_21
  3921     02B6  2AB8               	goto	u199_20
  3922     02B7                     u199_21:
  3923     02B7  29E7               	goto	i1l2064
  3924     02B8                     u199_20:
  3925     02B8                     i1l2116:
  3926                           
  3927                           ;E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3928     02B8  0835               	movf	sprintf@sp,w
  3929     02B9  0084               	movwf	4
  3930     02BA  1383               	bcf	3,7	;select IRP bank0
  3931     02BB  0180               	clrf	0
  3932     02BC                     i1l390:
  3933     02BC  0008               	return
  3934     02BD                     __end_of_sprintf:
  3935                           
  3936                           	psect	text18
  3937     0FC4                     __ptext18:	
  3938 ;; *************** function ___lwmod *****************
  3939 ;; Defined at:
  3940 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  divisor         2    0[BANK0 ] unsigned int 
  3943 ;;  dividend        2    2[BANK0 ] unsigned int 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  counter         1    5[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2    0[BANK0 ] unsigned int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       4       0       0       0
  3956 ;;      Locals:         0       1       0       0       0
  3957 ;;      Temps:          0       1       0       0       0
  3958 ;;      Totals:         0       6       0       0       0
  3959 ;;Total ram usage:        6 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_isr
  3965 ;;		_sprintf
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969     0FC4                     ___lwmod:	
  3970                           ;psect for function ___lwmod
  3971                           
  3972     0FC4                     i1l1782:	
  3973                           ;incstack = 0
  3974                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3975                           
  3976     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3977     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3978     0FC6  0820               	movf	___lwmod@divisor,w
  3979     0FC7  0421               	iorwf	___lwmod@divisor+1,w
  3980     0FC8  1903               	btfsc	3,2
  3981     0FC9  2FCB               	goto	u147_21
  3982     0FCA  2FCC               	goto	u147_20
  3983     0FCB                     u147_21:
  3984     0FCB  2FFB               	goto	i1l1800
  3985     0FCC                     u147_20:
  3986     0FCC                     i1l1784:
  3987     0FCC  01A5               	clrf	___lwmod@counter
  3988     0FCD  0AA5               	incf	___lwmod@counter,f
  3989     0FCE  2FDA               	goto	i1l1790
  3990     0FCF                     i1l1786:
  3991     0FCF  3001               	movlw	1
  3992     0FD0                     u148_25:
  3993     0FD0  1003               	clrc
  3994     0FD1  0DA0               	rlf	___lwmod@divisor,f
  3995     0FD2  0DA1               	rlf	___lwmod@divisor+1,f
  3996     0FD3  3EFF               	addlw	-1
  3997     0FD4  1D03               	skipz
  3998     0FD5  2FD0               	goto	u148_25
  3999     0FD6                     i1l1788:
  4000     0FD6  3001               	movlw	1
  4001     0FD7  00A4               	movwf	??___lwmod
  4002     0FD8  0824               	movf	??___lwmod,w
  4003     0FD9  07A5               	addwf	___lwmod@counter,f
  4004     0FDA                     i1l1790:
  4005     0FDA  1FA1               	btfss	___lwmod@divisor+1,7
  4006     0FDB  2FDD               	goto	u149_21
  4007     0FDC  2FDE               	goto	u149_20
  4008     0FDD                     u149_21:
  4009     0FDD  2FCF               	goto	i1l1786
  4010     0FDE                     u149_20:
  4011     0FDE                     i1l1792:
  4012     0FDE  0821               	movf	___lwmod@divisor+1,w
  4013     0FDF  0223               	subwf	___lwmod@dividend+1,w
  4014     0FE0  1D03               	skipz
  4015     0FE1  2FE4               	goto	u150_25
  4016     0FE2  0820               	movf	___lwmod@divisor,w
  4017     0FE3  0222               	subwf	___lwmod@dividend,w
  4018     0FE4                     u150_25:
  4019     0FE4  1C03               	skipc
  4020     0FE5  2FE7               	goto	u150_21
  4021     0FE6  2FE8               	goto	u150_20
  4022     0FE7                     u150_21:
  4023     0FE7  2FEE               	goto	i1l1796
  4024     0FE8                     u150_20:
  4025     0FE8                     i1l1794:
  4026     0FE8  0820               	movf	___lwmod@divisor,w
  4027     0FE9  02A2               	subwf	___lwmod@dividend,f
  4028     0FEA  0821               	movf	___lwmod@divisor+1,w
  4029     0FEB  1C03               	skipc
  4030     0FEC  03A3               	decf	___lwmod@dividend+1,f
  4031     0FED  02A3               	subwf	___lwmod@dividend+1,f
  4032     0FEE                     i1l1796:
  4033     0FEE  3001               	movlw	1
  4034     0FEF                     u151_25:
  4035     0FEF  1003               	clrc
  4036     0FF0  0CA1               	rrf	___lwmod@divisor+1,f
  4037     0FF1  0CA0               	rrf	___lwmod@divisor,f
  4038     0FF2  3EFF               	addlw	-1
  4039     0FF3  1D03               	skipz
  4040     0FF4  2FEF               	goto	u151_25
  4041     0FF5                     i1l1798:
  4042     0FF5  3001               	movlw	1
  4043     0FF6  02A5               	subwf	___lwmod@counter,f
  4044     0FF7  1D03               	btfss	3,2
  4045     0FF8  2FFA               	goto	u152_21
  4046     0FF9  2FFB               	goto	u152_20
  4047     0FFA                     u152_21:
  4048     0FFA  2FDE               	goto	i1l1792
  4049     0FFB                     u152_20:
  4050     0FFB                     i1l1800:
  4051     0FFB  0823               	movf	___lwmod@dividend+1,w
  4052     0FFC  00A1               	movwf	?___lwmod+1
  4053     0FFD  0822               	movf	___lwmod@dividend,w
  4054     0FFE  00A0               	movwf	?___lwmod
  4055     0FFF                     i1l676:
  4056     0FFF  0008               	return
  4057     1000                     __end_of___lwmod:
  4058                           
  4059                           	psect	text19
  4060     0721                     __ptext19:	
  4061 ;; *************** function ___lwdiv *****************
  4062 ;; Defined at:
  4063 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  divisor         2    6[COMMON] unsigned int 
  4066 ;;  dividend        2    8[COMMON] unsigned int 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  quotient        2   11[COMMON] unsigned int 
  4069 ;;  counter         1   13[COMMON] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  2    6[COMMON] unsigned int 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         4       0       0       0       0
  4080 ;;      Locals:         3       0       0       0       0
  4081 ;;      Temps:          1       0       0       0       0
  4082 ;;      Totals:         8       0       0       0       0
  4083 ;;Total ram usage:        8 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_isr
  4089 ;;		_sprintf
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093     0721                     ___lwdiv:	
  4094                           ;psect for function ___lwdiv
  4095                           
  4096     0721                     i1l1756:	
  4097                           ;incstack = 0
  4098                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4099                           
  4100     0721  01FB               	clrf	___lwdiv@quotient
  4101     0722  01FC               	clrf	___lwdiv@quotient+1
  4102     0723                     i1l1758:
  4103     0723  0876               	movf	___lwdiv@divisor,w
  4104     0724  0477               	iorwf	___lwdiv@divisor+1,w
  4105     0725  1903               	btfsc	3,2
  4106     0726  2F28               	goto	u140_21
  4107     0727  2F29               	goto	u140_20
  4108     0728                     u140_21:
  4109     0728  2F60               	goto	i1l1778
  4110     0729                     u140_20:
  4111     0729                     i1l1760:
  4112     0729  01FD               	clrf	___lwdiv@counter
  4113     072A  0AFD               	incf	___lwdiv@counter,f
  4114     072B  2F37               	goto	i1l1766
  4115     072C                     i1l1762:
  4116     072C  3001               	movlw	1
  4117     072D                     u141_25:
  4118     072D  1003               	clrc
  4119     072E  0DF6               	rlf	___lwdiv@divisor,f
  4120     072F  0DF7               	rlf	___lwdiv@divisor+1,f
  4121     0730  3EFF               	addlw	-1
  4122     0731  1D03               	skipz
  4123     0732  2F2D               	goto	u141_25
  4124     0733                     i1l1764:
  4125     0733  3001               	movlw	1
  4126     0734  00FA               	movwf	??___lwdiv
  4127     0735  087A               	movf	??___lwdiv,w
  4128     0736  07FD               	addwf	___lwdiv@counter,f
  4129     0737                     i1l1766:
  4130     0737  1FF7               	btfss	___lwdiv@divisor+1,7
  4131     0738  2F3A               	goto	u142_21
  4132     0739  2F3B               	goto	u142_20
  4133     073A                     u142_21:
  4134     073A  2F2C               	goto	i1l1762
  4135     073B                     u142_20:
  4136     073B                     i1l1768:
  4137     073B  3001               	movlw	1
  4138     073C                     u143_25:
  4139     073C  1003               	clrc
  4140     073D  0DFB               	rlf	___lwdiv@quotient,f
  4141     073E  0DFC               	rlf	___lwdiv@quotient+1,f
  4142     073F  3EFF               	addlw	-1
  4143     0740  1D03               	skipz
  4144     0741  2F3C               	goto	u143_25
  4145     0742  0877               	movf	___lwdiv@divisor+1,w
  4146     0743  0279               	subwf	___lwdiv@dividend+1,w
  4147     0744  1D03               	skipz
  4148     0745  2F48               	goto	u144_25
  4149     0746  0876               	movf	___lwdiv@divisor,w
  4150     0747  0278               	subwf	___lwdiv@dividend,w
  4151     0748                     u144_25:
  4152     0748  1C03               	skipc
  4153     0749  2F4B               	goto	u144_21
  4154     074A  2F4C               	goto	u144_20
  4155     074B                     u144_21:
  4156     074B  2F53               	goto	i1l1774
  4157     074C                     u144_20:
  4158     074C                     i1l1770:
  4159     074C  0876               	movf	___lwdiv@divisor,w
  4160     074D  02F8               	subwf	___lwdiv@dividend,f
  4161     074E  0877               	movf	___lwdiv@divisor+1,w
  4162     074F  1C03               	skipc
  4163     0750  03F9               	decf	___lwdiv@dividend+1,f
  4164     0751  02F9               	subwf	___lwdiv@dividend+1,f
  4165     0752                     i1l1772:
  4166     0752  147B               	bsf	___lwdiv@quotient,0
  4167     0753                     i1l1774:
  4168     0753  3001               	movlw	1
  4169     0754                     u145_25:
  4170     0754  1003               	clrc
  4171     0755  0CF7               	rrf	___lwdiv@divisor+1,f
  4172     0756  0CF6               	rrf	___lwdiv@divisor,f
  4173     0757  3EFF               	addlw	-1
  4174     0758  1D03               	skipz
  4175     0759  2F54               	goto	u145_25
  4176     075A                     i1l1776:
  4177     075A  3001               	movlw	1
  4178     075B  02FD               	subwf	___lwdiv@counter,f
  4179     075C  1D03               	btfss	3,2
  4180     075D  2F5F               	goto	u146_21
  4181     075E  2F60               	goto	u146_20
  4182     075F                     u146_21:
  4183     075F  2F3B               	goto	i1l1768
  4184     0760                     u146_20:
  4185     0760                     i1l1778:
  4186     0760  087C               	movf	___lwdiv@quotient+1,w
  4187     0761  00F7               	movwf	?___lwdiv+1
  4188     0762  087B               	movf	___lwdiv@quotient,w
  4189     0763  00F6               	movwf	?___lwdiv
  4190     0764                     i1l666:
  4191     0764  0008               	return
  4192     0765                     __end_of___lwdiv:
  4193                           
  4194                           	psect	text20
  4195     0F60                     __ptext20:	
  4196 ;; *************** function _map *****************
  4197 ;; Defined at:
  4198 ;;		line 47 in file "main.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  value           2    4[BANK0 ] int 
  4201 ;;  inputmin        2    6[BANK0 ] int 
  4202 ;;  inputmax        2    8[BANK0 ] int 
  4203 ;;  outmin          2   10[BANK0 ] int 
  4204 ;;  outmax          2   12[BANK0 ] int 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      unsigned char 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0      10       0       0       0
  4217 ;;      Locals:         0       0       0       0       0
  4218 ;;      Temps:          2       0       0       0       0
  4219 ;;      Totals:         2      10       0       0       0
  4220 ;;Total ram usage:       12 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 1
  4223 ;; This function calls:
  4224 ;;		___awdiv
  4225 ;;		___wmul
  4226 ;; This function is called by:
  4227 ;;		_isr
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231     0F60                     _map:	
  4232                           ;psect for function _map
  4233                           
  4234     0F60                     i1l1834:	
  4235                           ;incstack = 0
  4236                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4237                           
  4238                           
  4239                           ;main.c: 48:     return ((value - inputmin)*(outmax-outmin)) / (inputmax-inputmin)+outmi
      +                          n;}
  4240     0F60  1283               	bcf	3,5	;RP0=0, select bank0
  4241     0F61  1303               	bcf	3,6	;RP1=0, select bank0
  4242     0F62  0826               	movf	map@inputmin,w
  4243     0F63  0228               	subwf	map@inputmax,w
  4244     0F64  00F6               	movwf	___awdiv@divisor
  4245     0F65  0827               	movf	map@inputmin+1,w
  4246     0F66  1C03               	skipc
  4247     0F67  0A27               	incf	map@inputmin+1,w
  4248     0F68  0229               	subwf	map@inputmax+1,w
  4249     0F69  00F7               	movwf	___awdiv@divisor+1
  4250     0F6A  0826               	movf	map@inputmin,w
  4251     0F6B  0224               	subwf	map@value,w
  4252     0F6C  00F0               	movwf	___wmul@multiplier
  4253     0F6D  0827               	movf	map@inputmin+1,w
  4254     0F6E  1C03               	skipc
  4255     0F6F  0A27               	incf	map@inputmin+1,w
  4256     0F70  0225               	subwf	map@value+1,w
  4257     0F71  00F1               	movwf	___wmul@multiplier+1
  4258     0F72  082A               	movf	map@outmin,w
  4259     0F73  022C               	subwf	map@outmax,w
  4260     0F74  00F2               	movwf	___wmul@multiplicand
  4261     0F75  082B               	movf	map@outmin+1,w
  4262     0F76  1C03               	skipc
  4263     0F77  0A2B               	incf	map@outmin+1,w
  4264     0F78  022D               	subwf	map@outmax+1,w
  4265     0F79  00F3               	movwf	___wmul@multiplicand+1
  4266     0F7A  120A  158A  273B  120A  158A  	fcall	___wmul
  4267     0F7F  0871               	movf	?___wmul+1,w
  4268     0F80  00F9               	movwf	___awdiv@dividend+1
  4269     0F81  0870               	movf	?___wmul,w
  4270     0F82  00F8               	movwf	___awdiv@dividend
  4271     0F83  120A  118A  25A3  120A  158A  	fcall	___awdiv
  4272     0F88  0876               	movf	?___awdiv,w
  4273     0F89  00FB               	movwf	??_map
  4274     0F8A  0877               	movf	?___awdiv+1,w
  4275     0F8B  00FC               	movwf	??_map+1
  4276     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4277     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4278     0F8E  082A               	movf	map@outmin,w
  4279     0F8F  077B               	addwf	??_map,w
  4280     0F90                     i1l73:
  4281     0F90  0008               	return
  4282     0F91                     __end_of_map:
  4283                           
  4284                           	psect	text21
  4285     0F3B                     __ptext21:	
  4286 ;; *************** function ___wmul *****************
  4287 ;; Defined at:
  4288 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  multiplier      2    0[COMMON] unsigned int 
  4291 ;;  multiplicand    2    2[COMMON] unsigned int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  product         2    4[COMMON] unsigned int 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2    0[COMMON] unsigned int 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4303 ;;      Params:         4       0       0       0       0
  4304 ;;      Locals:         2       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0
  4306 ;;      Totals:         6       0       0       0       0
  4307 ;;Total ram usage:        6 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_map
  4313 ;;		_isr
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317     0F3B                     ___wmul:	
  4318                           ;psect for function ___wmul
  4319                           
  4320     0F3B                     i1l1698:	
  4321                           ;incstack = 0
  4322                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4323                           
  4324     0F3B  01F4               	clrf	___wmul@product
  4325     0F3C  01F5               	clrf	___wmul@product+1
  4326     0F3D                     i1l1700:
  4327     0F3D  1C70               	btfss	___wmul@multiplier,0
  4328     0F3E  2F40               	goto	u126_21
  4329     0F3F  2F41               	goto	u126_20
  4330     0F40                     u126_21:
  4331     0F40  2F47               	goto	i1l394
  4332     0F41                     u126_20:
  4333     0F41                     i1l1702:
  4334     0F41  0872               	movf	___wmul@multiplicand,w
  4335     0F42  07F4               	addwf	___wmul@product,f
  4336     0F43  1803               	skipnc
  4337     0F44  0AF5               	incf	___wmul@product+1,f
  4338     0F45  0873               	movf	___wmul@multiplicand+1,w
  4339     0F46  07F5               	addwf	___wmul@product+1,f
  4340     0F47                     i1l394:
  4341     0F47  3001               	movlw	1
  4342     0F48                     u127_25:
  4343     0F48  1003               	clrc
  4344     0F49  0DF2               	rlf	___wmul@multiplicand,f
  4345     0F4A  0DF3               	rlf	___wmul@multiplicand+1,f
  4346     0F4B  3EFF               	addlw	-1
  4347     0F4C  1D03               	skipz
  4348     0F4D  2F48               	goto	u127_25
  4349     0F4E                     i1l1704:
  4350     0F4E  3001               	movlw	1
  4351     0F4F                     u128_25:
  4352     0F4F  1003               	clrc
  4353     0F50  0CF1               	rrf	___wmul@multiplier+1,f
  4354     0F51  0CF0               	rrf	___wmul@multiplier,f
  4355     0F52  3EFF               	addlw	-1
  4356     0F53  1D03               	skipz
  4357     0F54  2F4F               	goto	u128_25
  4358     0F55                     i1l1706:
  4359     0F55  0870               	movf	___wmul@multiplier,w
  4360     0F56  0471               	iorwf	___wmul@multiplier+1,w
  4361     0F57  1D03               	btfss	3,2
  4362     0F58  2F5A               	goto	u129_21
  4363     0F59  2F5B               	goto	u129_20
  4364     0F5A                     u129_21:
  4365     0F5A  2F3D               	goto	i1l1700
  4366     0F5B                     u129_20:
  4367     0F5B                     i1l1708:
  4368     0F5B  0875               	movf	___wmul@product+1,w
  4369     0F5C  00F1               	movwf	?___wmul+1
  4370     0F5D  0874               	movf	___wmul@product,w
  4371     0F5E  00F0               	movwf	?___wmul
  4372     0F5F                     i1l396:
  4373     0F5F  0008               	return
  4374     0F60                     __end_of___wmul:
  4375                           
  4376                           	psect	text22
  4377     05A3                     __ptext22:	
  4378 ;; *************** function ___awdiv *****************
  4379 ;; Defined at:
  4380 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  divisor         2    6[COMMON] int 
  4383 ;;  dividend        2    8[COMMON] int 
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;  quotient        2    2[BANK0 ] int 
  4386 ;;  sign            1    1[BANK0 ] unsigned char 
  4387 ;;  counter         1    0[BANK0 ] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  2    6[COMMON] int 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4397 ;;      Params:         4       0       0       0       0
  4398 ;;      Locals:         0       4       0       0       0
  4399 ;;      Temps:          1       0       0       0       0
  4400 ;;      Totals:         5       4       0       0       0
  4401 ;;Total ram usage:        9 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_map
  4407 ;;		_isr
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411     05A3                     ___awdiv:	
  4412                           ;psect for function ___awdiv
  4413                           
  4414     05A3                     i1l1712:	
  4415                           ;incstack = 0
  4416                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4417                           
  4418     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  4419     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  4420     05A5  01A1               	clrf	___awdiv@sign
  4421     05A6                     i1l1714:
  4422     05A6  1FF7               	btfss	___awdiv@divisor+1,7
  4423     05A7  2DA9               	goto	u130_21
  4424     05A8  2DAA               	goto	u130_20
  4425     05A9                     u130_21:
  4426     05A9  2DB1               	goto	i1l1720
  4427     05AA                     u130_20:
  4428     05AA                     i1l1716:
  4429     05AA  09F6               	comf	___awdiv@divisor,f
  4430     05AB  09F7               	comf	___awdiv@divisor+1,f
  4431     05AC  0AF6               	incf	___awdiv@divisor,f
  4432     05AD  1903               	skipnz
  4433     05AE  0AF7               	incf	___awdiv@divisor+1,f
  4434     05AF                     i1l1718:
  4435     05AF  01A1               	clrf	___awdiv@sign
  4436     05B0  0AA1               	incf	___awdiv@sign,f
  4437     05B1                     i1l1720:
  4438     05B1  1FF9               	btfss	___awdiv@dividend+1,7
  4439     05B2  2DB4               	goto	u131_21
  4440     05B3  2DB5               	goto	u131_20
  4441     05B4                     u131_21:
  4442     05B4  2DBE               	goto	i1l1726
  4443     05B5                     u131_20:
  4444     05B5                     i1l1722:
  4445     05B5  09F8               	comf	___awdiv@dividend,f
  4446     05B6  09F9               	comf	___awdiv@dividend+1,f
  4447     05B7  0AF8               	incf	___awdiv@dividend,f
  4448     05B8  1903               	skipnz
  4449     05B9  0AF9               	incf	___awdiv@dividend+1,f
  4450     05BA                     i1l1724:
  4451     05BA  3001               	movlw	1
  4452     05BB  00FA               	movwf	??___awdiv
  4453     05BC  087A               	movf	??___awdiv,w
  4454     05BD  06A1               	xorwf	___awdiv@sign,f
  4455     05BE                     i1l1726:
  4456     05BE  01A2               	clrf	___awdiv@quotient
  4457     05BF  01A3               	clrf	___awdiv@quotient+1
  4458     05C0                     i1l1728:
  4459     05C0  0876               	movf	___awdiv@divisor,w
  4460     05C1  0477               	iorwf	___awdiv@divisor+1,w
  4461     05C2  1903               	btfsc	3,2
  4462     05C3  2DC5               	goto	u132_21
  4463     05C4  2DC6               	goto	u132_20
  4464     05C5                     u132_21:
  4465     05C5  2DFD               	goto	i1l1748
  4466     05C6                     u132_20:
  4467     05C6                     i1l1730:
  4468     05C6  01A0               	clrf	___awdiv@counter
  4469     05C7  0AA0               	incf	___awdiv@counter,f
  4470     05C8  2DD4               	goto	i1l1736
  4471     05C9                     i1l1732:
  4472     05C9  3001               	movlw	1
  4473     05CA                     u133_25:
  4474     05CA  1003               	clrc
  4475     05CB  0DF6               	rlf	___awdiv@divisor,f
  4476     05CC  0DF7               	rlf	___awdiv@divisor+1,f
  4477     05CD  3EFF               	addlw	-1
  4478     05CE  1D03               	skipz
  4479     05CF  2DCA               	goto	u133_25
  4480     05D0                     i1l1734:
  4481     05D0  3001               	movlw	1
  4482     05D1  00FA               	movwf	??___awdiv
  4483     05D2  087A               	movf	??___awdiv,w
  4484     05D3  07A0               	addwf	___awdiv@counter,f
  4485     05D4                     i1l1736:
  4486     05D4  1FF7               	btfss	___awdiv@divisor+1,7
  4487     05D5  2DD7               	goto	u134_21
  4488     05D6  2DD8               	goto	u134_20
  4489     05D7                     u134_21:
  4490     05D7  2DC9               	goto	i1l1732
  4491     05D8                     u134_20:
  4492     05D8                     i1l1738:
  4493     05D8  3001               	movlw	1
  4494     05D9                     u135_25:
  4495     05D9  1003               	clrc
  4496     05DA  0DA2               	rlf	___awdiv@quotient,f
  4497     05DB  0DA3               	rlf	___awdiv@quotient+1,f
  4498     05DC  3EFF               	addlw	-1
  4499     05DD  1D03               	skipz
  4500     05DE  2DD9               	goto	u135_25
  4501     05DF  0877               	movf	___awdiv@divisor+1,w
  4502     05E0  0279               	subwf	___awdiv@dividend+1,w
  4503     05E1  1D03               	skipz
  4504     05E2  2DE5               	goto	u136_25
  4505     05E3  0876               	movf	___awdiv@divisor,w
  4506     05E4  0278               	subwf	___awdiv@dividend,w
  4507     05E5                     u136_25:
  4508     05E5  1C03               	skipc
  4509     05E6  2DE8               	goto	u136_21
  4510     05E7  2DE9               	goto	u136_20
  4511     05E8                     u136_21:
  4512     05E8  2DF0               	goto	i1l1744
  4513     05E9                     u136_20:
  4514     05E9                     i1l1740:
  4515     05E9  0876               	movf	___awdiv@divisor,w
  4516     05EA  02F8               	subwf	___awdiv@dividend,f
  4517     05EB  0877               	movf	___awdiv@divisor+1,w
  4518     05EC  1C03               	skipc
  4519     05ED  03F9               	decf	___awdiv@dividend+1,f
  4520     05EE  02F9               	subwf	___awdiv@dividend+1,f
  4521     05EF                     i1l1742:
  4522     05EF  1422               	bsf	___awdiv@quotient,0
  4523     05F0                     i1l1744:
  4524     05F0  3001               	movlw	1
  4525     05F1                     u137_25:
  4526     05F1  1003               	clrc
  4527     05F2  0CF7               	rrf	___awdiv@divisor+1,f
  4528     05F3  0CF6               	rrf	___awdiv@divisor,f
  4529     05F4  3EFF               	addlw	-1
  4530     05F5  1D03               	skipz
  4531     05F6  2DF1               	goto	u137_25
  4532     05F7                     i1l1746:
  4533     05F7  3001               	movlw	1
  4534     05F8  02A0               	subwf	___awdiv@counter,f
  4535     05F9  1D03               	btfss	3,2
  4536     05FA  2DFC               	goto	u138_21
  4537     05FB  2DFD               	goto	u138_20
  4538     05FC                     u138_21:
  4539     05FC  2DD8               	goto	i1l1738
  4540     05FD                     u138_20:
  4541     05FD                     i1l1748:
  4542     05FD  0821               	movf	___awdiv@sign,w
  4543     05FE  1903               	btfsc	3,2
  4544     05FF  2E01               	goto	u139_21
  4545     0600  2E02               	goto	u139_20
  4546     0601                     u139_21:
  4547     0601  2E07               	goto	i1l1752
  4548     0602                     u139_20:
  4549     0602                     i1l1750:
  4550     0602  09A2               	comf	___awdiv@quotient,f
  4551     0603  09A3               	comf	___awdiv@quotient+1,f
  4552     0604  0AA2               	incf	___awdiv@quotient,f
  4553     0605  1903               	skipnz
  4554     0606  0AA3               	incf	___awdiv@quotient+1,f
  4555     0607                     i1l1752:
  4556     0607  0823               	movf	___awdiv@quotient+1,w
  4557     0608  00F7               	movwf	?___awdiv+1
  4558     0609  0822               	movf	___awdiv@quotient,w
  4559     060A  00F6               	movwf	?___awdiv
  4560     060B                     i1l547:
  4561     060B  0008               	return
  4562     060C                     __end_of___awdiv:
  4563                           
  4564                           	psect	text23
  4565     0672                     __ptext23:	
  4566 ;; *************** function ___awmod *****************
  4567 ;; Defined at:
  4568 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  divisor         2    4[BANK0 ] int 
  4571 ;;  dividend        2    6[BANK0 ] int 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  sign            1   13[COMMON] unsigned char 
  4574 ;;  counter         1   12[COMMON] unsigned char 
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  2    4[BANK0 ] int 
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         0       4       0       0       0
  4585 ;;      Locals:         2       0       0       0       0
  4586 ;;      Temps:          1       0       0       0       0
  4587 ;;      Totals:         3       4       0       0       0
  4588 ;;Total ram usage:        7 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; This function calls:
  4591 ;;		Nothing
  4592 ;; This function is called by:
  4593 ;;		_isr
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597     0672                     ___awmod:	
  4598                           ;psect for function ___awmod
  4599                           
  4600     0672                     i1l2124:	
  4601                           ;incstack = 0
  4602                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4603                           
  4604     0672  01FD               	clrf	___awmod@sign
  4605     0673                     i1l2126:
  4606     0673  1283               	bcf	3,5	;RP0=0, select bank0
  4607     0674  1303               	bcf	3,6	;RP1=0, select bank0
  4608     0675  1FA7               	btfss	___awmod@dividend+1,7
  4609     0676  2E78               	goto	u200_21
  4610     0677  2E79               	goto	u200_20
  4611     0678                     u200_21:
  4612     0678  2E80               	goto	i1l2132
  4613     0679                     u200_20:
  4614     0679                     i1l2128:
  4615     0679  09A6               	comf	___awmod@dividend,f
  4616     067A  09A7               	comf	___awmod@dividend+1,f
  4617     067B  0AA6               	incf	___awmod@dividend,f
  4618     067C  1903               	skipnz
  4619     067D  0AA7               	incf	___awmod@dividend+1,f
  4620     067E                     i1l2130:
  4621     067E  01FD               	clrf	___awmod@sign
  4622     067F  0AFD               	incf	___awmod@sign,f
  4623     0680                     i1l2132:
  4624     0680  1FA5               	btfss	___awmod@divisor+1,7
  4625     0681  2E83               	goto	u201_21
  4626     0682  2E84               	goto	u201_20
  4627     0683                     u201_21:
  4628     0683  2E89               	goto	i1l2136
  4629     0684                     u201_20:
  4630     0684                     i1l2134:
  4631     0684  09A4               	comf	___awmod@divisor,f
  4632     0685  09A5               	comf	___awmod@divisor+1,f
  4633     0686  0AA4               	incf	___awmod@divisor,f
  4634     0687  1903               	skipnz
  4635     0688  0AA5               	incf	___awmod@divisor+1,f
  4636     0689                     i1l2136:
  4637     0689  0824               	movf	___awmod@divisor,w
  4638     068A  0425               	iorwf	___awmod@divisor+1,w
  4639     068B  1903               	btfsc	3,2
  4640     068C  2E8E               	goto	u202_21
  4641     068D  2E8F               	goto	u202_20
  4642     068E                     u202_21:
  4643     068E  2EBE               	goto	i1l2154
  4644     068F                     u202_20:
  4645     068F                     i1l2138:
  4646     068F  01FC               	clrf	___awmod@counter
  4647     0690  0AFC               	incf	___awmod@counter,f
  4648     0691  2E9D               	goto	i1l2144
  4649     0692                     i1l2140:
  4650     0692  3001               	movlw	1
  4651     0693                     u203_25:
  4652     0693  1003               	clrc
  4653     0694  0DA4               	rlf	___awmod@divisor,f
  4654     0695  0DA5               	rlf	___awmod@divisor+1,f
  4655     0696  3EFF               	addlw	-1
  4656     0697  1D03               	skipz
  4657     0698  2E93               	goto	u203_25
  4658     0699                     i1l2142:
  4659     0699  3001               	movlw	1
  4660     069A  00FB               	movwf	??___awmod
  4661     069B  087B               	movf	??___awmod,w
  4662     069C  07FC               	addwf	___awmod@counter,f
  4663     069D                     i1l2144:
  4664     069D  1FA5               	btfss	___awmod@divisor+1,7
  4665     069E  2EA0               	goto	u204_21
  4666     069F  2EA1               	goto	u204_20
  4667     06A0                     u204_21:
  4668     06A0  2E92               	goto	i1l2140
  4669     06A1                     u204_20:
  4670     06A1                     i1l2146:
  4671     06A1  0825               	movf	___awmod@divisor+1,w
  4672     06A2  0227               	subwf	___awmod@dividend+1,w
  4673     06A3  1D03               	skipz
  4674     06A4  2EA7               	goto	u205_25
  4675     06A5  0824               	movf	___awmod@divisor,w
  4676     06A6  0226               	subwf	___awmod@dividend,w
  4677     06A7                     u205_25:
  4678     06A7  1C03               	skipc
  4679     06A8  2EAA               	goto	u205_21
  4680     06A9  2EAB               	goto	u205_20
  4681     06AA                     u205_21:
  4682     06AA  2EB1               	goto	i1l2150
  4683     06AB                     u205_20:
  4684     06AB                     i1l2148:
  4685     06AB  0824               	movf	___awmod@divisor,w
  4686     06AC  02A6               	subwf	___awmod@dividend,f
  4687     06AD  0825               	movf	___awmod@divisor+1,w
  4688     06AE  1C03               	skipc
  4689     06AF  03A7               	decf	___awmod@dividend+1,f
  4690     06B0  02A7               	subwf	___awmod@dividend+1,f
  4691     06B1                     i1l2150:
  4692     06B1  3001               	movlw	1
  4693     06B2                     u206_25:
  4694     06B2  1003               	clrc
  4695     06B3  0CA5               	rrf	___awmod@divisor+1,f
  4696     06B4  0CA4               	rrf	___awmod@divisor,f
  4697     06B5  3EFF               	addlw	-1
  4698     06B6  1D03               	skipz
  4699     06B7  2EB2               	goto	u206_25
  4700     06B8                     i1l2152:
  4701     06B8  3001               	movlw	1
  4702     06B9  02FC               	subwf	___awmod@counter,f
  4703     06BA  1D03               	btfss	3,2
  4704     06BB  2EBD               	goto	u207_21
  4705     06BC  2EBE               	goto	u207_20
  4706     06BD                     u207_21:
  4707     06BD  2EA1               	goto	i1l2146
  4708     06BE                     u207_20:
  4709     06BE                     i1l2154:
  4710     06BE  087D               	movf	___awmod@sign,w
  4711     06BF  1903               	btfsc	3,2
  4712     06C0  2EC2               	goto	u208_21
  4713     06C1  2EC3               	goto	u208_20
  4714     06C2                     u208_21:
  4715     06C2  2EC8               	goto	i1l2158
  4716     06C3                     u208_20:
  4717     06C3                     i1l2156:
  4718     06C3  09A6               	comf	___awmod@dividend,f
  4719     06C4  09A7               	comf	___awmod@dividend+1,f
  4720     06C5  0AA6               	incf	___awmod@dividend,f
  4721     06C6  1903               	skipnz
  4722     06C7  0AA7               	incf	___awmod@dividend+1,f
  4723     06C8                     i1l2158:
  4724     06C8  0827               	movf	___awmod@dividend+1,w
  4725     06C9  00A5               	movwf	?___awmod+1
  4726     06CA  0826               	movf	___awmod@dividend,w
  4727     06CB  00A4               	movwf	?___awmod
  4728     06CC                     i1l560:
  4729     06CC  0008               	return
  4730     06CD                     __end_of___awmod:
  4731                           
  4732                           	psect	text24
  4733     02BD                     __ptext24:	
  4734 ;; *************** function _ADC_read *****************
  4735 ;; Defined at:
  4736 ;;		line 73 in file "ADC.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  can             1    wreg     unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  can             1    4[COMMON] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  2    0[COMMON] unsigned int 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         2       0       0       0       0
  4751 ;;      Locals:         1       0       0       0       0
  4752 ;;      Temps:          2       0       0       0       0
  4753 ;;      Totals:         5       0       0       0       0
  4754 ;;Total ram usage:        5 bytes
  4755 ;; Hardware stack levels used: 1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_isr
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763     02BD                     _ADC_read:	
  4764                           ;psect for function _ADC_read
  4765                           
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _ADC_read: [wreg+status,2+status,0]
  4769                           ;ADC_read@can stored from wreg
  4770     02BD  00F4               	movwf	ADC_read@can
  4771     02BE                     i1l1974:
  4772                           
  4773                           ;ADC.c: 74:     if (can == 0){
  4774     02BE  0874               	movf	ADC_read@can,w
  4775     02BF  1D03               	btfss	3,2
  4776     02C0  2AC2               	goto	u179_21
  4777     02C1  2AC3               	goto	u179_20
  4778     02C2                     u179_21:
  4779     02C2  2ACF               	goto	i1l1980
  4780     02C3                     u179_20:
  4781     02C3                     i1l1976:
  4782                           
  4783                           ;ADC.c: 75:         ADCON0bits.CHS = 0b0000;
  4784     02C3  30C3               	movlw	-61
  4785     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  4786     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  4787     02C6  059F               	andwf	31,f	;volatile
  4788     02C7                     i1l1978:
  4789                           
  4790                           ;ADC.c: 76:         valor = ADRESH;
  4791     02C7  081E               	movf	30,w	;volatile
  4792     02C8  00F2               	movwf	??_ADC_read
  4793     02C9  01F3               	clrf	??_ADC_read+1
  4794     02CA  0872               	movf	??_ADC_read,w
  4795     02CB  00D0               	movwf	_valor
  4796     02CC  0873               	movf	??_ADC_read+1,w
  4797     02CD  00D1               	movwf	_valor+1
  4798                           
  4799                           ;ADC.c: 77:     }
  4800     02CE  2B77               	goto	i1l2058
  4801     02CF                     i1l1980:
  4802     02CF  0374               	decf	ADC_read@can,w
  4803     02D0  1D03               	btfss	3,2
  4804     02D1  2AD3               	goto	u180_21
  4805     02D2  2AD4               	goto	u180_20
  4806     02D3                     u180_21:
  4807     02D3  2ADB               	goto	i1l1986
  4808     02D4                     u180_20:
  4809     02D4                     i1l1982:
  4810                           
  4811                           ;ADC.c: 79:         ADCON0bits.CHS = 0b0001;
  4812     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4813     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4814     02D6  081F               	movf	31,w	;volatile
  4815     02D7  39C3               	andlw	-61
  4816     02D8  3804               	iorlw	4
  4817     02D9  009F               	movwf	31	;volatile
  4818     02DA  2AC7               	goto	i1l1978
  4819     02DB                     i1l1986:
  4820     02DB  3002               	movlw	2
  4821     02DC  0674               	xorwf	ADC_read@can,w
  4822     02DD  1D03               	btfss	3,2
  4823     02DE  2AE0               	goto	u181_21
  4824     02DF  2AE1               	goto	u181_20
  4825     02E0                     u181_21:
  4826     02E0  2AE8               	goto	i1l1992
  4827     02E1                     u181_20:
  4828     02E1                     i1l1988:
  4829                           
  4830                           ;ADC.c: 83:         ADCON0bits.CHS = 0b0010;
  4831     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  4832     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  4833     02E3  081F               	movf	31,w	;volatile
  4834     02E4  39C3               	andlw	-61
  4835     02E5  3808               	iorlw	8
  4836     02E6  009F               	movwf	31	;volatile
  4837     02E7  2AC7               	goto	i1l1978
  4838     02E8                     i1l1992:
  4839     02E8  3003               	movlw	3
  4840     02E9  0674               	xorwf	ADC_read@can,w
  4841     02EA  1D03               	btfss	3,2
  4842     02EB  2AED               	goto	u182_21
  4843     02EC  2AEE               	goto	u182_20
  4844     02ED                     u182_21:
  4845     02ED  2AF5               	goto	i1l1998
  4846     02EE                     u182_20:
  4847     02EE                     i1l1994:
  4848                           
  4849                           ;ADC.c: 87:         ADCON0bits.CHS = 0b0011;
  4850     02EE  1283               	bcf	3,5	;RP0=0, select bank0
  4851     02EF  1303               	bcf	3,6	;RP1=0, select bank0
  4852     02F0  081F               	movf	31,w	;volatile
  4853     02F1  39C3               	andlw	-61
  4854     02F2  380C               	iorlw	12
  4855     02F3  009F               	movwf	31	;volatile
  4856     02F4  2AC7               	goto	i1l1978
  4857     02F5                     i1l1998:
  4858     02F5  3004               	movlw	4
  4859     02F6  0674               	xorwf	ADC_read@can,w
  4860     02F7  1D03               	btfss	3,2
  4861     02F8  2AFA               	goto	u183_21
  4862     02F9  2AFB               	goto	u183_20
  4863     02FA                     u183_21:
  4864     02FA  2B02               	goto	i1l2004
  4865     02FB                     u183_20:
  4866     02FB                     i1l2000:
  4867                           
  4868                           ;ADC.c: 91:         ADCON0bits.CHS = 0b0100;
  4869     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  4870     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  4871     02FD  081F               	movf	31,w	;volatile
  4872     02FE  39C3               	andlw	-61
  4873     02FF  3810               	iorlw	16
  4874     0300  009F               	movwf	31	;volatile
  4875     0301  2AC7               	goto	i1l1978
  4876     0302                     i1l2004:
  4877     0302  3005               	movlw	5
  4878     0303  0674               	xorwf	ADC_read@can,w
  4879     0304  1D03               	btfss	3,2
  4880     0305  2B07               	goto	u184_21
  4881     0306  2B08               	goto	u184_20
  4882     0307                     u184_21:
  4883     0307  2B0F               	goto	i1l2010
  4884     0308                     u184_20:
  4885     0308                     i1l2006:
  4886                           
  4887                           ;ADC.c: 95:         ADCON0bits.CHS = 0b0101;
  4888     0308  1283               	bcf	3,5	;RP0=0, select bank0
  4889     0309  1303               	bcf	3,6	;RP1=0, select bank0
  4890     030A  081F               	movf	31,w	;volatile
  4891     030B  39C3               	andlw	-61
  4892     030C  3814               	iorlw	20
  4893     030D  009F               	movwf	31	;volatile
  4894     030E  2AC7               	goto	i1l1978
  4895     030F                     i1l2010:
  4896     030F  3006               	movlw	6
  4897     0310  0674               	xorwf	ADC_read@can,w
  4898     0311  1D03               	btfss	3,2
  4899     0312  2B14               	goto	u185_21
  4900     0313  2B15               	goto	u185_20
  4901     0314                     u185_21:
  4902     0314  2B1C               	goto	i1l2016
  4903     0315                     u185_20:
  4904     0315                     i1l2012:
  4905                           
  4906                           ;ADC.c: 99:         ADCON0bits.CHS = 0b0110;
  4907     0315  1283               	bcf	3,5	;RP0=0, select bank0
  4908     0316  1303               	bcf	3,6	;RP1=0, select bank0
  4909     0317  081F               	movf	31,w	;volatile
  4910     0318  39C3               	andlw	-61
  4911     0319  3818               	iorlw	24
  4912     031A  009F               	movwf	31	;volatile
  4913     031B  2AC7               	goto	i1l1978
  4914     031C                     i1l2016:
  4915     031C  3007               	movlw	7
  4916     031D  0674               	xorwf	ADC_read@can,w
  4917     031E  1D03               	btfss	3,2
  4918     031F  2B21               	goto	u186_21
  4919     0320  2B22               	goto	u186_20
  4920     0321                     u186_21:
  4921     0321  2B29               	goto	i1l2022
  4922     0322                     u186_20:
  4923     0322                     i1l2018:
  4924                           
  4925                           ;ADC.c: 103:         ADCON0bits.CHS = 0b0111;
  4926     0322  1283               	bcf	3,5	;RP0=0, select bank0
  4927     0323  1303               	bcf	3,6	;RP1=0, select bank0
  4928     0324  081F               	movf	31,w	;volatile
  4929     0325  39C3               	andlw	-61
  4930     0326  381C               	iorlw	28
  4931     0327  009F               	movwf	31	;volatile
  4932     0328  2AC7               	goto	i1l1978
  4933     0329                     i1l2022:
  4934     0329  3008               	movlw	8
  4935     032A  0674               	xorwf	ADC_read@can,w
  4936     032B  1D03               	btfss	3,2
  4937     032C  2B2E               	goto	u187_21
  4938     032D  2B2F               	goto	u187_20
  4939     032E                     u187_21:
  4940     032E  2B36               	goto	i1l2028
  4941     032F                     u187_20:
  4942     032F                     i1l2024:
  4943                           
  4944                           ;ADC.c: 107:         ADCON0bits.CHS = 0b1000;
  4945     032F  1283               	bcf	3,5	;RP0=0, select bank0
  4946     0330  1303               	bcf	3,6	;RP1=0, select bank0
  4947     0331  081F               	movf	31,w	;volatile
  4948     0332  39C3               	andlw	-61
  4949     0333  3820               	iorlw	32
  4950     0334  009F               	movwf	31	;volatile
  4951     0335  2AC7               	goto	i1l1978
  4952     0336                     i1l2028:
  4953     0336  3009               	movlw	9
  4954     0337  0674               	xorwf	ADC_read@can,w
  4955     0338  1D03               	btfss	3,2
  4956     0339  2B3B               	goto	u188_21
  4957     033A  2B3C               	goto	u188_20
  4958     033B                     u188_21:
  4959     033B  2B43               	goto	i1l2034
  4960     033C                     u188_20:
  4961     033C                     i1l2030:
  4962                           
  4963                           ;ADC.c: 111:         ADCON0bits.CHS = 0b1001;
  4964     033C  1283               	bcf	3,5	;RP0=0, select bank0
  4965     033D  1303               	bcf	3,6	;RP1=0, select bank0
  4966     033E  081F               	movf	31,w	;volatile
  4967     033F  39C3               	andlw	-61
  4968     0340  3824               	iorlw	36
  4969     0341  009F               	movwf	31	;volatile
  4970     0342  2AC7               	goto	i1l1978
  4971     0343                     i1l2034:
  4972     0343  300A               	movlw	10
  4973     0344  0674               	xorwf	ADC_read@can,w
  4974     0345  1D03               	btfss	3,2
  4975     0346  2B48               	goto	u189_21
  4976     0347  2B49               	goto	u189_20
  4977     0348                     u189_21:
  4978     0348  2B50               	goto	i1l2040
  4979     0349                     u189_20:
  4980     0349                     i1l2036:
  4981                           
  4982                           ;ADC.c: 115:         ADCON0bits.CHS = 0b1010;
  4983     0349  1283               	bcf	3,5	;RP0=0, select bank0
  4984     034A  1303               	bcf	3,6	;RP1=0, select bank0
  4985     034B  081F               	movf	31,w	;volatile
  4986     034C  39C3               	andlw	-61
  4987     034D  3828               	iorlw	40
  4988     034E  009F               	movwf	31	;volatile
  4989     034F  2AC7               	goto	i1l1978
  4990     0350                     i1l2040:
  4991     0350  300B               	movlw	11
  4992     0351  0674               	xorwf	ADC_read@can,w
  4993     0352  1D03               	btfss	3,2
  4994     0353  2B55               	goto	u190_21
  4995     0354  2B56               	goto	u190_20
  4996     0355                     u190_21:
  4997     0355  2B5D               	goto	i1l2046
  4998     0356                     u190_20:
  4999     0356                     i1l2042:
  5000                           
  5001                           ;ADC.c: 119:         ADCON0bits.CHS = 0b1011;
  5002     0356  1283               	bcf	3,5	;RP0=0, select bank0
  5003     0357  1303               	bcf	3,6	;RP1=0, select bank0
  5004     0358  081F               	movf	31,w	;volatile
  5005     0359  39C3               	andlw	-61
  5006     035A  382C               	iorlw	44
  5007     035B  009F               	movwf	31	;volatile
  5008     035C  2AC7               	goto	i1l1978
  5009     035D                     i1l2046:
  5010     035D  300C               	movlw	12
  5011     035E  0674               	xorwf	ADC_read@can,w
  5012     035F  1D03               	btfss	3,2
  5013     0360  2B62               	goto	u191_21
  5014     0361  2B63               	goto	u191_20
  5015     0362                     u191_21:
  5016     0362  2B6A               	goto	i1l2052
  5017     0363                     u191_20:
  5018     0363                     i1l2048:
  5019                           
  5020                           ;ADC.c: 123:         ADCON0bits.CHS = 0b1100;
  5021     0363  1283               	bcf	3,5	;RP0=0, select bank0
  5022     0364  1303               	bcf	3,6	;RP1=0, select bank0
  5023     0365  081F               	movf	31,w	;volatile
  5024     0366  39C3               	andlw	-61
  5025     0367  3830               	iorlw	48
  5026     0368  009F               	movwf	31	;volatile
  5027     0369  2AC7               	goto	i1l1978
  5028     036A                     i1l2052:
  5029     036A  300D               	movlw	13
  5030     036B  0674               	xorwf	ADC_read@can,w
  5031     036C  1D03               	btfss	3,2
  5032     036D  2B6F               	goto	u192_21
  5033     036E  2B70               	goto	u192_20
  5034     036F                     u192_21:
  5035     036F  2B77               	goto	i1l274
  5036     0370                     u192_20:
  5037     0370                     i1l2054:
  5038                           
  5039                           ;ADC.c: 127:         ADCON0bits.CHS = 0b1101;
  5040     0370  1283               	bcf	3,5	;RP0=0, select bank0
  5041     0371  1303               	bcf	3,6	;RP1=0, select bank0
  5042     0372  081F               	movf	31,w	;volatile
  5043     0373  39C3               	andlw	-61
  5044     0374  3834               	iorlw	52
  5045     0375  009F               	movwf	31	;volatile
  5046     0376  2AC7               	goto	i1l1978
  5047     0377                     i1l274:
  5048     0377                     i1l2058:
  5049                           
  5050                           ;ADC.c: 130:     return valor;
  5051     0377  1283               	bcf	3,5	;RP0=0, select bank0
  5052     0378  1303               	bcf	3,6	;RP1=0, select bank0
  5053     0379  0851               	movf	_valor+1,w
  5054     037A  00F1               	movwf	?_ADC_read+1
  5055     037B  0850               	movf	_valor,w
  5056     037C  00F0               	movwf	?_ADC_read
  5057     037D                     i1l280:
  5058     037D  0008               	return
  5059     037E                     __end_of_ADC_read:
  5060     007E                     btemp	set	126	;btemp
  5061     007E                     wtemp0	set	126
  5062                           
  5063                           	psect	idloc
  5064                           
  5065                           ;Config register IDLOC0 @ 0x2000
  5066                           ;	unspecified, using default values
  5067     2000                     	org	8192
  5068     2000  3FFF               	dw	16383
  5069                           
  5070                           ;Config register IDLOC1 @ 0x2001
  5071                           ;	unspecified, using default values
  5072     2001                     	org	8193
  5073     2001  3FFF               	dw	16383
  5074                           
  5075                           ;Config register IDLOC2 @ 0x2002
  5076                           ;	unspecified, using default values
  5077     2002                     	org	8194
  5078     2002  3FFF               	dw	16383
  5079                           
  5080                           ;Config register IDLOC3 @ 0x2003
  5081                           ;	unspecified, using default values
  5082     2003                     	org	8195
  5083     2003  3FFF               	dw	16383
  5084                           
  5085                           	psect	config
  5086                           
  5087                           ;Config register CONFIG1 @ 0x2007
  5088                           ;	Oscillator Selection bits
  5089                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5090                           ;	Watchdog Timer Enable bit
  5091                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5092                           ;	Power-up Timer Enable bit
  5093                           ;	PWRTE = OFF, PWRT disabled
  5094                           ;	RE3/MCLR pin function select bit
  5095                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5096                           ;	Code Protection bit
  5097                           ;	CP = OFF, Program memory code protection is disabled
  5098                           ;	Data Code Protection bit
  5099                           ;	CPD = OFF, Data memory code protection is disabled
  5100                           ;	Brown Out Reset Selection bits
  5101                           ;	BOREN = OFF, BOR disabled
  5102                           ;	Internal External Switchover bit
  5103                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5104                           ;	Fail-Safe Clock Monitor Enabled bit
  5105                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5106                           ;	Low Voltage Programming Enable bit
  5107                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5108                           ;	In-Circuit Debugger Mode bit
  5109                           ;	DEBUG = 0x1, unprogramme  5110     2007                     	org	8199
  5111     2007  20D4               	dw	8404
  5112                           
  5113                           ;Config register CONFIG2 @ 0x2008
  5114                           ;	Brown-out Reset Selection bit
  5115                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5116                           ;	Flash Program Memory Self Write Enable bits
  5117                           ;	WRT = OFF, Write protection off
  5118     2008                     	org	8200
  5119     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    10
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      51
    BANK1            80     11      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_5(CODE[10]), STR_4(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK1[20]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awmod
    _isr->___lwdiv
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _map->___awdiv
    ___awdiv->___wmul
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_ADC_config
    _main->_ADC_setup
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Port
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_sprintf
    _sprintf->___lwmod
    _map->___awdiv
    ___awmod->___awdiv

Critical Paths under _main in BANK1

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2976
                         _ADC_config
                          _ADC_setup
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     764
                                              4 BANK1      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              0 BANK1      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1315
                                              3 BANK1      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     434
                                              3 BANK1      2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              0 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_setup                                            1     1      0       0
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           1     1      0     308
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0    9829
                                             23 BANK0      6     6      0
                           _ADC_read
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                                _map
                            _sprintf
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   7     5      2     320
                                              5 COMMON     7     5      2
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     6     5      1     702
                                              4 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             25    18      7    1928
                                              6 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     615
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _map                                                 12     2     10    2826
                                             11 COMMON     2     2      0
                                              4 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     756
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     600
                                             11 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _ADC_read                                             5     3      2     308
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _ADC_setup
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _isr (ROOT)
   _ADC_read
   ___awdiv
     ___wmul (ARG)
   ___awmod
     ___awdiv (ARG)
     ___wmul (ARG)
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
     ___wmul (ARG)
   ___wmul
   _map
     ___awdiv
     ___wmul
   _sprintf
     ___lwdiv
     ___lwmod
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      B      1F       7       38.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jan 27 08:47:21 2023

                         pc 0002                 map@inputmax 0028                 map@inputmin 0026  
                        l93 0ED8                ___awdiv@sign 0021                          fsr 0004  
       ___wmul@multiplicand 0072                         l120 0EF0                         l112 0EE2  
                       l122 0EF1                         l114 0EE3                         l130 0F18  
                       l124 0EF7                         l116 0EE9                         l133 0EA8  
                       l118 0EEA                         l127 0EF8                         l143 0414  
                       l250 04A5                         l146 05A2                         l219 0EC0  
                       l139 0414                         l155 0720                         l149 07E5  
                       l248 04A2                         _map 0F60                         _isr 002A  
                       fsr0 0004                         indf 0000                ___awmod@sign 007D  
                      l2400 0F0A                        l2402 0F15                        l2410 07B3  
                      l2404 0E9C                        l2420 07D8                        l2412 07C3  
                      l2500 062F                        l2430 0541                        l2422 07DB  
                      l2414 07C6                        l2406 07AA                        l2510 0663  
                      l2502 0639                        l2432 054C                        l2440 0386  
                      l2424 07E2                        l2416 07CD                        l2408 07B0  
                      l2504 0644                        l2434 055D                        l2426 0533  
                      l2450 03AB                        l2442 0393                        l2418 07D0  
                      l2506 064E                        l1900 0480                        l2436 0563  
                      l2428 053B                        l2460 03D0                        l2452 03B8  
                      l2444 0396                        l2508 0659                        l1910 0498  
                      l1902 0484                        l2390 0EEE                        l2470 03F5  
                      l2462 03DD                        l2454 03BB                        l2446 039C  
                      l2438 0381                        l1912 049E                        l1904 048A  
                      l2392 0EF5                        l2384 0EDC                        l2472 0402  
                      l2464 03E0                        l2456 03C1                        l2448 03A5  
                      l2480 06D2                        l1840 0ECF                        l1906 048E  
                      l2386 0EE0                        l2394 0EFC                        l2474 0405  
                      l2466 03E6                        l2458 03CA                        l2482 06F6  
                      l1850 0ED6                        l1842 0ED0                        l2490 0616  
                      l1908 0494                        l1860 041D                        l2388 0EE7  
                      l2396 0EFF                        l2476 040B                        l2468 03EF  
                      l2484 06FE                        l1852 0ED7                        l1844 0ED1  
                      l2492 061C                        l1870 0434                        l1862 0421  
                      l1854 0EA9                        l2398 0F07                        l2478 06CD  
                      l1846 0ED4                        l1838 0EC1                        l2494 0622  
                      l2486 060C                        l1880 044E                        l1872 043A  
                      l1864 0426                        l1856 0EB9                        l1848 0ED5  
                      l2496 0627                        l2488 0611                        l1890 0466  
                      l1882 0452                        l1874 043E                        l1866 042A  
                      l1858 0418                        l2498 062C                        l1892 046C  
                      l1884 0458                        l1876 0444                        l1868 0430  
                      l1894 0470                        l1886 045C                        l1878 0448  
                      ?_map 0024                        l1896 0476                        l1888 0462  
                      l1898 047A                        ?_isr 0070                        STR_1 0828  
                      STR_2 0824                        STR_3 082C                        STR_4 081A  
                      STR_5 081A                        u2310 0EE0                        u2311 0EDF  
                      u1600 0458                        u2320 0EE7                        u2400 03D0  
                      u1601 0457                        u2321 0EE6                        u2401 03CF  
                      u1610 0462                        u2330 0EEE                        u1611 0461  
                      u2331 0EED                        u1620 046C                        u1540 041D  
                      u2340 0EF5                        u2420 03F5                        u1621 046B  
                      u1541 041C                        u2341 0EF4                        u2421 03F4  
                      u1630 0476                        u1550 0426                        u1631 0475  
                      u1551 0425                        u2415 03D6                        u1640 0480  
                      u1560 0430                        u2360 0386                        u2440 06DE  
                      u1641 047F                        u1561 042F                        u2361 0385  
                      u1650 048A                        u1570 043A                        u2450 0708  
                      u1651 0489                        u1571 0439                        u2435 03FB  
                      u2355 07B8                        u1660 0494                        u1580 0444  
                      u2380 03AB                        u2460 0720                        u1661 0493  
                      u1581 0443                        u2381 03AA                        u2461 071F  
                      u1670 049E                        u1590 044E                        u1671 049D  
                      u1591 044D                        u2607 0F10                        u2375 038C  
                      u2617 0EBD                        u2395 03B1                        u2557 07CA  
                      u2567 07DF                        u2577 0547                        u2587 0558  
                      u2597 0569                        i1l73 0F90                        i1l90 01D6  
         ?_Lcd_Write_String 00B8                        _main 060C                        _vol1 0052  
                      _vol2 004A                        btemp 007E                        start 0012  
        ??_Lcd_Write_String 00BA            __end_of_ADC_read 037E             __end_of_Lcd_Cmd 0F19  
                     ??_map 007B                       ??_isr 0037                       ?_main 0070  
           __end_of___awdiv 060C             __end_of___awmod 06CD             ___awdiv@divisor 0076  
           __end_of___lwdiv 0765                       i1l120 0F32                       i1l112 0F22  
                     i1l122 0F33                       i1l114 0F25                       i1l130 07FF  
                     i1l124 0F39                       i1l116 0F2B                       i1l118 0F2C  
                     i1l127 0F3A                       i1l143 0532                       i1l139 0532  
                     i1l155 07A6                       i1l149 0FC3                       i1l280 037D  
           __end_of___lwmod 1000                       i1l274 0377                       i1l390 02BC  
                     i1l560 06CC                       i1l394 0F47                       i1l547 060B  
                     i1l396 0F5F                       i1l666 0764                       i1l676 0FFF  
         ?i1_Lcd_Set_Cursor 0074             ___awdiv@counter 0020                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TXREG 0019                 ?i1_Lcd_Port 0070          ??i1_Lcd_Set_Cursor 0075  
           __end_of_dpowers 081A                       _valor 0050                       _setup 0EC1  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 02BD           __end_of_ADC_setup 0EC1            __end_of_Lcd_Init 05A3  
          __end_of_Lcd_Port 0EF9             __initialization 0015                __end_of_main 0672  
                    ??_main 003E                      _ADRESH 001E            ___awdiv@dividend 0078  
                    ?_setup 0070                      _ANSELH 0189                      i1l2000 02FB  
                    i1l2010 030F                      i1l2012 0315                      i1l2004 0302  
                    i1l2100 025C                      i1l2030 033C                      i1l2022 0329  
                    i1l2006 0308                      i1l2110 029B                      i1l2102 0261  
                    i1l2040 0350                      i1l2024 032F                      i1l2016 031C  
                    i1l2112 029F                      i1l2104 0265                      i1l2200 052B  
                    i1l2042 0356                      i1l2034 0343                      i1l2018 0322  
                    i1l2130 067E                      i1l2106 0268                      i1l2114 02A8  
                    i1l2202 0765                      i1l2052 036A                      i1l2036 0349  
                    i1l2028 0336                      i1l2140 0692                      i1l2132 0680  
                    i1l2124 0672                      i1l2108 0296                      i1l2116 02B8  
                    i1l2204 0768                      i1l2054 0370                      i1l2046 035D  
                    i1l2150 06B1                      i1l2142 0699                      i1l2134 0684  
                    i1l2126 0673                      i1l2070 01F7                      i1l2062 01E4  
                    i1l2206 0784                      i1l2048 0363                      i1l2152 06B8  
                    i1l2144 069D                      i1l2136 0689                      i1l2128 0679  
                    u200_20 0679                      i1l2080 0221                      i1l2064 01E7  
                    i1l2208 078A                      i1l2240 0037                      u200_21 0678  
                    i1l2058 0377                      i1l2146 06A1                      i1l2138 068F  
                    i1l2154 06BE                      i1l2082 0225                      i1l2074 01F8  
                    i1l2066 01ED                      i1l2170 04C2                      i1l2162 04A7  
                    i1l2250 010E                      i1l2242 00DF                      i1l2156 06C3  
                    i1l2148 06AB                      i1l1700 0F3D                      i1l2092 0230  
                    i1l2084 0229                      i1l2076 0215                      i1l2068 01F2  
                    i1l2180 04E5                      i1l2164 04AC                      i1l2172 04C9  
                    i1l2252 01B2                      i1l2244 00F5                      i1l2236 002A  
                    i1l2158 06C8                      i1l1702 0F41                      i1l2086 022E  
                    i1l2078 021D                      i1l2190 0508                      i1l2174 04CF  
                    i1l2182 04EC                      i1l2166 04B9                      i1l2254 01C8  
                    i1l2246 00FE                      i1l2238 002E                      u201_20 0684  
                    i1l1720 05B1                      i1l1712 05A3                      i1l1704 0F4E  
                    i1l1800 0FFB                      i1l2096 024C                      u121_20 0F1E  
                    i1l2184 04F2                      i1l2192 050F                      i1l2176 04DC  
                    i1l2168 04BC                      i1l2256 01D1                      i1l2248 0105  
                    u201_21 0683                      u121_21 0F1D                      i1l1730 05C6  
                    i1l1722 05B5                      i1l1714 05A6                      i1l1706 0F55  
                    i1l2098 0256                      i1l1810 07F3                      i1l2194 0515  
                    i1l2186 04FF                      i1l2178 04DF                      i1l2258 01D5  
                    i1l1740 05E9                      i1l1732 05C9                      i1l1724 05BA  
                    i1l1716 05AA                      i1l1708 0F5B                      i1l1812 07FC  
                    i1l1804 07E7                      i1l2196 0522                      i1l2188 0502  
                    i1l1820 0FA9                      i1l1750 0602                      i1l1742 05EF  
                    i1l1734 05D0                      i1l1726 05BE                      i1l1718 05AF  
                    i1l1670 0F29                      i1l1806 07EA                      i1l2198 0525  
                    i1l1830 0FBC                      i1l1822 0FAC                      i1l1814 0F92  
                    u202_20 068F                      i1l1752 0607                      i1l1744 05F0  
                    i1l1736 05D4                      i1l1728 05C0                      u130_20 05AA  
                    i1l1760 0729                      i1l1672 0F30                      u122_20 0F29  
                    i1l1808 07F0                      i1l1832 0FC0                      i1l1824 0FB0  
                    i1l1816 0F98                      u202_21 068E                      u130_21 05A9  
                    u122_21 0F28                      i1l1746 05F7                      i1l1738 05D8  
                    i1l1834 0F60                      i1l1770 074C                      i1l1762 072C  
                    i1l1674 0F37                      i1l1666 0F1A                      i1l1826 0FB3  
                    i1l1818 0F9B                      i1l1748 05FD                      i1l1772 0752  
                    i1l1764 0733                      i1l1756 0721                      i1l2636 020A  
                    i1l1668 0F1E                      i1l1828 0FB9                      u210_25 04B2  
                    i1l1774 0753                      i1l1766 0737                      i1l1758 0723  
                    i1l1790 0FDA                      i1l1782 0FC4                      u131_20 05B5  
                    i1l1776 075A                      i1l1768 073B                      i1l1792 0FDE  
                    i1l1784 0FCC                      u123_20 0F30                      u211_20 04CF  
                    u131_21 05B4                      u123_21 0F2F                      u211_21 04CE  
                    i1l1698 0F3B                      i1l1778 0760                      i1l1794 0FE8  
                    i1l1786 0FCF                      i1l1980 02CF                      i1l1796 0FEE  
                    i1l1788 0FD6                      u203_25 0693                      i1l1982 02D4  
                    i1l1974 02BE                      i1l1798 0FF5                      i1l1992 02E8  
                    i1l1976 02C3                      u204_20 06A1                      u132_20 05C6  
                    u140_20 0729                      u124_20 0F37                      u220_20 002E  
                    u204_21 06A0                      u132_21 05C5                      u140_21 0728  
                    u124_21 0F36                      u220_21 002D                      i1l1994 02EE  
                    i1l1986 02DB                      i1l1978 02C7                      i1l1988 02E1  
                    u212_25 04D5                      i1l1998 02F5                      u205_20 06AB  
                    u213_20 04F2                      u221_20 0037                      u205_21 06AA  
                    u213_21 04F1                      u221_21 0036                      u205_25 06A7  
                    u133_25 05CA                      u141_25 072D                      u134_20 05D8  
                    u126_20 0F41                      u142_20 073B                      u150_20 0FE8  
                    u222_20 010E                      u134_21 05D7                      u126_21 0F40  
                    u142_21 073A                      u150_21 0FE7                      u222_21 010D  
                    u206_25 06B2                      u150_25 0FE4                      u214_25 04F8  
                    u207_20 06BE                      u215_20 0515                      u207_21 06BD  
                    u215_21 0514                      u135_25 05D9                      u127_25 0F48  
                    u143_25 073C                      u151_25 0FEF                      u208_20 06C3  
                    u136_20 05E9                      u144_20 074C                      u152_20 0FFB  
                    u208_21 06C2                      u136_21 05E8                      u144_21 074B  
                    u152_21 0FFA                      u136_25 05E5                      u128_25 0F4F  
                    u144_25 0748                      u216_25 051B                      u129_20 0F5B  
                    u209_20 04AC                      u217_20 0772                      u129_21 0F5A  
                    u209_21 04AB                      u137_25 05F1                      u145_25 0754  
                    u153_25 0F9E                      u138_20 05FD                      u146_20 0760  
                    u218_20 0794                      u138_21 05FC                      u146_21 075F  
                    u139_20 0602                      u147_20 0FCC                      u219_20 07A6  
                    u139_21 0601                      u147_21 0FCB                      u219_21 07A5  
                    u180_20 02D4                      u180_21 02D3                      u148_25 0FD0  
                    u181_20 02E1                      u149_20 0FDE                      u181_21 02E0  
                    u149_21 0FDD                      u190_20 0356                      u182_20 02EE  
                    u190_21 0355                      u182_21 02ED                      u262_27 0FAE  
                    u191_20 0363                      u183_20 02FB                      u191_21 0362  
                    u183_21 02FA                      u263_27 0FBE                      u192_20 0370  
                    u184_20 0308                      u192_21 036F                      u184_21 0307  
                    u264_27 07F7                      u185_20 0315                      u193_20 01ED  
                    u185_21 0314                      u193_21 01EC                      u186_20 0322  
                    u194_20 0225                      u186_21 0321                      u194_21 0224  
                    u187_20 032F                      u179_20 02C3                      u195_20 024B  
                    u187_21 032E                      u179_21 02C2                      u195_21 024A  
                    u195_25 0247                      u188_20 033C                      u196_20 0256  
                    u188_21 033B                      u196_21 0255                      u189_20 0349  
                    u197_20 025C                      u189_21 0348                      u197_21 025B  
                    u198_20 02A8                      u198_21 02A7                      u199_20 02B8  
                    u199_21 02B7           ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 00B4  
        ??i1_Lcd_Write_Char 0071                ??_ADC_config 003D           __end_ofi1_Lcd_Cmd 0800  
         i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073                      ___wmul 0F3B  
                 ??___awdiv 007A                   ??___awmod 007B                   ??___lwdiv 007A  
                 ??___lwmod 0024                      _buffer 00A0            ___awdiv@quotient 0022  
           ___awmod@divisor 0024             ___awmod@counter 007C                      saved_w 007E  
                 ?_ADC_read 0070          __end_of_ADC_config 04A6                   ??_sprintf 002D  
           Lcd_Set_Cursor@a 00B9             Lcd_Set_Cursor@b 00B7             Lcd_Set_Cursor@y 00BB  
           Lcd_Set_Cursor@z 00BA     __end_of__initialization 0026           __end_of_Lcd_Clear 0EA9  
            __pcstackCOMMON 0070               __end_of_setup 0ED9              _Lcd_Set_Cursor 037E  
                ??_ADC_read 0072                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                   ??_setup 003D                  __pbssBANK0 003E                  __pbssBANK1 00A0  
                __pmaintext 060C                     ?___wmul 0070                  _centesima1 0044  
                _centesima2 003E                  __pintentry 0004      __end_of_Lcd_Set_Cursor 0415  
              ??i1_Lcd_Port 0070                  ??_Lcd_Init 00B7                  ??_Lcd_Port 003D  
                __stringtab 0800              _Lcd_Write_Char 07A7                     _Lcd_Cmd 0EF9  
                 _ADC_setup 0EA9          __end_ofi1_Lcd_Port 0F3B                     ___awdiv 05A3  
                   ___awmod 0672                     ___lwdiv 0721                     ___lwmod 0FC4  
                   _decima1 0046                     _decima2 0040                   _ANSELbits 0188  
           ?_Lcd_Set_Cursor 00B7                     __ptext1 0EC1                     __ptext2 06CD  
                   __ptext3 07A7                     __ptext4 037E                     __ptext5 0533  
                   __ptext6 0E9C                     __ptext7 0EF9                     __ptext8 0ED9  
                   __ptext9 0EA9                     _dpowers 0810            ___awmod@dividend 0026  
                   _unidad1 0048                     _unidad2 0042  __end_ofi1_Lcd_Write_String 07A7  
                   _sprintf 01E1                     clrloop0 0E95      __end_of_Lcd_Write_Char 07E6  
      end_of_initialization 0026                  ?_ADC_setup 0070                   Lcd_Port@a 003D  
                 i1_Lcd_Cmd 07E6                   _PORTBbits 0006                   _TRISBbits 0086  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 00B8           Lcd_Write_String@i 00BD  
                 _Lcd_Clear 0E9C              __end_of___wmul 0F60                  ?i1_Lcd_Cmd 0070  
          _Lcd_Write_String 06CD         start_initialization 0015                 __end_of_map 0F91  
               __end_of_isr 01E1           ADC_config@channel 003D            i1_Lcd_Set_Cursor 04A6  
               ??_ADC_setup 003D                  ?_Lcd_Clear 0070                    ??___wmul 0074  
           Lcd_Write_Char@a 00B7             Lcd_Write_Char@y 00B6                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00B4        i1Lcd_Write_Char@temp 0072  
                  ?_Lcd_Cmd 0070                 sprintf@flag 0031                 sprintf@prec 0032  
          ___lwdiv@dividend 0078            ??_Lcd_Set_Cursor 00B8                    ?___awdiv 0076  
                  ?___awmod 0024                    ?___lwdiv 0076                    ?___lwmod 0020  
          i1_Lcd_Write_Char 0F91                 ??i1_Lcd_Cmd 0071        i1Lcd_Set_Cursor@temp 0079  
                 __pstrings 0800                    _ADC_read 02BD            ___lwdiv@quotient 007B  
                  ?_sprintf 0026           interrupt_function 0004              ___wmul@product 0074  
                 clear_ram0 0E94                    _PIE1bits 008C          i1_Lcd_Write_String 0765  
                  Lcd_Cmd@a 00B6                    _PIR1bits 000C                 ??_Lcd_Clear 003E  
       ?i1_Lcd_Write_String 0075                  _ADCON0bits 001F                 __stringbase 080F  
                _ADCON1bits 009F           ___wmul@multiplier 0070                   map@outmax 002C  
                 map@outmin 002A            ??_Lcd_Write_Char 00B4                 ADC_read@can 0074  
                  _Lcd_Init 0533                    _Lcd_Port 0ED9        ??i1_Lcd_Write_String 0077  
  __end_of_Lcd_Write_String 0721                  _ADC_config 0415          __end_of__stringtab 0810  
  __end_ofi1_Lcd_Set_Cursor 0533                  _ANSELHbits 0189                  sprintf@val 0033  
           ___lwdiv@divisor 0076           i1Lcd_Set_Cursor@a 0076           i1Lcd_Set_Cursor@b 0074  
         i1Lcd_Set_Cursor@y 0078           i1Lcd_Set_Cursor@z 0077             ___lwdiv@counter 007D  
                  __ptext10 0415                    __ptext11 002A                    __ptext20 0F60  
                  __ptext12 0765                    __ptext21 0F3B                    __ptext13 0F91  
                  __ptext22 05A3                    __ptext14 04A6                    __ptext23 0672  
                  __ptext15 07E6                    __ptext24 02BD                    __ptext16 0F19  
                  __ptext17 01E1                    __ptext18 0FC4                    __ptext19 0721  
               i1Lcd_Port@a 0070                    map@value 0024         i1Lcd_Write_String@a 0075  
       i1Lcd_Write_String@i 007A                    _voltaje1 004E                    _voltaje2 004C  
                _INTCONbits 000B          Lcd_Write_Char@temp 00B5                    intlevel1 0000  
                 sprintf@ap 0030    __end_ofi1_Lcd_Write_Char 0FC4                   sprintf@sp 0035  
          ___lwmod@dividend 0022                  i1Lcd_Cmd@a 0073                   stringcode 080A  
                _OSCCONbits 008F                 ?_ADC_config 0070          Lcd_Set_Cursor@temp 00BC  
                  sprintf@c 0036                    sprintf@f 0026             ___lwmod@divisor 0020  
           ___lwmod@counter 0025                  i1_Lcd_Port 0F19                    stringdir 080A  
                  stringtab 0800  
